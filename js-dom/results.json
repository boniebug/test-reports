{"numFailedTestSuites":1,"numFailedTests":201,"numPassedTestSuites":0,"numPassedTests":3,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":204,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1724331995586,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["JS-DOM","Amarendra7062","colorChanger"],"duration":24,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Amarendra7062 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Amarendra7062","notes"],"duration":33,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Amarendra7062 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Amarendra7062","theme"],"duration":4,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Amarendra7062 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Amarendra7062","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Amarendra7062 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","AshwakKattubadi45","colorChanger"],"duration":4,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM AshwakKattubadi45 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","AshwakKattubadi45","notes"],"duration":4,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM AshwakKattubadi45 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","AshwakKattubadi45","theme"],"duration":4,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM AshwakKattubadi45 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","AshwakKattubadi45","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM AshwakKattubadi45 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Balaraju2007","colorChanger"],"duration":4,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Balaraju2007 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Balaraju2007","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Balaraju2007 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Balaraju2007","theme"],"duration":5,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Balaraju2007 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Balaraju2007","wordCounter"],"duration":11,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Balaraju2007 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Chandiniruttala","colorChanger"],"duration":167,"failureDetails":[],"failureMessages":[],"fullName":"JS-DOM Chandiniruttala colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Chandiniruttala","notes"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-DOM Chandiniruttala notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Chandiniruttala","theme"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-DOM Chandiniruttala theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Chandiniruttala","wordCounter"],"duration":40,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Missing space before function parentheses.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","'characterCount' is already declared in the upper scope on line 1 column 7.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Operator '=' must be spaced.","Newline required at end of file but not found.","Missing semicolon."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 12\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Missing space before function parentheses.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'characterCount' is already declared in the upper scope on line 1 column 7.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 12\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Missing space before function parentheses.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'characterCount' is already declared in the upper scope on line 1 column 7.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM Chandiniruttala wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Charantej21","colorChanger"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Charantej21 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Charantej21","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Charantej21 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Charantej21","theme"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Charantej21 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Charantej21","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Charantej21 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Dhanalaxmi-Mendadala","colorChanger"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Dhanalaxmi-Mendadala colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Dhanalaxmi-Mendadala","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Dhanalaxmi-Mendadala notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Dhanalaxmi-Mendadala","theme"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Dhanalaxmi-Mendadala theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Dhanalaxmi-Mendadala","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Dhanalaxmi-Mendadala wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","G-Rajini","colorChanger"],"duration":5,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM G-Rajini colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","G-Rajini","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM G-Rajini notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","G-Rajini","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM G-Rajini theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","G-Rajini","wordCounter"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM G-Rajini wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","GOWRIPRASADTW","colorChanger"],"duration":31,"failureDetails":[{"matcherResult":{"actual":["Too many blank lines at the beginning of file. Max of 0 allowed.","Expected indentation of 0 spaces but found 2.","Use the global form of 'use strict'.","Expected a function expression.","Expected indentation of 2 spaces but found 4.","There should be no space after this paren.","Strings must use singlequote.","Expected '===' and instead saw '=='.","Strings must use singlequote.","There should be no space before this paren.","Expected indentation of 4 spaces but found 14.","Strings must use singlequote.","Strings must use singlequote.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Closing curly brace does not appear on the same line as the subsequent block.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 5.","Strings must use singlequote.","Strings must use singlequote.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 0 spaces but found 3.","Expected indentation of 0 spaces but found 3.","Expected a function expression.","Expected indentation of 2 spaces but found 4.","There should be no space after this paren.","Strings must use singlequote.","Expected '===' and instead saw '=='.","Strings must use singlequote.","There should be no space before this paren.","Missing space before opening brace.","Expected indentation of 4 spaces but found 14.","Strings must use singlequote.","Strings must use singlequote.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Closing curly brace does not appear on the same line as the subsequent block.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 5.","Strings must use singlequote.","Strings must use singlequote.","Trailing spaces not allowed.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 0 spaces but found 3.","Expected indentation of 0 spaces but found 3.","Expected a function expression.","Expected indentation of 2 spaces but found 4.","There should be no space after this paren.","Strings must use singlequote.","Expected '===' and instead saw '=='.","Strings must use singlequote.","There should be no space before this paren.","Missing space before opening brace.","Expected indentation of 4 spaces but found 14.","Strings must use singlequote.","Strings must use singlequote.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Closing curly brace does not appear on the same line as the subsequent block.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 5.","Strings must use singlequote.","Strings must use singlequote.","Trailing spaces not allowed.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 0 spaces but found 3.","Trailing spaces not allowed.","Expected indentation of 0 spaces but found 3.","Expected a function expression.","Expected indentation of 2 spaces but found 4.","There should be no space after this paren.","Strings must use singlequote.","Expected '===' and instead saw '=='.","Strings must use singlequote.","There should be no space before this paren.","Missing space before opening brace.","Expected indentation of 4 spaces but found 14.","Strings must use singlequote.","Strings must use singlequote.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Closing curly brace does not appear on the same line as the subsequent block.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 5.","Strings must use singlequote.","Strings must use singlequote.","Trailing spaces not allowed.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 0 spaces but found 3.","Expected indentation of 0 spaces but found 3.","Expected a function expression.","Expected indentation of 2 spaces but found 4.","There should be no space after this paren.","Strings must use singlequote.","Expected '===' and instead saw '=='.","Strings must use singlequote.","There should be no space before this paren.","Missing space before opening brace.","Expected indentation of 4 spaces but found 14.","Strings must use singlequote.","Strings must use singlequote.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Closing curly brace does not appear on the same line as the subsequent block.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 5.","Strings must use singlequote.","Strings must use singlequote.","Trailing spaces not allowed.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 0 spaces but found 3.","Trailing spaces not allowed.","Too many blank lines at the end of file. Max of 0 allowed.","Trailing spaces not allowed.","Newline required at end of file but not found."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -   1\n+ Received  + 122\n\n- Array []\n+ Array [\n+   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected a function expression.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"There should be no space after this paren.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"There should be no space before this paren.\",\n+   \"Expected indentation of 4 spaces but found 14.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 5.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Expected a function expression.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"There should be no space after this paren.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"There should be no space before this paren.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 14.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 5.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Expected a function expression.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"There should be no space after this paren.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"There should be no space before this paren.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 14.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 5.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Expected a function expression.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"There should be no space after this paren.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"There should be no space before this paren.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 14.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 5.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Expected a function expression.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"There should be no space after this paren.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"There should be no space before this paren.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 14.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 5.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Too many blank lines at the end of file. Max of 0 allowed.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Newline required at end of file but not found.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -   1\n+ Received  + 122\n\n- Array []\n+ Array [\n+   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected a function expression.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"There should be no space after this paren.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"There should be no space before this paren.\",\n+   \"Expected indentation of 4 spaces but found 14.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 5.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Expected a function expression.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"There should be no space after this paren.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"There should be no space before this paren.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 14.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 5.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Expected a function expression.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"There should be no space after this paren.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"There should be no space before this paren.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 14.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 5.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Expected a function expression.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"There should be no space after this paren.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"There should be no space before this paren.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 14.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 5.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Expected a function expression.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"There should be no space after this paren.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"There should be no space before this paren.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 14.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 5.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 3.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Too many blank lines at the end of file. Max of 0 allowed.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Newline required at end of file but not found.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM GOWRIPRASADTW colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","GOWRIPRASADTW","notes"],"duration":4,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM GOWRIPRASADTW notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","GOWRIPRASADTW","theme"],"duration":18,"failureDetails":[{"matcherResult":{"actual":["Too many blank lines at the beginning of file. Max of 0 allowed.","Use the global form of 'use strict'.","Expected a function expression.","Expected indentation of 2 spaces but found 4.","There should be no space after this paren.","Strings must use singlequote.","Expected '===' and instead saw '=='.","Strings must use singlequote.","There should be no space before this paren.","Expected indentation of 4 spaces but found 14.","Strings must use singlequote.","Strings must use singlequote.","Missing semicolon.","Expected indentation of 4 spaces but found 14.","Strings must use singlequote.","Strings must use singlequote.","Block must not be padded by blank lines.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Closing curly brace does not appear on the same line as the subsequent block.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 5.","Strings must use singlequote.","Strings must use singlequote.","Missing semicolon.","Expected indentation of 4 spaces but found 5.","Strings must use singlequote.","Strings must use singlequote.","Block must not be padded by blank lines.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Newline required at end of file but not found."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 34\n\n- Array []\n+ Array [\n+   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected a function expression.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"There should be no space after this paren.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"There should be no space before this paren.\",\n+   \"Expected indentation of 4 spaces but found 14.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 4 spaces but found 14.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Block must not be padded by blank lines.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 5.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 4 spaces but found 5.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Block must not be padded by blank lines.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Newline required at end of file but not found.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 34\n\n- Array []\n+ Array [\n+   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected a function expression.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"There should be no space after this paren.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"There should be no space before this paren.\",\n+   \"Expected indentation of 4 spaces but found 14.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 4 spaces but found 14.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Block must not be padded by blank lines.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 5.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 4 spaces but found 5.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Block must not be padded by blank lines.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Newline required at end of file but not found.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM GOWRIPRASADTW theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","GOWRIPRASADTW","wordCounter"],"duration":6,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM GOWRIPRASADTW wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Harshavardhanlav","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Harshavardhanlav colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Harshavardhanlav","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Harshavardhanlav notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Harshavardhanlav","theme"],"duration":4,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Harshavardhanlav theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Harshavardhanlav","wordCounter"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Harshavardhanlav wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","HemPradeepthummala","colorChanger"],"duration":32,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Expected a function expression.","Missing space before opening brace.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected space(s) after \"if\".","Missing space before opening brace.","Expected indentation of 4 spaces but found 6.","Operator '=' must be spaced.","Expected indentation of 2 spaces but found 4.","Expected space(s) before \"else\".","Expected space(s) after \"else\".","Expected indentation of 4 spaces but found 6.","Operator '=' must be spaced.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 0 spaces but found 2.","Expected indentation of 0 spaces but found 2.","Expected a function expression.","Missing space before opening brace.","Expected indentation of 2 spaces but found 4.","Trailing spaces not allowed.","Expected indentation of 2 spaces but found 4.","Expected space(s) after \"if\".","Missing space before opening brace.","Expected indentation of 4 spaces but found 6.","Operator '=' must be spaced.","Expected indentation of 2 spaces but found 4.","Expected space(s) before \"else\".","Expected space(s) after \"else\".","Expected indentation of 4 spaces but found 6.","Operator '=' must be spaced.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 0 spaces but found 2.","Expected indentation of 0 spaces but found 2.","Expected a function expression.","Missing space before opening brace.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected space(s) after \"if\".","Missing space before opening brace.","Expected indentation of 4 spaces but found 6.","Operator '=' must be spaced.","Expected indentation of 2 spaces but found 4.","Expected space(s) before \"else\".","Expected space(s) after \"else\".","Expected indentation of 4 spaces but found 6.","Operator '=' must be spaced.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 0 spaces but found 2.","Trailing spaces not allowed.","Expected indentation of 0 spaces but found 2.","Expected a function expression.","Missing space before opening brace.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected space(s) after \"if\".","Missing space before opening brace.","Expected indentation of 4 spaces but found 6.","Operator '=' must be spaced.","Expected indentation of 2 spaces but found 4.","Expected space(s) before \"else\".","Expected space(s) after \"else\".","Expected indentation of 4 spaces but found 6.","Operator '=' must be spaced.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 0 spaces but found 2.","Expected indentation of 0 spaces but found 2.","Expected a function expression.","Missing space before opening brace.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected space(s) after \"if\".","Missing space before opening brace.","Expected indentation of 4 spaces but found 6.","Operator '=' must be spaced.","Expected indentation of 2 spaces but found 4.","Expected space(s) before \"else\".","Expected space(s) after \"else\".","Expected indentation of 4 spaces but found 6.","Operator '=' must be spaced.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 0 spaces but found 2.","Newline required at end of file but not found."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 90\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected a function expression.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) before \\\"else\\\".\",\n+   \"Expected space(s) after \\\"else\\\".\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Expected a function expression.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) before \\\"else\\\".\",\n+   \"Expected space(s) after \\\"else\\\".\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Expected a function expression.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) before \\\"else\\\".\",\n+   \"Expected space(s) after \\\"else\\\".\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Expected a function expression.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) before \\\"else\\\".\",\n+   \"Expected space(s) after \\\"else\\\".\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Expected a function expression.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) before \\\"else\\\".\",\n+   \"Expected space(s) after \\\"else\\\".\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Newline required at end of file but not found.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 90\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected a function expression.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) before \\\"else\\\".\",\n+   \"Expected space(s) after \\\"else\\\".\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Expected a function expression.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) before \\\"else\\\".\",\n+   \"Expected space(s) after \\\"else\\\".\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Expected a function expression.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) before \\\"else\\\".\",\n+   \"Expected space(s) after \\\"else\\\".\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Expected a function expression.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) before \\\"else\\\".\",\n+   \"Expected space(s) after \\\"else\\\".\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Expected a function expression.\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Missing space before opening brace.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) before \\\"else\\\".\",\n+   \"Expected space(s) after \\\"else\\\".\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Newline required at end of file but not found.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM HemPradeepthummala colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","HemPradeepthummala","notes"],"duration":32,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Missing space before function parentheses.","Missing space before opening brace.","Operator '=' must be spaced.","Missing semicolon.","Operator '=' must be spaced.","Missing semicolon.","Newline required at end of file but not found.","Missing semicolon."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 11\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Missing space before function parentheses.\",\n+   \"Missing space before opening brace.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing semicolon.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing semicolon.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 11\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Missing space before function parentheses.\",\n+   \"Missing space before opening brace.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing semicolon.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing semicolon.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM HemPradeepthummala notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","HemPradeepthummala","theme"],"duration":17,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Expected a function expression.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 6.","Expected indentation of 4 spaces but found 6.","Operator '=' must be spaced.","Expected indentation of 4 spaces but found 6.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 6.","Expected indentation of 4 spaces but found 6.","Expected indentation of 4 spaces but found 6.","Expected indentation of 2 spaces but found 4.","Expected indentation of 0 spaces but found 2.","Newline required at end of file but not found."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 17\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected a function expression.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Newline required at end of file but not found.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 17\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected a function expression.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Newline required at end of file but not found.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM HemPradeepthummala theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","HemPradeepthummala","wordCounter"],"duration":4,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM HemPradeepthummala wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","JAGADEESH2004PJ","colorChanger"],"duration":11,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM JAGADEESH2004PJ colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","JAGADEESH2004PJ","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM JAGADEESH2004PJ notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","JAGADEESH2004PJ","theme"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM JAGADEESH2004PJ theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","JAGADEESH2004PJ","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM JAGADEESH2004PJ wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","KARTHEEK-TAMADA","colorChanger"],"duration":7,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM KARTHEEK-TAMADA colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","KARTHEEK-TAMADA","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM KARTHEEK-TAMADA notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","KARTHEEK-TAMADA","theme"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM KARTHEEK-TAMADA theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","KARTHEEK-TAMADA","wordCounter"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM KARTHEEK-TAMADA wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","KalluriBhagyasree","colorChanger"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM KalluriBhagyasree colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","KalluriBhagyasree","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM KalluriBhagyasree notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","KalluriBhagyasree","theme"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM KalluriBhagyasree theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","KalluriBhagyasree","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM KalluriBhagyasree wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Krishnakoushik005","colorChanger"],"duration":4,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Krishnakoushik005 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Krishnakoushik005","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Krishnakoushik005 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Krishnakoushik005","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Krishnakoushik005 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Krishnakoushik005","wordCounter"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Krishnakoushik005 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Kshivaji333","colorChanger"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Kshivaji333 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Kshivaji333","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Kshivaji333 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Kshivaji333","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Kshivaji333 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Kshivaji333","wordCounter"],"duration":5,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Kshivaji333 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Nagalakshmivaranasi","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Nagalakshmivaranasi colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Nagalakshmivaranasi","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Nagalakshmivaranasi notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Nagalakshmivaranasi","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Nagalakshmivaranasi theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Nagalakshmivaranasi","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Nagalakshmivaranasi wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Nithin7411","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Nithin7411 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Nithin7411","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Nithin7411 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Nithin7411","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Nithin7411 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Nithin7411","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Nithin7411 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Pardhasaradhi031","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Pardhasaradhi031 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Pardhasaradhi031","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Pardhasaradhi031 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Pardhasaradhi031","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Pardhasaradhi031 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Pardhasaradhi031","wordCounter"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Pardhasaradhi031 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Pujari-Praveen","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Pujari-Praveen colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Pujari-Praveen","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Pujari-Praveen notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Pujari-Praveen","theme"],"duration":4,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Pujari-Praveen theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Pujari-Praveen","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Pujari-Praveen wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","RAKESHGURUGU","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM RAKESHGURUGU colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","RAKESHGURUGU","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM RAKESHGURUGU notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","RAKESHGURUGU","theme"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM RAKESHGURUGU theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","RAKESHGURUGU","wordCounter"],"duration":4,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM RAKESHGURUGU wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Rafiya1207","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Rafiya1207 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Rafiya1207","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Rafiya1207 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Rafiya1207","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Rafiya1207 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Rafiya1207","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Rafiya1207 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Revanth-backbencher","colorChanger"],"duration":39,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","'box1' is never reassigned. Use 'const' instead.","Strings must use singlequote.","'box2' is never reassigned. Use 'const' instead.","Strings must use singlequote.","'box3' is never reassigned. Use 'const' instead.","Strings must use singlequote.","'box4' is never reassigned. Use 'const' instead.","Strings must use singlequote.","'box5' is never reassigned. Use 'const' instead.","Strings must use singlequote.","'box6' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected a function expression.","Expected '===' and instead saw '=='.","Strings must use singlequote.","Strings must use singlequote.","Expected '===' and instead saw '=='.","Strings must use singlequote.","Strings must use singlequote.","Expected a function expression.","Expected '===' and instead saw '=='.","Strings must use singlequote.","Strings must use singlequote.","Expected '===' and instead saw '=='.","Strings must use singlequote.","Strings must use singlequote.","Expected a function expression.","Expected '===' and instead saw '=='.","Strings must use singlequote.","Strings must use singlequote.","Expected '===' and instead saw '=='.","Strings must use singlequote.","Strings must use singlequote.","Expected a function expression.","Expected '===' and instead saw '=='.","Strings must use singlequote.","Strings must use singlequote.","Expected '===' and instead saw '=='.","Strings must use singlequote.","Strings must use singlequote.","Expected a function expression.","Expected '===' and instead saw '=='.","Strings must use singlequote.","Strings must use singlequote.","Expected '===' and instead saw '=='.","Strings must use singlequote.","Strings must use singlequote.","Expected a function expression.","Expected '===' and instead saw '=='.","Strings must use singlequote.","Strings must use singlequote.","Expected '===' and instead saw '=='.","Strings must use singlequote.","Strings must use singlequote."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 57\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"'box1' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"'box2' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"'box3' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"'box4' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"'box5' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"'box6' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 57\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"'box1' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"'box2' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"'box3' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"'box4' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"'box5' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"'box6' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM Revanth-backbencher colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Revanth-backbencher","notes"],"duration":19,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Strings must use singlequote.","Strings must use singlequote.","'Notes' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected a function expression.","'newNote' is already declared in the upper scope on line 2 column 7.","Strings must use singlequote.","Strings must use singlequote."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 11\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"'Notes' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"'newNote' is already declared in the upper scope on line 2 column 7.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 11\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"'Notes' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"'newNote' is already declared in the upper scope on line 2 column 7.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM Revanth-backbencher notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Revanth-backbencher","theme"],"duration":23,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","'Paras' is never reassigned. Use 'const' instead.","Strings must use singlequote.","'Theme' is never reassigned. Use 'const' instead.","Strings must use singlequote.","'body' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected a function expression.","Expected '===' and instead saw '=='.","Strings must use singlequote.","Strings must use singlequote.","Strings must use singlequote.","Strings must use singlequote.","Expected '===' and instead saw '=='.","Strings must use singlequote.","Strings must use singlequote.","Strings must use singlequote.","Strings must use singlequote."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 20\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"'Paras' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"'Theme' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"'body' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 20\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"'Paras' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"'Theme' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"'body' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected '===' and instead saw '=='.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM Revanth-backbencher theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Revanth-backbencher","wordCounter"],"duration":13,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","'string' is never reassigned. Use 'const' instead.","Strings must use singlequote.","'Header' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected a function expression.","'textLength' is never reassigned. Use 'const' instead."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 9\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"'string' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"'Header' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"'textLength' is never reassigned. Use 'const' instead.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 9\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"'string' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"'Header' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"'textLength' is never reassigned. Use 'const' instead.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM Revanth-backbencher wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Rohith-216","colorChanger"],"duration":6,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Rohith-216 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Rohith-216","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Rohith-216 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Rohith-216","theme"],"duration":4,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Rohith-216 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Rohith-216","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Rohith-216 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","SACHITH31","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM SACHITH31 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","SACHITH31","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM SACHITH31 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","SACHITH31","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM SACHITH31 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","SACHITH31","wordCounter"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM SACHITH31 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","SaiLokeshGoud","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM SaiLokeshGoud colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","SaiLokeshGoud","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM SaiLokeshGoud notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","SaiLokeshGoud","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM SaiLokeshGoud theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","SaiLokeshGoud","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM SaiLokeshGoud wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Saicharanteja-844","colorChanger"],"duration":6,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Saicharanteja-844 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Saicharanteja-844","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Saicharanteja-844 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Saicharanteja-844","theme"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Saicharanteja-844 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Saicharanteja-844","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Saicharanteja-844 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Shek-Nowshik66","colorChanger"],"duration":32,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Operator '=' must be spaced.","Expected indentation of 2 spaces but found 4.","'firstBox' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","'colorChange' was used before it was defined.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","'secondBox' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","'colorChange' was used before it was defined.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","'thirdBox' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","'colorChange' was used before it was defined.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","'fourthBox' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","'colorChange' was used before it was defined.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Missing semicolon.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","'fifthBox' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","'colorChange' was used before it was defined.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","'sixthBox' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","'colorChange' was used before it was defined.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Missing semicolon.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Newline required at end of file but not found.","Missing semicolon."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 76\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'firstBox' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"'colorChange' was used before it was defined.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'secondBox' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"'colorChange' was used before it was defined.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'thirdBox' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"'colorChange' was used before it was defined.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'fourthBox' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"'colorChange' was used before it was defined.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'fifthBox' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"'colorChange' was used before it was defined.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'sixthBox' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"'colorChange' was used before it was defined.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 76\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'firstBox' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"'colorChange' was used before it was defined.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'secondBox' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"'colorChange' was used before it was defined.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'thirdBox' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"'colorChange' was used before it was defined.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'fourthBox' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"'colorChange' was used before it was defined.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'fifthBox' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"'colorChange' was used before it was defined.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'sixthBox' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"'colorChange' was used before it was defined.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM Shek-Nowshik66 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Shek-Nowshik66","notes"],"duration":11,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Expected indentation of 2 spaces but found 4.","'notesData' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","'newData' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Expected indentation of 0 spaces but found 2.","Newline required at end of file but not found.","Missing semicolon."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 14\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'notesData' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'newData' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 14\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'notesData' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'newData' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM Shek-Nowshik66 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Shek-Nowshik66","theme"],"duration":18,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Expected indentation of 2 spaces but found 4.","'themeColor' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","'documentButton' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Closing curly brace does not appear on the same line as the subsequent block.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Newline required at end of file but not found.","Missing semicolon."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 29\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'themeColor' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'documentButton' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 29\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'themeColor' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'documentButton' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM Shek-Nowshik66 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Shek-Nowshik66","wordCounter"],"duration":13,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Expected indentation of 2 spaces but found 4.","'inputBox' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","'wordCounter' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","'countVariable' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Newline required at end of file but not found.","Missing semicolon."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 15\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'inputBox' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'wordCounter' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'countVariable' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 15\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'inputBox' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'wordCounter' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'countVariable' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM Shek-Nowshik66 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Siddhu83","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Siddhu83 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Siddhu83","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Siddhu83 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Siddhu83","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Siddhu83 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Siddhu83","wordCounter"],"duration":7,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Siddhu83 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","SkAkramali","colorChanger"],"duration":7,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM SkAkramali colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","SkAkramali","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM SkAkramali notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","SkAkramali","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM SkAkramali theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","SkAkramali","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM SkAkramali wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Sravani175","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Sravani175 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Sravani175","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Sravani175 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Sravani175","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Sravani175 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Sravani175","wordCounter"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Sravani175 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Sreenayak","colorChanger"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Sreenayak colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Sreenayak","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Sreenayak notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Sreenayak","theme"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Sreenayak theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Sreenayak","wordCounter"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Sreenayak wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Triveni12062006","colorChanger"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Triveni12062006 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Triveni12062006","notes"],"duration":5,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Triveni12062006 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Triveni12062006","theme"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Triveni12062006 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Triveni12062006","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Triveni12062006 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","VETR1-V1GNESH","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM VETR1-V1GNESH colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","VETR1-V1GNESH","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM VETR1-V1GNESH notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","VETR1-V1GNESH","theme"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM VETR1-V1GNESH theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","VETR1-V1GNESH","wordCounter"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM VETR1-V1GNESH wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","VUPPUKULADEEP","colorChanger"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM VUPPUKULADEEP colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","VUPPUKULADEEP","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM VUPPUKULADEEP notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","VUPPUKULADEEP","theme"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM VUPPUKULADEEP theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","VUPPUKULADEEP","wordCounter"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM VUPPUKULADEEP wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Venkat14424","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Venkat14424 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Venkat14424","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Venkat14424 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Venkat14424","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM Venkat14424 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","Venkat14424","wordCounter"],"duration":14,"failureDetails":[{"matcherResult":{"actual":["Too many blank lines at the beginning of file. Max of 0 allowed.","Expected indentation of 0 spaces but found 6.","Use the global form of 'use strict'.","Missing space before function parentheses.","Expected indentation of 2 spaces but found 10.","Unexpected var, use let or const instead.","Expected indentation of 2 spaces but found 10.","Operator '=' must be spaced.","Expected indentation of 0 spaces but found 6."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 11\n\n- Array []\n+ Array [\n+   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n+   \"Expected indentation of 0 spaces but found 6.\",\n+   \"Use the global form of 'use strict'.\",\n+   \"Missing space before function parentheses.\",\n+   \"Expected indentation of 2 spaces but found 10.\",\n+   \"Unexpected var, use let or const instead.\",\n+   \"Expected indentation of 2 spaces but found 10.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 0 spaces but found 6.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 11\n\n- Array []\n+ Array [\n+   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n+   \"Expected indentation of 0 spaces but found 6.\",\n+   \"Use the global form of 'use strict'.\",\n+   \"Missing space before function parentheses.\",\n+   \"Expected indentation of 2 spaces but found 10.\",\n+   \"Unexpected var, use let or const instead.\",\n+   \"Expected indentation of 2 spaces but found 10.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 0 spaces but found 6.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM Venkat14424 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","YMOURYA25","colorChanger"],"duration":19,"failureDetails":[{"matcherResult":{"actual":["Too many blank lines at the beginning of file. Max of 0 allowed.","Use the global form of 'use strict'.","Expected a function expression.","Strings must use singlequote.","Strings must use singlequote.","Strings must use singlequote.","Expected a function expression.","Strings must use singlequote.","Strings must use singlequote.","Strings must use singlequote.","Expected a function expression.","Strings must use singlequote.","Strings must use singlequote.","Strings must use singlequote.","Expected a function expression.","Strings must use singlequote.","Strings must use singlequote.","Strings must use singlequote.","Expected a function expression.","Strings must use singlequote.","Strings must use singlequote.","Strings must use singlequote."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 24\n\n- Array []\n+ Array [\n+   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected a function expression.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 24\n\n- Array []\n+ Array [\n+   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected a function expression.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected a function expression.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM YMOURYA25 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","YMOURYA25","notes"],"duration":16,"failureDetails":[{"matcherResult":{"actual":["Too many blank lines at the beginning of file. Max of 0 allowed.","Use the global form of 'use strict'.","Expected a function expression.","Trailing spaces not allowed.","Trailing spaces not allowed.","Trailing spaces not allowed."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 8\n\n- Array []\n+ Array [\n+   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected a function expression.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Trailing spaces not allowed.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 8\n\n- Array []\n+ Array [\n+   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected a function expression.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Trailing spaces not allowed.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM YMOURYA25 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","YMOURYA25","theme"],"duration":12,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Expected a function expression.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Expected indentation of 4 spaces but found 6.","Strings must use singlequote.","Expected indentation of 4 spaces but found 6.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 6.","Strings must use singlequote.","Expected indentation of 4 spaces but found 6.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Expected indentation of 0 spaces but found 2.","Newline required at end of file but not found."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 19\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected a function expression.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Newline required at end of file but not found.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 19\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected a function expression.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 6.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Newline required at end of file but not found.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM YMOURYA25 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","YMOURYA25","wordCounter"],"duration":17,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Strings must use singlequote.","Strings must use singlequote.","Missing space before function parentheses.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Strings must use singlequote.","Expected indentation of 0 spaces but found 2.","Newline required at end of file but not found."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 11\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing space before function parentheses.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Newline required at end of file but not found.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 11\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing space before function parentheses.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 0 spaces but found 2.\",\n+   \"Newline required at end of file but not found.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM YMOURYA25 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","balasatish1","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM balasatish1 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","balasatish1","notes"],"duration":32,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Strings must use singlequote.","Strings must use singlequote.","Strings must use singlequote.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Unexpected parentheses around single function argument having a body with no curly braces.","Expected '!==' and instead saw '!='.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Missing semicolon.","Function has too many lines (21). Maximum allowed is 15.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","Expected indentation of 4 spaces but found 8.","Expected indentation of 4 spaces but found 8.","Unexpected parentheses around single function argument having a body with no curly braces.","Expected '!==' and instead saw '!='.","Expected indentation of 2 spaces but found 4.","Block must not be padded by blank lines.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 8.","Expected indentation of 4 spaces but found 8.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 8.","Unexpected alert.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Missing semicolon.","Strings must use singlequote.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Expected { after 'if' condition.","Newline required at end of file but not found."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 64\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Unexpected parentheses around single function argument having a body with no curly braces.\",\n+   \"Expected '!==' and instead saw '!='.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Function has too many lines (21). Maximum allowed is 15.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Unexpected parentheses around single function argument having a body with no curly braces.\",\n+   \"Expected '!==' and instead saw '!='.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Block must not be padded by blank lines.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Unexpected alert.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Missing semicolon.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected { after 'if' condition.\",\n+   \"Newline required at end of file but not found.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 64\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Unexpected parentheses around single function argument having a body with no curly braces.\",\n+   \"Expected '!==' and instead saw '!='.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Function has too many lines (21). Maximum allowed is 15.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Unexpected parentheses around single function argument having a body with no curly braces.\",\n+   \"Expected '!==' and instead saw '!='.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Block must not be padded by blank lines.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Unexpected alert.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Missing semicolon.\",\n+   \"Strings must use singlequote.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected { after 'if' condition.\",\n+   \"Newline required at end of file but not found.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM balasatish1 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","balasatish1","theme"],"duration":7,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM balasatish1 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","balasatish1","wordCounter"],"duration":4,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM balasatish1 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","dileepsa","colorChanger"],"duration":7,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM dileepsa colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","dileepsa","notes"],"duration":4,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM dileepsa notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","dileepsa","theme"],"duration":11,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM dileepsa theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","dileepsa","wordCounter"],"duration":6,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM dileepsa wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","harshavardhan-macha","colorChanger"],"duration":8,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM harshavardhan-macha colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","harshavardhan-macha","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM harshavardhan-macha notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","harshavardhan-macha","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM harshavardhan-macha theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","harshavardhan-macha","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM harshavardhan-macha wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","hemeswar9849","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM hemeswar9849 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","hemeswar9849","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM hemeswar9849 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","hemeswar9849","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM hemeswar9849 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","hemeswar9849","wordCounter"],"duration":5,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM hemeswar9849 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","jayanth-14","colorChanger"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM jayanth-14 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","jayanth-14","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM jayanth-14 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","jayanth-14","theme"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM jayanth-14 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","jayanth-14","wordCounter"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM jayanth-14 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","kumarnandeesh","colorChanger"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM kumarnandeesh colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","kumarnandeesh","notes"],"duration":5,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM kumarnandeesh notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","kumarnandeesh","theme"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM kumarnandeesh theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","kumarnandeesh","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM kumarnandeesh wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","mr-mouli03","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM mr-mouli03 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","mr-mouli03","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM mr-mouli03 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","mr-mouli03","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM mr-mouli03 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","mr-mouli03","wordCounter"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM mr-mouli03 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","nithindenkada","colorChanger"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM nithindenkada colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","nithindenkada","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM nithindenkada notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","nithindenkada","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM nithindenkada theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","nithindenkada","wordCounter"],"duration":4,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM nithindenkada wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","nithish-29","colorChanger"],"duration":21,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Global variable leak, declare the variable if it is intended to be local.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Expected space(s) after \"if\".","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Closing curly brace does not appear on the same line as the subsequent block.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Global variable leak, declare the variable if it is intended to be local.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Expected space(s) after \"if\".","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Closing curly brace does not appear on the same line as the subsequent block.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Global variable leak, declare the variable if it is intended to be local.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Expected space(s) after \"if\".","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Closing curly brace does not appear on the same line as the subsequent block.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Global variable leak, declare the variable if it is intended to be local.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Expected space(s) after \"if\".","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Closing curly brace does not appear on the same line as the subsequent block.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Global variable leak, declare the variable if it is intended to be local.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Expected space(s) after \"if\".","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Closing curly brace does not appear on the same line as the subsequent block.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Newline required at end of file but not found.","Missing semicolon."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 80\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Global variable leak, declare the variable if it is intended to be local.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Global variable leak, declare the variable if it is intended to be local.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Global variable leak, declare the variable if it is intended to be local.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Global variable leak, declare the variable if it is intended to be local.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Global variable leak, declare the variable if it is intended to be local.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 80\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Global variable leak, declare the variable if it is intended to be local.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Global variable leak, declare the variable if it is intended to be local.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Global variable leak, declare the variable if it is intended to be local.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Global variable leak, declare the variable if it is intended to be local.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Global variable leak, declare the variable if it is intended to be local.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM nithish-29 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","nithish-29","notes"],"duration":16,"failureDetails":[{"matcherResult":{"actual":["Too many blank lines at the beginning of file. Max of 0 allowed.","Use the global form of 'use strict'.","Trailing spaces not allowed.","Expected indentation of 2 spaces but found 4.","'text' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","'noted' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","'noteText' is never reassigned. Use 'const' instead.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Strings must use singlequote.","Newline required at end of file but not found.","Missing semicolon."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 22\n\n- Array []\n+ Array [\n+   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n+   \"Use the global form of 'use strict'.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'text' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'noted' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'noteText' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 22\n\n- Array []\n+ Array [\n+   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n+   \"Use the global form of 'use strict'.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'text' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'noted' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"'noteText' is never reassigned. Use 'const' instead.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Strings must use singlequote.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM nithish-29 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","nithish-29","theme"],"duration":19,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Expected indentation of 2 spaces but found 4.","Global variable leak, declare the variable if it is intended to be local.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Expected space(s) after \"if\".","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Closing curly brace does not appear on the same line as the subsequent block.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 4 spaces but found 8.","Strings must use singlequote.","Expected indentation of 2 spaces but found 4.","Newline required at end of file but not found.","Missing semicolon."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 27\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Global variable leak, declare the variable if it is intended to be local.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 27\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Global variable leak, declare the variable if it is intended to be local.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected space(s) after \\\"if\\\".\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Strings must use singlequote.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM nithish-29 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","nithish-29","wordCounter"],"duration":6,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM nithish-29 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","omkardalu","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM omkardalu colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","omkardalu","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM omkardalu notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","omkardalu","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM omkardalu theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","omkardalu","wordCounter"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM omkardalu wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","sampathkumarreddy123","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM sampathkumarreddy123 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","sampathkumarreddy123","notes"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM sampathkumarreddy123 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","sampathkumarreddy123","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM sampathkumarreddy123 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","sampathkumarreddy123","wordCounter"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM sampathkumarreddy123 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","siriBaratam","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM siriBaratam colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","siriBaratam","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM siriBaratam notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","siriBaratam","theme"],"duration":12,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM siriBaratam theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","siriBaratam","wordCounter"],"duration":6,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM siriBaratam wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","sohan-29","colorChanger"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM sohan-29 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","sohan-29","notes"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM sohan-29 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","sohan-29","theme"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM sohan-29 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","sohan-29","wordCounter"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM sohan-29 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","suneethalokarapu","colorChanger"],"duration":3,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM suneethalokarapu colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","suneethalokarapu","notes"],"duration":14,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Operator '=' must be spaced.","Missing space before function parentheses.","Opening curly brace does not appear on the same line as controlling statement.","Expected indentation of 2 spaces but found 1.","Operator '=' must be spaced.","Multiple spaces found before 'document'.","Expected indentation of 2 spaces but found 1.","Operator '=' must be spaced.","Expected indentation of 2 spaces but found 1.","Operator '=' must be spaced.","Expected indentation of 2 spaces but found 1.","Block must not be padded by blank lines.","Missing semicolon."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 16\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing space before function parentheses.\",\n+   \"Opening curly brace does not appear on the same line as controlling statement.\",\n+   \"Expected indentation of 2 spaces but found 1.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Multiple spaces found before 'document'.\",\n+   \"Expected indentation of 2 spaces but found 1.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 2 spaces but found 1.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 2 spaces but found 1.\",\n+   \"Block must not be padded by blank lines.\",\n+   \"Missing semicolon.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 16\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing space before function parentheses.\",\n+   \"Opening curly brace does not appear on the same line as controlling statement.\",\n+   \"Expected indentation of 2 spaces but found 1.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Multiple spaces found before 'document'.\",\n+   \"Expected indentation of 2 spaces but found 1.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 2 spaces but found 1.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Expected indentation of 2 spaces but found 1.\",\n+   \"Block must not be padded by blank lines.\",\n+   \"Missing semicolon.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM suneethalokarapu notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","suneethalokarapu","theme"],"duration":7,"failureDetails":[{"matcherResult":{"actual":["Expected an external JS file, but no JS file found"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected an external JS file, but no JS file found\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"JS-DOM suneethalokarapu theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","suneethalokarapu","wordCounter"],"duration":10,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Operator '=' must be spaced.","Missing space before function parentheses.","Opening curly brace does not appear on the same line as controlling statement.","Expected indentation of 2 spaces but found 0.","Strings must use singlequote.","Operator '=' must be spaced.","Missing whitespace after semicolon.","Newline required at end of file but not found.","Missing semicolon."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 12\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing space before function parentheses.\",\n+   \"Opening curly brace does not appear on the same line as controlling statement.\",\n+   \"Expected indentation of 2 spaces but found 0.\",\n+   \"Strings must use singlequote.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing whitespace after semicolon.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 12\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing space before function parentheses.\",\n+   \"Opening curly brace does not appear on the same line as controlling statement.\",\n+   \"Expected indentation of 2 spaces but found 0.\",\n+   \"Strings must use singlequote.\",\n+   \"Operator '=' must be spaced.\",\n+   \"Missing whitespace after semicolon.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM suneethalokarapu wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","umarfarook07","colorChanger"],"duration":14,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 8.","Trailing spaces not allowed.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 8.","Trailing spaces not allowed.","Expected indentation of 2 spaces but found 4.","Expected indentation of 4 spaces but found 8.","Trailing spaces not allowed.","Expected indentation of 2 spaces but found 4."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 16\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 16\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 4 spaces but found 8.\",\n+   \"Trailing spaces not allowed.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM umarfarook07 colorChanger should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","umarfarook07","notes"],"duration":10,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Missing semicolon.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Missing semicolon.","Newline required at end of file but not found.","Missing semicolon."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 13\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Missing semicolon.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 13\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Missing semicolon.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Missing semicolon.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM umarfarook07 notes should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","umarfarook07","theme"],"duration":11,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 10\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 10\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM umarfarook07 theme should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-DOM","umarfarook07","wordCounter"],"duration":13,"failureDetails":[{"matcherResult":{"actual":["Use the global form of 'use strict'.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Expected indentation of 2 spaces but found 4.","Newline required at end of file but not found.","Missing semicolon."],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 8\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 8\n\n- Array []\n+ Array [\n+   \"Use the global form of 'use strict'.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Expected indentation of 2 spaces but found 4.\",\n+   \"Newline required at end of file but not found.\",\n+   \"Missing semicolon.\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:77:30)"],"fullName":"JS-DOM umarfarook07 wordCounter should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"}],"endTime":1724331997911,"message":"  ● JS-DOM › Amarendra7062 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Amarendra7062 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Amarendra7062 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Amarendra7062 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › AshwakKattubadi45 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › AshwakKattubadi45 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › AshwakKattubadi45 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › AshwakKattubadi45 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Balaraju2007 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Balaraju2007 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Balaraju2007 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Balaraju2007 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Chandiniruttala › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 12\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Missing space before function parentheses.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'characterCount' is already declared in the upper scope on line 1 column 7.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Newline required at end of file but not found.\",\n    +   \"Missing semicolon.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Charantej21 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Charantej21 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Charantej21 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Charantej21 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Dhanalaxmi-Mendadala › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Dhanalaxmi-Mendadala › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Dhanalaxmi-Mendadala › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Dhanalaxmi-Mendadala › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › G-Rajini › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › G-Rajini › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › G-Rajini › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › G-Rajini › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › GOWRIPRASADTW › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -   1\n    + Received  + 122\n\n    - Array []\n    + Array [\n    +   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n    +   \"Expected indentation of 0 spaces but found 2.\",\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Expected a function expression.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"There should be no space after this paren.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"There should be no space before this paren.\",\n    +   \"Expected indentation of 4 spaces but found 14.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 5.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 0 spaces but found 3.\",\n    +   \"Expected indentation of 0 spaces but found 3.\",\n    +   \"Expected a function expression.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"There should be no space after this paren.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"There should be no space before this paren.\",\n    +   \"Missing space before opening brace.\",\n    +   \"Expected indentation of 4 spaces but found 14.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 5.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Trailing spaces not allowed.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 0 spaces but found 3.\",\n    +   \"Expected indentation of 0 spaces but found 3.\",\n    +   \"Expected a function expression.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"There should be no space after this paren.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"There should be no space before this paren.\",\n    +   \"Missing space before opening brace.\",\n    +   \"Expected indentation of 4 spaces but found 14.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 5.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Trailing spaces not allowed.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 0 spaces but found 3.\",\n    +   \"Trailing spaces not allowed.\",\n    +   \"Expected indentation of 0 spaces but found 3.\",\n    +   \"Expected a function expression.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"There should be no space after this paren.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"There should be no space before this paren.\",\n    +   \"Missing space before opening brace.\",\n    +   \"Expected indentation of 4 spaces but found 14.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 5.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Trailing spaces not allowed.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 0 spaces but found 3.\",\n    +   \"Expected indentation of 0 spaces but found 3.\",\n    +   \"Expected a function expression.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"There should be no space after this paren.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"There should be no space before this paren.\",\n    +   \"Missing space before opening brace.\",\n    +   \"Expected indentation of 4 spaces but found 14.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 5.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Trailing spaces not allowed.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 0 spaces but found 3.\",\n    +   \"Trailing spaces not allowed.\",\n    +   \"Too many blank lines at the end of file. Max of 0 allowed.\",\n    +   \"Trailing spaces not allowed.\",\n    +   \"Newline required at end of file but not found.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › GOWRIPRASADTW › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › GOWRIPRASADTW › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 34\n\n    - Array []\n    + Array [\n    +   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Expected a function expression.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"There should be no space after this paren.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"There should be no space before this paren.\",\n    +   \"Expected indentation of 4 spaces but found 14.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 4 spaces but found 14.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Block must not be padded by blank lines.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 5.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 4 spaces but found 5.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Block must not be padded by blank lines.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Newline required at end of file but not found.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › GOWRIPRASADTW › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Harshavardhanlav › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Harshavardhanlav › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Harshavardhanlav › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Harshavardhanlav › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › HemPradeepthummala › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 90\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Expected a function expression.\",\n    +   \"Missing space before opening brace.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected space(s) after \\\"if\\\".\",\n    +   \"Missing space before opening brace.\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected space(s) before \\\"else\\\".\",\n    +   \"Expected space(s) after \\\"else\\\".\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 0 spaces but found 2.\",\n    +   \"Expected indentation of 0 spaces but found 2.\",\n    +   \"Expected a function expression.\",\n    +   \"Missing space before opening brace.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Trailing spaces not allowed.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected space(s) after \\\"if\\\".\",\n    +   \"Missing space before opening brace.\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected space(s) before \\\"else\\\".\",\n    +   \"Expected space(s) after \\\"else\\\".\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 0 spaces but found 2.\",\n    +   \"Expected indentation of 0 spaces but found 2.\",\n    +   \"Expected a function expression.\",\n    +   \"Missing space before opening brace.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected space(s) after \\\"if\\\".\",\n    +   \"Missing space before opening brace.\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected space(s) before \\\"else\\\".\",\n    +   \"Expected space(s) after \\\"else\\\".\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 0 spaces but found 2.\",\n    +   \"Trailing spaces not allowed.\",\n    +   \"Expected indentation of 0 spaces but found 2.\",\n    +   \"Expected a function expression.\",\n    +   \"Missing space before opening brace.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected space(s) after \\\"if\\\".\",\n    +   \"Missing space before opening brace.\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected space(s) before \\\"else\\\".\",\n    +   \"Expected space(s) after \\\"else\\\".\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 0 spaces but found 2.\",\n    +   \"Expected indentation of 0 spaces but found 2.\",\n    +   \"Expected a function expression.\",\n    +   \"Missing space before opening brace.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected space(s) after \\\"if\\\".\",\n    +   \"Missing space before opening brace.\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected space(s) before \\\"else\\\".\",\n    +   \"Expected space(s) after \\\"else\\\".\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 0 spaces but found 2.\",\n    +   \"Newline required at end of file but not found.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › HemPradeepthummala › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 11\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Missing space before function parentheses.\",\n    +   \"Missing space before opening brace.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Missing semicolon.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Missing semicolon.\",\n    +   \"Newline required at end of file but not found.\",\n    +   \"Missing semicolon.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › HemPradeepthummala › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 17\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Expected a function expression.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 0 spaces but found 2.\",\n    +   \"Newline required at end of file but not found.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › HemPradeepthummala › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › JAGADEESH2004PJ › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › JAGADEESH2004PJ › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › JAGADEESH2004PJ › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › JAGADEESH2004PJ › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › KARTHEEK-TAMADA › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › KARTHEEK-TAMADA › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › KARTHEEK-TAMADA › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › KARTHEEK-TAMADA › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › KalluriBhagyasree › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › KalluriBhagyasree › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › KalluriBhagyasree › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › KalluriBhagyasree › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Krishnakoushik005 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Krishnakoushik005 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Krishnakoushik005 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Krishnakoushik005 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Kshivaji333 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Kshivaji333 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Kshivaji333 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Kshivaji333 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Nagalakshmivaranasi › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Nagalakshmivaranasi › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Nagalakshmivaranasi › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Nagalakshmivaranasi › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Nithin7411 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Nithin7411 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Nithin7411 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Nithin7411 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Pardhasaradhi031 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Pardhasaradhi031 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Pardhasaradhi031 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Pardhasaradhi031 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Pujari-Praveen › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Pujari-Praveen › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Pujari-Praveen › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Pujari-Praveen › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › RAKESHGURUGU › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › RAKESHGURUGU › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › RAKESHGURUGU › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › RAKESHGURUGU › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Rafiya1207 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Rafiya1207 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Rafiya1207 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Rafiya1207 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Revanth-backbencher › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 57\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"'box1' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"'box2' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"'box3' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"'box4' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"'box5' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"'box6' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected a function expression.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected a function expression.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected a function expression.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected a function expression.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected a function expression.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected a function expression.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Revanth-backbencher › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 11\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"'Notes' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected a function expression.\",\n    +   \"'newNote' is already declared in the upper scope on line 2 column 7.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Revanth-backbencher › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 20\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"'Paras' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"'Theme' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"'body' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected a function expression.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected '===' and instead saw '=='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Revanth-backbencher › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 9\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"'string' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"'Header' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected a function expression.\",\n    +   \"'textLength' is never reassigned. Use 'const' instead.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Rohith-216 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Rohith-216 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Rohith-216 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Rohith-216 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › SACHITH31 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › SACHITH31 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › SACHITH31 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › SACHITH31 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › SaiLokeshGoud › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › SaiLokeshGoud › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › SaiLokeshGoud › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › SaiLokeshGoud › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Saicharanteja-844 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Saicharanteja-844 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Saicharanteja-844 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Saicharanteja-844 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Shek-Nowshik66 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 76\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'firstBox' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"'colorChange' was used before it was defined.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'secondBox' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"'colorChange' was used before it was defined.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'thirdBox' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"'colorChange' was used before it was defined.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'fourthBox' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"'colorChange' was used before it was defined.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'fifthBox' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"'colorChange' was used before it was defined.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'sixthBox' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"'colorChange' was used before it was defined.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Newline required at end of file but not found.\",\n    +   \"Missing semicolon.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Shek-Nowshik66 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 14\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'notesData' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'newData' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 0 spaces but found 2.\",\n    +   \"Newline required at end of file but not found.\",\n    +   \"Missing semicolon.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Shek-Nowshik66 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 29\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'themeColor' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'documentButton' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Newline required at end of file but not found.\",\n    +   \"Missing semicolon.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Shek-Nowshik66 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 15\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'inputBox' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'wordCounter' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'countVariable' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Newline required at end of file but not found.\",\n    +   \"Missing semicolon.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Siddhu83 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Siddhu83 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Siddhu83 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Siddhu83 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › SkAkramali › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › SkAkramali › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › SkAkramali › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › SkAkramali › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Sravani175 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Sravani175 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Sravani175 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Sravani175 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Sreenayak › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Sreenayak › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Sreenayak › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Sreenayak › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Triveni12062006 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Triveni12062006 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Triveni12062006 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Triveni12062006 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › VETR1-V1GNESH › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › VETR1-V1GNESH › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › VETR1-V1GNESH › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › VETR1-V1GNESH › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › VUPPUKULADEEP › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › VUPPUKULADEEP › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › VUPPUKULADEEP › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › VUPPUKULADEEP › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Venkat14424 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Venkat14424 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Venkat14424 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › Venkat14424 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 11\n\n    - Array []\n    + Array [\n    +   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n    +   \"Expected indentation of 0 spaces but found 6.\",\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Missing space before function parentheses.\",\n    +   \"Expected indentation of 2 spaces but found 10.\",\n    +   \"Unexpected var, use let or const instead.\",\n    +   \"Expected indentation of 2 spaces but found 10.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Expected indentation of 0 spaces but found 6.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › YMOURYA25 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 24\n\n    - Array []\n    + Array [\n    +   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Expected a function expression.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected a function expression.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected a function expression.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected a function expression.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected a function expression.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › YMOURYA25 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 8\n\n    - Array []\n    + Array [\n    +   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Expected a function expression.\",\n    +   \"Trailing spaces not allowed.\",\n    +   \"Trailing spaces not allowed.\",\n    +   \"Trailing spaces not allowed.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › YMOURYA25 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 19\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Expected a function expression.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 6.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 0 spaces but found 2.\",\n    +   \"Newline required at end of file but not found.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › YMOURYA25 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 11\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing space before function parentheses.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 0 spaces but found 2.\",\n    +   \"Newline required at end of file but not found.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › balasatish1 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › balasatish1 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 64\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Unexpected parentheses around single function argument having a body with no curly braces.\",\n    +   \"Expected '!==' and instead saw '!='.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Function has too many lines (21). Maximum allowed is 15.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Unexpected parentheses around single function argument having a body with no curly braces.\",\n    +   \"Expected '!==' and instead saw '!='.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Block must not be padded by blank lines.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Unexpected alert.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Missing semicolon.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected { after 'if' condition.\",\n    +   \"Newline required at end of file but not found.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › balasatish1 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › balasatish1 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › dileepsa › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › dileepsa › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › dileepsa › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › dileepsa › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › harshavardhan-macha › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › harshavardhan-macha › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › harshavardhan-macha › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › harshavardhan-macha › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › hemeswar9849 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › hemeswar9849 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › hemeswar9849 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › hemeswar9849 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › jayanth-14 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › jayanth-14 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › jayanth-14 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › jayanth-14 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › kumarnandeesh › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › kumarnandeesh › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › kumarnandeesh › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › kumarnandeesh › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › mr-mouli03 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › mr-mouli03 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › mr-mouli03 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › mr-mouli03 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › nithindenkada › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › nithindenkada › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › nithindenkada › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › nithindenkada › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › nithish-29 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 80\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Global variable leak, declare the variable if it is intended to be local.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected space(s) after \\\"if\\\".\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Global variable leak, declare the variable if it is intended to be local.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected space(s) after \\\"if\\\".\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Global variable leak, declare the variable if it is intended to be local.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected space(s) after \\\"if\\\".\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Global variable leak, declare the variable if it is intended to be local.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected space(s) after \\\"if\\\".\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Global variable leak, declare the variable if it is intended to be local.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected space(s) after \\\"if\\\".\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Newline required at end of file but not found.\",\n    +   \"Missing semicolon.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › nithish-29 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 22\n\n    - Array []\n    + Array [\n    +   \"Too many blank lines at the beginning of file. Max of 0 allowed.\",\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Trailing spaces not allowed.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'text' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'noted' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"'noteText' is never reassigned. Use 'const' instead.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Newline required at end of file but not found.\",\n    +   \"Missing semicolon.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › nithish-29 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 27\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Global variable leak, declare the variable if it is intended to be local.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected space(s) after \\\"if\\\".\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Newline required at end of file but not found.\",\n    +   \"Missing semicolon.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › nithish-29 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › omkardalu › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › omkardalu › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › omkardalu › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › omkardalu › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › sampathkumarreddy123 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › sampathkumarreddy123 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › sampathkumarreddy123 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › sampathkumarreddy123 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › siriBaratam › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › siriBaratam › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › siriBaratam › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › siriBaratam › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › sohan-29 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › sohan-29 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › sohan-29 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › sohan-29 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › suneethalokarapu › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › suneethalokarapu › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 16\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Missing space before function parentheses.\",\n    +   \"Opening curly brace does not appear on the same line as controlling statement.\",\n    +   \"Expected indentation of 2 spaces but found 1.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Multiple spaces found before 'document'.\",\n    +   \"Expected indentation of 2 spaces but found 1.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Expected indentation of 2 spaces but found 1.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Expected indentation of 2 spaces but found 1.\",\n    +   \"Block must not be padded by blank lines.\",\n    +   \"Missing semicolon.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › suneethalokarapu › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected an external JS file, but no JS file found\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › suneethalokarapu › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 12\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Missing space before function parentheses.\",\n    +   \"Opening curly brace does not appear on the same line as controlling statement.\",\n    +   \"Expected indentation of 2 spaces but found 0.\",\n    +   \"Strings must use singlequote.\",\n    +   \"Operator '=' must be spaced.\",\n    +   \"Missing whitespace after semicolon.\",\n    +   \"Newline required at end of file but not found.\",\n    +   \"Missing semicolon.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › umarfarook07 › colorChanger › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 16\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Trailing spaces not allowed.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Trailing spaces not allowed.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 4 spaces but found 8.\",\n    +   \"Trailing spaces not allowed.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › umarfarook07 › notes › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 13\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Missing semicolon.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Missing semicolon.\",\n    +   \"Newline required at end of file but not found.\",\n    +   \"Missing semicolon.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › umarfarook07 › theme › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 10\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n\n  ● JS-DOM › umarfarook07 › wordCounter › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 8\n\n    - Array []\n    + Array [\n    +   \"Use the global form of 'use strict'.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Expected indentation of 2 spaces but found 4.\",\n    +   \"Newline required at end of file but not found.\",\n    +   \"Missing semicolon.\",\n    + ]\n\n    \u001b[0m \u001b[90m 75 |\u001b[39m               result\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mmap(message \u001b[33m=>\u001b[39m message\u001b[33m.\u001b[39mmessage)\n     \u001b[90m 76 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 77 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 78 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 79 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 80 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:77:30)\n","name":"/home/runner/work/test-suite/test-suite/test/test.js","startTime":1724331995613,"status":"failed","summary":""}],"wasInterrupted":false}
