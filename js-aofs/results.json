{"numFailedTestSuites":1,"numFailedTests":419,"numPassedTestSuites":0,"numPassedTests":5038,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":5457,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1724748936655,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":205,"failureDetails":[{"matcherResult":{"actual":["Expected a function expression. File: js-aofs-Amarendra7062/even_odd.js Line: 18","Expected indentation of 2 spaces but found 0. File: js-aofs-Amarendra7062/even_odd.js Line: 19","Expected space(s) after \"for\". File: js-aofs-Amarendra7062/even_odd.js Line: 20","Expected indentation of 2 spaces but found 0. File: js-aofs-Amarendra7062/even_odd.js Line: 20","Trailing spaces not allowed. File: js-aofs-Amarendra7062/even_odd.js Line: 20","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/even_odd.js Line: 21","Expected space(s) after \"if\". File: js-aofs-Amarendra7062/even_odd.js Line: 21","Operator '%' must be spaced. File: js-aofs-Amarendra7062/even_odd.js Line: 21","Expected indentation of 6 spaces but found 8. File: js-aofs-Amarendra7062/even_odd.js Line: 22","Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Amarendra7062/even_odd.js Line: 23","Expected indentation of 4 spaces but found 7. File: js-aofs-Amarendra7062/even_odd.js Line: 24","Expected indentation of 6 spaces but found 4. File: js-aofs-Amarendra7062/even_odd.js Line: 25","Expected indentation of 4 spaces but found 3. File: js-aofs-Amarendra7062/even_odd.js Line: 26","Expected indentation of 0 spaces but found 2. File: js-aofs-Amarendra7062/even_odd.js Line: 30"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 16\n\n- Array []\n+ Array [\n+   \"Expected a function expression. File: js-aofs-Amarendra7062/even_odd.js Line: 18\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-Amarendra7062/even_odd.js Line: 19\",\n+   \"Expected space(s) after \\\"for\\\". File: js-aofs-Amarendra7062/even_odd.js Line: 20\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-Amarendra7062/even_odd.js Line: 20\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/even_odd.js Line: 20\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/even_odd.js Line: 21\",\n+   \"Expected space(s) after \\\"if\\\". File: js-aofs-Amarendra7062/even_odd.js Line: 21\",\n+   \"Operator '%' must be spaced. File: js-aofs-Amarendra7062/even_odd.js Line: 21\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-Amarendra7062/even_odd.js Line: 22\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Amarendra7062/even_odd.js Line: 23\",\n+   \"Expected indentation of 4 spaces but found 7. File: js-aofs-Amarendra7062/even_odd.js Line: 24\",\n+   \"Expected indentation of 6 spaces but found 4. File: js-aofs-Amarendra7062/even_odd.js Line: 25\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Amarendra7062/even_odd.js Line: 26\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-Amarendra7062/even_odd.js Line: 30\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 16\n\n- Array []\n+ Array [\n+   \"Expected a function expression. File: js-aofs-Amarendra7062/even_odd.js Line: 18\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-Amarendra7062/even_odd.js Line: 19\",\n+   \"Expected space(s) after \\\"for\\\". File: js-aofs-Amarendra7062/even_odd.js Line: 20\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-Amarendra7062/even_odd.js Line: 20\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/even_odd.js Line: 20\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/even_odd.js Line: 21\",\n+   \"Expected space(s) after \\\"if\\\". File: js-aofs-Amarendra7062/even_odd.js Line: 21\",\n+   \"Operator '%' must be spaced. File: js-aofs-Amarendra7062/even_odd.js Line: 21\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-Amarendra7062/even_odd.js Line: 22\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Amarendra7062/even_odd.js Line: 23\",\n+   \"Expected indentation of 4 spaces but found 7. File: js-aofs-Amarendra7062/even_odd.js Line: 24\",\n+   \"Expected indentation of 6 spaces but found 4. File: js-aofs-Amarendra7062/even_odd.js Line: 25\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Amarendra7062/even_odd.js Line: 26\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-Amarendra7062/even_odd.js Line: 30\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Amarendra7062 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":27,"failureDetails":[{"matcherResult":{"actual":["Missing semicolon. File: js-aofs-Amarendra7062/categorise.js Line: 2","Expected a function expression. File: js-aofs-Amarendra7062/categorise.js Line: 25","Function 'categorizeAndSort' has too many lines (29). Maximum allowed is 15. File: js-aofs-Amarendra7062/categorise.js Line: 25","Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/categorise.js Line: 27","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 28","'number' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/categorise.js Line: 28","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 29","Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/categorise.js Line: 30","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 31","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 32","Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/categorise.js Line: 34","'key' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/categorise.js Line: 35","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 36","Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/categorise.js Line: 38","This line has a length of 84. Maximum allowed is 80. File: js-aofs-Amarendra7062/categorise.js Line: 39","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 39","Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/categorise.js Line: 40","Expected indentation of 8 spaces but found 14. File: js-aofs-Amarendra7062/categorise.js Line: 41","'temp' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/categorise.js Line: 41","Expected indentation of 8 spaces but found 14. File: js-aofs-Amarendra7062/categorise.js Line: 42","Expected indentation of 8 spaces but found 14. File: js-aofs-Amarendra7062/categorise.js Line: 43","Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/categorise.js Line: 44","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 45","Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/categorise.js Line: 47","'result' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/categorise.js Line: 47","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 49","Trailing spaces not allowed. File: js-aofs-Amarendra7062/categorise.js Line: 54"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 29\n\n- Array []\n+ Array [\n+   \"Missing semicolon. File: js-aofs-Amarendra7062/categorise.js Line: 2\",\n+   \"Expected a function expression. File: js-aofs-Amarendra7062/categorise.js Line: 25\",\n+   \"Function 'categorizeAndSort' has too many lines (29). Maximum allowed is 15. File: js-aofs-Amarendra7062/categorise.js Line: 25\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/categorise.js Line: 27\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 28\",\n+   \"'number' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/categorise.js Line: 28\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 29\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/categorise.js Line: 30\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 31\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 32\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/categorise.js Line: 34\",\n+   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/categorise.js Line: 35\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 36\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/categorise.js Line: 38\",\n+   \"This line has a length of 84. Maximum allowed is 80. File: js-aofs-Amarendra7062/categorise.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 39\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/categorise.js Line: 40\",\n+   \"Expected indentation of 8 spaces but found 14. File: js-aofs-Amarendra7062/categorise.js Line: 41\",\n+   \"'temp' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/categorise.js Line: 41\",\n+   \"Expected indentation of 8 spaces but found 14. File: js-aofs-Amarendra7062/categorise.js Line: 42\",\n+   \"Expected indentation of 8 spaces but found 14. File: js-aofs-Amarendra7062/categorise.js Line: 43\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/categorise.js Line: 44\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 45\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/categorise.js Line: 47\",\n+   \"'result' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/categorise.js Line: 47\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 49\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/categorise.js Line: 54\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 29\n\n- Array []\n+ Array [\n+   \"Missing semicolon. File: js-aofs-Amarendra7062/categorise.js Line: 2\",\n+   \"Expected a function expression. File: js-aofs-Amarendra7062/categorise.js Line: 25\",\n+   \"Function 'categorizeAndSort' has too many lines (29). Maximum allowed is 15. File: js-aofs-Amarendra7062/categorise.js Line: 25\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/categorise.js Line: 27\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 28\",\n+   \"'number' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/categorise.js Line: 28\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 29\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/categorise.js Line: 30\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 31\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 32\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/categorise.js Line: 34\",\n+   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/categorise.js Line: 35\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 36\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/categorise.js Line: 38\",\n+   \"This line has a length of 84. Maximum allowed is 80. File: js-aofs-Amarendra7062/categorise.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 39\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/categorise.js Line: 40\",\n+   \"Expected indentation of 8 spaces but found 14. File: js-aofs-Amarendra7062/categorise.js Line: 41\",\n+   \"'temp' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/categorise.js Line: 41\",\n+   \"Expected indentation of 8 spaces but found 14. File: js-aofs-Amarendra7062/categorise.js Line: 42\",\n+   \"Expected indentation of 8 spaces but found 14. File: js-aofs-Amarendra7062/categorise.js Line: 43\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/categorise.js Line: 44\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 45\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/categorise.js Line: 47\",\n+   \"'result' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/categorise.js Line: 47\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 49\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/categorise.js Line: 54\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Amarendra7062 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":23,"failureDetails":[{"matcherResult":{"actual":["A space is required after '{'. File: js-aofs-Amarendra7062/entries.js Line: 3","A space is required before '}'. File: js-aofs-Amarendra7062/entries.js Line: 3","Trailing spaces not allowed. File: js-aofs-Amarendra7062/entries.js Line: 7","Expected a function expression. File: js-aofs-Amarendra7062/entries.js Line: 23","There should be no space after this paren. File: js-aofs-Amarendra7062/entries.js Line: 23","Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 24","Operator '=' must be spaced. File: js-aofs-Amarendra7062/entries.js Line: 24","Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 25","Operator '=' must be spaced. File: js-aofs-Amarendra7062/entries.js Line: 25","Expected indentation of 2 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 26","Expected space(s) after \"for\". File: js-aofs-Amarendra7062/entries.js Line: 26","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 27","Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 28","Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 29","Expected space(s) after \"for\". File: js-aofs-Amarendra7062/entries.js Line: 29","Operator '<' must be spaced. File: js-aofs-Amarendra7062/entries.js Line: 29","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 30","There should be no space after '['. File: js-aofs-Amarendra7062/entries.js Line: 30","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 31","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 32","Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 33","Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 34","Trailing spaces not allowed. File: js-aofs-Amarendra7062/entries.js Line: 34","Expected indentation of 0 spaces but found 2. File: js-aofs-Amarendra7062/entries.js Line: 35","Expected indentation of 0 spaces but found 2. File: js-aofs-Amarendra7062/entries.js Line: 36","There should be no space before this paren. File: js-aofs-Amarendra7062/entries.js Line: 36","Newline required at end of file but not found. File: js-aofs-Amarendra7062/entries.js Line: 36"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 29\n\n- Array []\n+ Array [\n+   \"A space is required after '{'. File: js-aofs-Amarendra7062/entries.js Line: 3\",\n+   \"A space is required before '}'. File: js-aofs-Amarendra7062/entries.js Line: 3\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/entries.js Line: 7\",\n+   \"Expected a function expression. File: js-aofs-Amarendra7062/entries.js Line: 23\",\n+   \"There should be no space after this paren. File: js-aofs-Amarendra7062/entries.js Line: 23\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 24\",\n+   \"Operator '=' must be spaced. File: js-aofs-Amarendra7062/entries.js Line: 24\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 25\",\n+   \"Operator '=' must be spaced. File: js-aofs-Amarendra7062/entries.js Line: 25\",\n+   \"Expected indentation of 2 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 26\",\n+   \"Expected space(s) after \\\"for\\\". File: js-aofs-Amarendra7062/entries.js Line: 26\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 27\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 28\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 29\",\n+   \"Expected space(s) after \\\"for\\\". File: js-aofs-Amarendra7062/entries.js Line: 29\",\n+   \"Operator '<' must be spaced. File: js-aofs-Amarendra7062/entries.js Line: 29\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 30\",\n+   \"There should be no space after '['. File: js-aofs-Amarendra7062/entries.js Line: 30\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 31\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 32\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 33\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 34\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/entries.js Line: 34\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-Amarendra7062/entries.js Line: 35\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-Amarendra7062/entries.js Line: 36\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/entries.js Line: 36\",\n+   \"Newline required at end of file but not found. File: js-aofs-Amarendra7062/entries.js Line: 36\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 29\n\n- Array []\n+ Array [\n+   \"A space is required after '{'. File: js-aofs-Amarendra7062/entries.js Line: 3\",\n+   \"A space is required before '}'. File: js-aofs-Amarendra7062/entries.js Line: 3\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/entries.js Line: 7\",\n+   \"Expected a function expression. File: js-aofs-Amarendra7062/entries.js Line: 23\",\n+   \"There should be no space after this paren. File: js-aofs-Amarendra7062/entries.js Line: 23\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 24\",\n+   \"Operator '=' must be spaced. File: js-aofs-Amarendra7062/entries.js Line: 24\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 25\",\n+   \"Operator '=' must be spaced. File: js-aofs-Amarendra7062/entries.js Line: 25\",\n+   \"Expected indentation of 2 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 26\",\n+   \"Expected space(s) after \\\"for\\\". File: js-aofs-Amarendra7062/entries.js Line: 26\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 27\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 28\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 29\",\n+   \"Expected space(s) after \\\"for\\\". File: js-aofs-Amarendra7062/entries.js Line: 29\",\n+   \"Operator '<' must be spaced. File: js-aofs-Amarendra7062/entries.js Line: 29\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 30\",\n+   \"There should be no space after '['. File: js-aofs-Amarendra7062/entries.js Line: 30\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 31\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 32\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 33\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 34\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/entries.js Line: 34\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-Amarendra7062/entries.js Line: 35\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-Amarendra7062/entries.js Line: 36\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/entries.js Line: 36\",\n+   \"Newline required at end of file but not found. File: js-aofs-Amarendra7062/entries.js Line: 36\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Amarendra7062 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":3,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:42\n          result += char;\n                 ^\n\nTypeError: Assignment to constant variable.\n    at removeAdjacentSpaces (evalmachine.<anonymous>:42:18)\n    at evalmachine.<anonymous>:62:15\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":2,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:42\n          result += char;\n                 ^\n\nTypeError: Assignment to constant variable.\n    at removeAdjacentSpaces (evalmachine.<anonymous>:42:18)\n    at evalmachine.<anonymous>:62:15\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:38\n               result += ' ';\n                      ^\n\nTypeError: Assignment to constant variable.\n    at removeAdjacentSpaces (evalmachine.<anonymous>:38:23)\n    at evalmachine.<anonymous>:62:15\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:42\n          result += char;\n                 ^\n\nTypeError: Assignment to constant variable.\n    at removeAdjacentSpaces (evalmachine.<anonymous>:42:18)\n    at evalmachine.<anonymous>:62:15\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:42\n          result += char;\n                 ^\n\nTypeError: Assignment to constant variable.\n    at removeAdjacentSpaces (evalmachine.<anonymous>:42:18)\n    at evalmachine.<anonymous>:62:15\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:42\n          result += char;\n                 ^\n\nTypeError: Assignment to constant variable.\n    at removeAdjacentSpaces (evalmachine.<anonymous>:42:18)\n    at evalmachine.<anonymous>:62:15\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:38\n               result += ' ';\n                      ^\n\nTypeError: Assignment to constant variable.\n    at removeAdjacentSpaces (evalmachine.<anonymous>:38:23)\n    at evalmachine.<anonymous>:62:15\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:38\n               result += ' ';\n                      ^\n\nTypeError: Assignment to constant variable.\n    at removeAdjacentSpaces (evalmachine.<anonymous>:38:23)\n    at evalmachine.<anonymous>:62:15\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:42\n          result += char;\n                 ^\n\nTypeError: Assignment to constant variable.\n    at removeAdjacentSpaces (evalmachine.<anonymous>:42:18)\n    at evalmachine.<anonymous>:62:15\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:42\n          result += char;\n                 ^\n\nTypeError: Assignment to constant variable.\n    at removeAdjacentSpaces (evalmachine.<anonymous>:42:18)\n    at evalmachine.<anonymous>:62:15\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":5,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:66\n          result += char;\n                 ^\n\nTypeError: Assignment to constant variable.\n    at removeAdjacentSpaces (evalmachine.<anonymous>:66:18)\n    at evalmachine.<anonymous>:86:15\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:42\n          result += char;\n                 ^\n\nTypeError: Assignment to constant variable.\n    at removeAdjacentSpaces (evalmachine.<anonymous>:42:18)\n    at evalmachine.<anonymous>:62:15\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:38\n               result += ' ';\n                      ^\n\nTypeError: Assignment to constant variable.\n    at removeAdjacentSpaces (evalmachine.<anonymous>:38:23)\n    at evalmachine.<anonymous>:62:15\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":23,"failureDetails":[{"matcherResult":{"actual":["Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 2","Strings must use singlequote. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 2","Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 3","Trailing spaces not allowed. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 5","Expected a function expression. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 29","Function 'removeAdjacentSpaces' has too many lines (32). Maximum allowed is 15. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 29","Unexpected space before function parentheses. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 29","Multiple spaces found before '{'. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 33","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 34","There should be no space after '['. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 34","There should be no space before ']'. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 34","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 35","Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 36","Expected indentation of 8 spaces but found 15. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 37","'result' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 37","Expected indentation of 8 spaces but found 14. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 38","'spaceFound' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 38","Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 39","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 40","Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 41","'result' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 41","Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 42","'spaceFound' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 42","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 43","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 44","'index' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 44","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 48","Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 50","Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 51","Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 51","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 52","'text_1' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 52","Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 52","Expected indentation of 2 spaces but found 3. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 54","Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 55","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 56","'finalResult' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 56","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 57","Expected indentation of 2 spaces but found 3. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 59","Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 61","There should be no space before this paren. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 61","Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 62","Trailing spaces not allowed. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 63","Newline required at end of file but not found. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 63"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 46\n\n- Array []\n+ Array [\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 2\",\n+   \"Strings must use singlequote. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 2\",\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 3\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 5\",\n+   \"Expected a function expression. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 29\",\n+   \"Function 'removeAdjacentSpaces' has too many lines (32). Maximum allowed is 15. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 29\",\n+   \"Unexpected space before function parentheses. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 29\",\n+   \"Multiple spaces found before '{'. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 33\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 34\",\n+   \"There should be no space after '['. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 34\",\n+   \"There should be no space before ']'. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 34\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 35\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 36\",\n+   \"Expected indentation of 8 spaces but found 15. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 37\",\n+   \"'result' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 37\",\n+   \"Expected indentation of 8 spaces but found 14. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 38\",\n+   \"'spaceFound' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 38\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 40\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 41\",\n+   \"'result' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 41\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 42\",\n+   \"'spaceFound' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 42\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 43\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 44\",\n+   \"'index' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 44\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 48\",\n+   \"Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 50\",\n+   \"Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 51\",\n+   \"Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 51\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 52\",\n+   \"'text_1' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 52\",\n+   \"Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 52\",\n+   \"Expected indentation of 2 spaces but found 3. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 54\",\n+   \"Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 55\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 56\",\n+   \"'finalResult' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 56\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 57\",\n+   \"Expected indentation of 2 spaces but found 3. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 59\",\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 61\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 61\",\n+   \"Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 62\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 63\",\n+   \"Newline required at end of file but not found. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 63\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 46\n\n- Array []\n+ Array [\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 2\",\n+   \"Strings must use singlequote. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 2\",\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 3\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 5\",\n+   \"Expected a function expression. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 29\",\n+   \"Function 'removeAdjacentSpaces' has too many lines (32). Maximum allowed is 15. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 29\",\n+   \"Unexpected space before function parentheses. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 29\",\n+   \"Multiple spaces found before '{'. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 33\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 34\",\n+   \"There should be no space after '['. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 34\",\n+   \"There should be no space before ']'. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 34\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 35\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 36\",\n+   \"Expected indentation of 8 spaces but found 15. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 37\",\n+   \"'result' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 37\",\n+   \"Expected indentation of 8 spaces but found 14. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 38\",\n+   \"'spaceFound' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 38\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 40\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 41\",\n+   \"'result' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 41\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 42\",\n+   \"'spaceFound' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 42\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 43\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 44\",\n+   \"'index' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 44\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 48\",\n+   \"Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 50\",\n+   \"Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 51\",\n+   \"Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 51\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 52\",\n+   \"'text_1' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 52\",\n+   \"Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 52\",\n+   \"Expected indentation of 2 spaces but found 3. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 54\",\n+   \"Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 55\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 56\",\n+   \"'finalResult' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 56\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 57\",\n+   \"Expected indentation of 2 spaces but found 3. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 59\",\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 61\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 61\",\n+   \"Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 62\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 63\",\n+   \"Newline required at end of file but not found. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 63\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":13,"failureDetails":[{"matcherResult":{"actual":["Trailing spaces not allowed. File: js-aofs-Amarendra7062/tribonacci.js Line: 7","This line has a length of 101. Maximum allowed is 80. File: js-aofs-Amarendra7062/tribonacci.js Line: 23","Expected a function expression. File: js-aofs-Amarendra7062/tribonacci.js Line: 23","Trailing spaces not allowed. File: js-aofs-Amarendra7062/tribonacci.js Line: 23","Expected space(s) after \"if\". File: js-aofs-Amarendra7062/tribonacci.js Line: 24","Trailing spaces not allowed. File: js-aofs-Amarendra7062/tribonacci.js Line: 24","Expected indentation of 4 spaces but found 7. File: js-aofs-Amarendra7062/tribonacci.js Line: 25","Expected { after 'if' condition. File: js-aofs-Amarendra7062/tribonacci.js Line: 25","This line has a length of 131. Maximum allowed is 80. File: js-aofs-Amarendra7062/tribonacci.js Line: 26","Expected indentation of 2 spaces but found 3. File: js-aofs-Amarendra7062/tribonacci.js Line: 26","A space is required after ','. File: js-aofs-Amarendra7062/tribonacci.js Line: 26","There should be no space before ','. File: js-aofs-Amarendra7062/tribonacci.js Line: 26","There should be no space before this paren. File: js-aofs-Amarendra7062/tribonacci.js Line: 26","Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/tribonacci.js Line: 28","Trailing spaces not allowed. File: js-aofs-Amarendra7062/tribonacci.js Line: 28","Newline required at end of file but not found. File: js-aofs-Amarendra7062/tribonacci.js Line: 28"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 18\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/tribonacci.js Line: 7\",\n+   \"This line has a length of 101. Maximum allowed is 80. File: js-aofs-Amarendra7062/tribonacci.js Line: 23\",\n+   \"Expected a function expression. File: js-aofs-Amarendra7062/tribonacci.js Line: 23\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/tribonacci.js Line: 23\",\n+   \"Expected space(s) after \\\"if\\\". File: js-aofs-Amarendra7062/tribonacci.js Line: 24\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/tribonacci.js Line: 24\",\n+   \"Expected indentation of 4 spaces but found 7. File: js-aofs-Amarendra7062/tribonacci.js Line: 25\",\n+   \"Expected { after 'if' condition. File: js-aofs-Amarendra7062/tribonacci.js Line: 25\",\n+   \"This line has a length of 131. Maximum allowed is 80. File: js-aofs-Amarendra7062/tribonacci.js Line: 26\",\n+   \"Expected indentation of 2 spaces but found 3. File: js-aofs-Amarendra7062/tribonacci.js Line: 26\",\n+   \"A space is required after ','. File: js-aofs-Amarendra7062/tribonacci.js Line: 26\",\n+   \"There should be no space before ','. File: js-aofs-Amarendra7062/tribonacci.js Line: 26\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/tribonacci.js Line: 26\",\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/tribonacci.js Line: 28\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/tribonacci.js Line: 28\",\n+   \"Newline required at end of file but not found. File: js-aofs-Amarendra7062/tribonacci.js Line: 28\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 18\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/tribonacci.js Line: 7\",\n+   \"This line has a length of 101. Maximum allowed is 80. File: js-aofs-Amarendra7062/tribonacci.js Line: 23\",\n+   \"Expected a function expression. File: js-aofs-Amarendra7062/tribonacci.js Line: 23\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/tribonacci.js Line: 23\",\n+   \"Expected space(s) after \\\"if\\\". File: js-aofs-Amarendra7062/tribonacci.js Line: 24\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/tribonacci.js Line: 24\",\n+   \"Expected indentation of 4 spaces but found 7. File: js-aofs-Amarendra7062/tribonacci.js Line: 25\",\n+   \"Expected { after 'if' condition. File: js-aofs-Amarendra7062/tribonacci.js Line: 25\",\n+   \"This line has a length of 131. Maximum allowed is 80. File: js-aofs-Amarendra7062/tribonacci.js Line: 26\",\n+   \"Expected indentation of 2 spaces but found 3. File: js-aofs-Amarendra7062/tribonacci.js Line: 26\",\n+   \"A space is required after ','. File: js-aofs-Amarendra7062/tribonacci.js Line: 26\",\n+   \"There should be no space before ','. File: js-aofs-Amarendra7062/tribonacci.js Line: 26\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/tribonacci.js Line: 26\",\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/tribonacci.js Line: 28\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/tribonacci.js Line: 28\",\n+   \"Newline required at end of file but not found. File: js-aofs-Amarendra7062/tribonacci.js Line: 28\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Amarendra7062 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":2,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:36\n       for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                ^\n\nTypeError: Assignment to constant variable.\n    at arrayEqual (evalmachine.<anonymous>:36:65)\n    at evalmachine.<anonymous>:55:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":6,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:36\n       for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                ^\n\nTypeError: Assignment to constant variable.\n    at arrayEqual (evalmachine.<anonymous>:36:65)\n    at evalmachine.<anonymous>:55:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:36\n       for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                ^\n\nTypeError: Assignment to constant variable.\n    at arrayEqual (evalmachine.<anonymous>:36:65)\n    at evalmachine.<anonymous>:55:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:36\n       for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                ^\n\nTypeError: Assignment to constant variable.\n    at arrayEqual (evalmachine.<anonymous>:36:65)\n    at evalmachine.<anonymous>:55:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:36\n       for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                ^\n\nTypeError: Assignment to constant variable.\n    at arrayEqual (evalmachine.<anonymous>:36:65)\n    at evalmachine.<anonymous>:55:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:36\n       for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                ^\n\nTypeError: Assignment to constant variable.\n    at arrayEqual (evalmachine.<anonymous>:36:65)\n    at evalmachine.<anonymous>:55:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:36\n       for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                ^\n\nTypeError: Assignment to constant variable.\n    at arrayEqual (evalmachine.<anonymous>:36:65)\n    at evalmachine.<anonymous>:55:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:36\n       for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                ^\n\nTypeError: Assignment to constant variable.\n    at arrayEqual (evalmachine.<anonymous>:36:65)\n    at evalmachine.<anonymous>:55:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:36\n       for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                ^\n\nTypeError: Assignment to constant variable.\n    at arrayEqual (evalmachine.<anonymous>:36:65)\n    at evalmachine.<anonymous>:55:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:36\n       for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                ^\n\nTypeError: Assignment to constant variable.\n    at arrayEqual (evalmachine.<anonymous>:36:65)\n    at evalmachine.<anonymous>:55:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:36\n       for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                ^\n\nTypeError: Assignment to constant variable.\n    at arrayEqual (evalmachine.<anonymous>:36:65)\n    at evalmachine.<anonymous>:55:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:36\n       for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                ^\n\nTypeError: Assignment to constant variable.\n    at arrayEqual (evalmachine.<anonymous>:36:65)\n    at evalmachine.<anonymous>:55:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:36\n       for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                ^\n\nTypeError: Assignment to constant variable.\n    at arrayEqual (evalmachine.<anonymous>:36:65)\n    at evalmachine.<anonymous>:55:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:36\n       for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                ^\n\nTypeError: Assignment to constant variable.\n    at arrayEqual (evalmachine.<anonymous>:36:65)\n    at evalmachine.<anonymous>:55:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:36\n       for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                ^\n\nTypeError: Assignment to constant variable.\n    at arrayEqual (evalmachine.<anonymous>:36:65)\n    at arrayEqual (evalmachine.<anonymous>:38:17)\n    at arrayEqual (evalmachine.<anonymous>:38:17)\n    at arrayEqual (evalmachine.<anonymous>:38:17)\n    at arrayEqual (evalmachine.<anonymous>:38:17)\n    at arrayEqual (evalmachine.<anonymous>:38:17)\n    at arrayEqual (evalmachine.<anonymous>:38:17)\n    at arrayEqual (evalmachine.<anonymous>:38:17)\n    at arrayEqual (evalmachine.<anonymous>:38:17)\n    at arrayEqual (evalmachine.<anonymous>:38:17)"],"fullName":"JS-AOFS Amarendra7062 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":25,"failureDetails":[{"matcherResult":{"actual":["Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/array_equals.js Line: 31","Expected a function expression. File: js-aofs-Amarendra7062/array_equals.js Line: 31","Function 'arrayEqual' has too many lines (24). Maximum allowed is 15. File: js-aofs-Amarendra7062/array_equals.js Line: 31","This line has a length of 122. Maximum allowed is 80. File: js-aofs-Amarendra7062/array_equals.js Line: 32","Expected space(s) after \"if\". File: js-aofs-Amarendra7062/array_equals.js Line: 32","Operator '&&' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 32","Operator '!==' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 32","Operator '&&' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 32","Operator '&&' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 32","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/array_equals.js Line: 33","Expected space(s) after \"if\". File: js-aofs-Amarendra7062/array_equals.js Line: 33","Expected indentation of 6 spaces but found 9. File: js-aofs-Amarendra7062/array_equals.js Line: 34","Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/array_equals.js Line: 35","Expected indentation of 4 spaces but found 7. File: js-aofs-Amarendra7062/array_equals.js Line: 36","Expected space(s) after \"for\". File: js-aofs-Amarendra7062/array_equals.js Line: 36","Operator '<' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 36","'index' is constant. File: js-aofs-Amarendra7062/array_equals.js Line: 36","Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/array_equals.js Line: 37","There should be no space after '['. File: js-aofs-Amarendra7062/array_equals.js Line: 37","Operator '===' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 37","Operator '===' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 37","There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 37","Expected indentation of 8 spaces but found 11. File: js-aofs-Amarendra7062/array_equals.js Line: 38","There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 38","There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 38","Expected indentation of 10 spaces but found 12. File: js-aofs-Amarendra7062/array_equals.js Line: 39","Expected indentation of 8 spaces but found 10. File: js-aofs-Amarendra7062/array_equals.js Line: 40","Expected indentation of 6 spaces but found 7. File: js-aofs-Amarendra7062/array_equals.js Line: 41","Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Amarendra7062/array_equals.js Line: 41","Trailing spaces not allowed. File: js-aofs-Amarendra7062/array_equals.js Line: 41","Operator '!==' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 42","There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 42","Expected indentation of 8 spaces but found 9. File: js-aofs-Amarendra7062/array_equals.js Line: 43","Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Amarendra7062/array_equals.js Line: 47","Operator '===' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 48","Expected indentation of 4 spaces but found 3. File: js-aofs-Amarendra7062/array_equals.js Line: 49","Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Amarendra7062/array_equals.js Line: 50","Unnecessary 'else' after 'return'. File: js-aofs-Amarendra7062/array_equals.js Line: 51","Expected indentation of 4 spaces but found 3. File: js-aofs-Amarendra7062/array_equals.js Line: 52","Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/array_equals.js Line: 54","Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/array_equals.js Line: 55","There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 55","There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 55","Newline required at end of file but not found. File: js-aofs-Amarendra7062/array_equals.js Line: 55","Missing semicolon. File: js-aofs-Amarendra7062/array_equals.js Line: 55"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 47\n\n- Array []\n+ Array [\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/array_equals.js Line: 31\",\n+   \"Expected a function expression. File: js-aofs-Amarendra7062/array_equals.js Line: 31\",\n+   \"Function 'arrayEqual' has too many lines (24). Maximum allowed is 15. File: js-aofs-Amarendra7062/array_equals.js Line: 31\",\n+   \"This line has a length of 122. Maximum allowed is 80. File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n+   \"Expected space(s) after \\\"if\\\". File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n+   \"Operator '&&' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n+   \"Operator '!==' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n+   \"Operator '&&' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n+   \"Operator '&&' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/array_equals.js Line: 33\",\n+   \"Expected space(s) after \\\"if\\\". File: js-aofs-Amarendra7062/array_equals.js Line: 33\",\n+   \"Expected indentation of 6 spaces but found 9. File: js-aofs-Amarendra7062/array_equals.js Line: 34\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/array_equals.js Line: 35\",\n+   \"Expected indentation of 4 spaces but found 7. File: js-aofs-Amarendra7062/array_equals.js Line: 36\",\n+   \"Expected space(s) after \\\"for\\\". File: js-aofs-Amarendra7062/array_equals.js Line: 36\",\n+   \"Operator '<' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 36\",\n+   \"'index' is constant. File: js-aofs-Amarendra7062/array_equals.js Line: 36\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/array_equals.js Line: 37\",\n+   \"There should be no space after '['. File: js-aofs-Amarendra7062/array_equals.js Line: 37\",\n+   \"Operator '===' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 37\",\n+   \"Operator '===' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 37\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 37\",\n+   \"Expected indentation of 8 spaces but found 11. File: js-aofs-Amarendra7062/array_equals.js Line: 38\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 38\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 38\",\n+   \"Expected indentation of 10 spaces but found 12. File: js-aofs-Amarendra7062/array_equals.js Line: 39\",\n+   \"Expected indentation of 8 spaces but found 10. File: js-aofs-Amarendra7062/array_equals.js Line: 40\",\n+   \"Expected indentation of 6 spaces but found 7. File: js-aofs-Amarendra7062/array_equals.js Line: 41\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Amarendra7062/array_equals.js Line: 41\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/array_equals.js Line: 41\",\n+   \"Operator '!==' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 42\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 42\",\n+   \"Expected indentation of 8 spaces but found 9. File: js-aofs-Amarendra7062/array_equals.js Line: 43\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Amarendra7062/array_equals.js Line: 47\",\n+   \"Operator '===' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 48\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Amarendra7062/array_equals.js Line: 49\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Amarendra7062/array_equals.js Line: 50\",\n+   \"Unnecessary 'else' after 'return'. File: js-aofs-Amarendra7062/array_equals.js Line: 51\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Amarendra7062/array_equals.js Line: 52\",\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/array_equals.js Line: 54\",\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/array_equals.js Line: 55\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 55\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 55\",\n+   \"Newline required at end of file but not found. File: js-aofs-Amarendra7062/array_equals.js Line: 55\",\n+   \"Missing semicolon. File: js-aofs-Amarendra7062/array_equals.js Line: 55\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 47\n\n- Array []\n+ Array [\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/array_equals.js Line: 31\",\n+   \"Expected a function expression. File: js-aofs-Amarendra7062/array_equals.js Line: 31\",\n+   \"Function 'arrayEqual' has too many lines (24). Maximum allowed is 15. File: js-aofs-Amarendra7062/array_equals.js Line: 31\",\n+   \"This line has a length of 122. Maximum allowed is 80. File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n+   \"Expected space(s) after \\\"if\\\". File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n+   \"Operator '&&' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n+   \"Operator '!==' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n+   \"Operator '&&' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n+   \"Operator '&&' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/array_equals.js Line: 33\",\n+   \"Expected space(s) after \\\"if\\\". File: js-aofs-Amarendra7062/array_equals.js Line: 33\",\n+   \"Expected indentation of 6 spaces but found 9. File: js-aofs-Amarendra7062/array_equals.js Line: 34\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/array_equals.js Line: 35\",\n+   \"Expected indentation of 4 spaces but found 7. File: js-aofs-Amarendra7062/array_equals.js Line: 36\",\n+   \"Expected space(s) after \\\"for\\\". File: js-aofs-Amarendra7062/array_equals.js Line: 36\",\n+   \"Operator '<' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 36\",\n+   \"'index' is constant. File: js-aofs-Amarendra7062/array_equals.js Line: 36\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/array_equals.js Line: 37\",\n+   \"There should be no space after '['. File: js-aofs-Amarendra7062/array_equals.js Line: 37\",\n+   \"Operator '===' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 37\",\n+   \"Operator '===' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 37\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 37\",\n+   \"Expected indentation of 8 spaces but found 11. File: js-aofs-Amarendra7062/array_equals.js Line: 38\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 38\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 38\",\n+   \"Expected indentation of 10 spaces but found 12. File: js-aofs-Amarendra7062/array_equals.js Line: 39\",\n+   \"Expected indentation of 8 spaces but found 10. File: js-aofs-Amarendra7062/array_equals.js Line: 40\",\n+   \"Expected indentation of 6 spaces but found 7. File: js-aofs-Amarendra7062/array_equals.js Line: 41\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Amarendra7062/array_equals.js Line: 41\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/array_equals.js Line: 41\",\n+   \"Operator '!==' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 42\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 42\",\n+   \"Expected indentation of 8 spaces but found 9. File: js-aofs-Amarendra7062/array_equals.js Line: 43\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Amarendra7062/array_equals.js Line: 47\",\n+   \"Operator '===' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 48\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Amarendra7062/array_equals.js Line: 49\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Amarendra7062/array_equals.js Line: 50\",\n+   \"Unnecessary 'else' after 'return'. File: js-aofs-Amarendra7062/array_equals.js Line: 51\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Amarendra7062/array_equals.js Line: 52\",\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/array_equals.js Line: 54\",\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/array_equals.js Line: 55\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 55\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 55\",\n+   \"Newline required at end of file but not found. File: js-aofs-Amarendra7062/array_equals.js Line: 55\",\n+   \"Missing semicolon. File: js-aofs-Amarendra7062/array_equals.js Line: 55\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Amarendra7062 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":2,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":2,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":6,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n        value++;\n             ^\n\nTypeError: Assignment to constant variable.\n    at objects_Equal (evalmachine.<anonymous>:34:14)\n    at evalmachine.<anonymous>:59:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":27,"failureDetails":[{"matcherResult":{"actual":["A space is required after '{'. File: js-aofs-Amarendra7062/object_equals.js Line: 2","A space is required before '}'. File: js-aofs-Amarendra7062/object_equals.js Line: 2","Missing semicolon. File: js-aofs-Amarendra7062/object_equals.js Line: 2","A space is required after '{'. File: js-aofs-Amarendra7062/object_equals.js Line: 3","A space is required before '}'. File: js-aofs-Amarendra7062/object_equals.js Line: 3","Missing semicolon. File: js-aofs-Amarendra7062/object_equals.js Line: 3","Expected a function expression. File: js-aofs-Amarendra7062/object_equals.js Line: 29","Function 'objects_Equal' has too many lines (29). Maximum allowed is 15. File: js-aofs-Amarendra7062/object_equals.js Line: 29","Identifier 'objects_Equal' is not in camel case. File: js-aofs-Amarendra7062/object_equals.js Line: 29","Unexpected space before function parentheses. File: js-aofs-Amarendra7062/object_equals.js Line: 29","A space is required after ','. File: js-aofs-Amarendra7062/object_equals.js Line: 29","Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/object_equals.js Line: 30","Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/object_equals.js Line: 31","Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 32","'key' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/object_equals.js Line: 32","'key' is already declared in the upper scope on line 31 column 10. File: js-aofs-Amarendra7062/object_equals.js Line: 32","Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 33","'value' is constant. File: js-aofs-Amarendra7062/object_equals.js Line: 33","Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 34","Expected indentation of 2 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 35","Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 36","'key' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/object_equals.js Line: 36","'key' is already declared in the upper scope on line 31 column 10. File: js-aofs-Amarendra7062/object_equals.js Line: 36","Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 37","'value2' is constant. File: js-aofs-Amarendra7062/object_equals.js Line: 37","Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 38","Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 39","Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 40","Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 41","Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/object_equals.js Line: 42","'key' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/object_equals.js Line: 42","'key' is already declared in the upper scope on line 31 column 10. File: js-aofs-Amarendra7062/object_equals.js Line: 42","Expected indentation of 4 spaces but found 9. File: js-aofs-Amarendra7062/object_equals.js Line: 43","Unexpected space after unary operator '!'. File: js-aofs-Amarendra7062/object_equals.js Line: 43","There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 43","Expected indentation of 6 spaces but found 12. File: js-aofs-Amarendra7062/object_equals.js Line: 44","Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 45","Expected indentation of 4 spaces but found 10. File: js-aofs-Amarendra7062/object_equals.js Line: 46","Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 46","Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 46","Expected indentation of 6 spaces but found 12. File: js-aofs-Amarendra7062/object_equals.js Line: 47","Unexpected space after unary operator '!'. File: js-aofs-Amarendra7062/object_equals.js Line: 47","Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 47","Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 47","There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 47","There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 47","Expected indentation of 8 spaces but found 16. File: js-aofs-Amarendra7062/object_equals.js Line: 48","Expected indentation of 6 spaces but found 12. File: js-aofs-Amarendra7062/object_equals.js Line: 49","Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 50","Expected indentation of 6 spaces but found 13. File: js-aofs-Amarendra7062/object_equals.js Line: 51","Unexpected if as the only statement in an else block. File: js-aofs-Amarendra7062/object_equals.js Line: 51","Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 51","Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 51","There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 51","Expected indentation of 8 spaces but found 16. File: js-aofs-Amarendra7062/object_equals.js Line: 52","Expected indentation of 6 spaces but found 12. File: js-aofs-Amarendra7062/object_equals.js Line: 53","Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 54","Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 55","Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/object_equals.js Line: 56","A space is required after ','. File: js-aofs-Amarendra7062/object_equals.js Line: 58","There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 58","Trailing spaces not allowed. File: js-aofs-Amarendra7062/object_equals.js Line: 58","Trailing spaces not allowed. File: js-aofs-Amarendra7062/object_equals.js Line: 59","Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-Amarendra7062/object_equals.js Line: 59","Newline required at end of file but not found. File: js-aofs-Amarendra7062/object_equals.js Line: 59"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 67\n\n- Array []\n+ Array [\n+   \"A space is required after '{'. File: js-aofs-Amarendra7062/object_equals.js Line: 2\",\n+   \"A space is required before '}'. File: js-aofs-Amarendra7062/object_equals.js Line: 2\",\n+   \"Missing semicolon. File: js-aofs-Amarendra7062/object_equals.js Line: 2\",\n+   \"A space is required after '{'. File: js-aofs-Amarendra7062/object_equals.js Line: 3\",\n+   \"A space is required before '}'. File: js-aofs-Amarendra7062/object_equals.js Line: 3\",\n+   \"Missing semicolon. File: js-aofs-Amarendra7062/object_equals.js Line: 3\",\n+   \"Expected a function expression. File: js-aofs-Amarendra7062/object_equals.js Line: 29\",\n+   \"Function 'objects_Equal' has too many lines (29). Maximum allowed is 15. File: js-aofs-Amarendra7062/object_equals.js Line: 29\",\n+   \"Identifier 'objects_Equal' is not in camel case. File: js-aofs-Amarendra7062/object_equals.js Line: 29\",\n+   \"Unexpected space before function parentheses. File: js-aofs-Amarendra7062/object_equals.js Line: 29\",\n+   \"A space is required after ','. File: js-aofs-Amarendra7062/object_equals.js Line: 29\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/object_equals.js Line: 30\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/object_equals.js Line: 31\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 32\",\n+   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/object_equals.js Line: 32\",\n+   \"'key' is already declared in the upper scope on line 31 column 10. File: js-aofs-Amarendra7062/object_equals.js Line: 32\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 33\",\n+   \"'value' is constant. File: js-aofs-Amarendra7062/object_equals.js Line: 33\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 34\",\n+   \"Expected indentation of 2 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 35\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 36\",\n+   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/object_equals.js Line: 36\",\n+   \"'key' is already declared in the upper scope on line 31 column 10. File: js-aofs-Amarendra7062/object_equals.js Line: 36\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 37\",\n+   \"'value2' is constant. File: js-aofs-Amarendra7062/object_equals.js Line: 37\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 38\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 40\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 41\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/object_equals.js Line: 42\",\n+   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/object_equals.js Line: 42\",\n+   \"'key' is already declared in the upper scope on line 31 column 10. File: js-aofs-Amarendra7062/object_equals.js Line: 42\",\n+   \"Expected indentation of 4 spaces but found 9. File: js-aofs-Amarendra7062/object_equals.js Line: 43\",\n+   \"Unexpected space after unary operator '!'. File: js-aofs-Amarendra7062/object_equals.js Line: 43\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 43\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Amarendra7062/object_equals.js Line: 44\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 45\",\n+   \"Expected indentation of 4 spaces but found 10. File: js-aofs-Amarendra7062/object_equals.js Line: 46\",\n+   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 46\",\n+   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 46\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n+   \"Unexpected space after unary operator '!'. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n+   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n+   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n+   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Amarendra7062/object_equals.js Line: 48\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Amarendra7062/object_equals.js Line: 49\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 50\",\n+   \"Expected indentation of 6 spaces but found 13. File: js-aofs-Amarendra7062/object_equals.js Line: 51\",\n+   \"Unexpected if as the only statement in an else block. File: js-aofs-Amarendra7062/object_equals.js Line: 51\",\n+   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 51\",\n+   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 51\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 51\",\n+   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Amarendra7062/object_equals.js Line: 52\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Amarendra7062/object_equals.js Line: 53\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 54\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 55\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/object_equals.js Line: 56\",\n+   \"A space is required after ','. File: js-aofs-Amarendra7062/object_equals.js Line: 58\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 58\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/object_equals.js Line: 58\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/object_equals.js Line: 59\",\n+   \"Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-Amarendra7062/object_equals.js Line: 59\",\n+   \"Newline required at end of file but not found. File: js-aofs-Amarendra7062/object_equals.js Line: 59\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 67\n\n- Array []\n+ Array [\n+   \"A space is required after '{'. File: js-aofs-Amarendra7062/object_equals.js Line: 2\",\n+   \"A space is required before '}'. File: js-aofs-Amarendra7062/object_equals.js Line: 2\",\n+   \"Missing semicolon. File: js-aofs-Amarendra7062/object_equals.js Line: 2\",\n+   \"A space is required after '{'. File: js-aofs-Amarendra7062/object_equals.js Line: 3\",\n+   \"A space is required before '}'. File: js-aofs-Amarendra7062/object_equals.js Line: 3\",\n+   \"Missing semicolon. File: js-aofs-Amarendra7062/object_equals.js Line: 3\",\n+   \"Expected a function expression. File: js-aofs-Amarendra7062/object_equals.js Line: 29\",\n+   \"Function 'objects_Equal' has too many lines (29). Maximum allowed is 15. File: js-aofs-Amarendra7062/object_equals.js Line: 29\",\n+   \"Identifier 'objects_Equal' is not in camel case. File: js-aofs-Amarendra7062/object_equals.js Line: 29\",\n+   \"Unexpected space before function parentheses. File: js-aofs-Amarendra7062/object_equals.js Line: 29\",\n+   \"A space is required after ','. File: js-aofs-Amarendra7062/object_equals.js Line: 29\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/object_equals.js Line: 30\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/object_equals.js Line: 31\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 32\",\n+   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/object_equals.js Line: 32\",\n+   \"'key' is already declared in the upper scope on line 31 column 10. File: js-aofs-Amarendra7062/object_equals.js Line: 32\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 33\",\n+   \"'value' is constant. File: js-aofs-Amarendra7062/object_equals.js Line: 33\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 34\",\n+   \"Expected indentation of 2 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 35\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 36\",\n+   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/object_equals.js Line: 36\",\n+   \"'key' is already declared in the upper scope on line 31 column 10. File: js-aofs-Amarendra7062/object_equals.js Line: 36\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 37\",\n+   \"'value2' is constant. File: js-aofs-Amarendra7062/object_equals.js Line: 37\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 38\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 40\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 41\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/object_equals.js Line: 42\",\n+   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/object_equals.js Line: 42\",\n+   \"'key' is already declared in the upper scope on line 31 column 10. File: js-aofs-Amarendra7062/object_equals.js Line: 42\",\n+   \"Expected indentation of 4 spaces but found 9. File: js-aofs-Amarendra7062/object_equals.js Line: 43\",\n+   \"Unexpected space after unary operator '!'. File: js-aofs-Amarendra7062/object_equals.js Line: 43\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 43\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Amarendra7062/object_equals.js Line: 44\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 45\",\n+   \"Expected indentation of 4 spaces but found 10. File: js-aofs-Amarendra7062/object_equals.js Line: 46\",\n+   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 46\",\n+   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 46\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n+   \"Unexpected space after unary operator '!'. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n+   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n+   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n+   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Amarendra7062/object_equals.js Line: 48\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Amarendra7062/object_equals.js Line: 49\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 50\",\n+   \"Expected indentation of 6 spaces but found 13. File: js-aofs-Amarendra7062/object_equals.js Line: 51\",\n+   \"Unexpected if as the only statement in an else block. File: js-aofs-Amarendra7062/object_equals.js Line: 51\",\n+   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 51\",\n+   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 51\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 51\",\n+   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Amarendra7062/object_equals.js Line: 52\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Amarendra7062/object_equals.js Line: 53\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 54\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 55\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/object_equals.js Line: 56\",\n+   \"A space is required after ','. File: js-aofs-Amarendra7062/object_equals.js Line: 58\",\n+   \"There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 58\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/object_equals.js Line: 58\",\n+   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/object_equals.js Line: 59\",\n+   \"Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-Amarendra7062/object_equals.js Line: 59\",\n+   \"Newline required at end of file but not found. File: js-aofs-Amarendra7062/object_equals.js Line: 59\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Amarendra7062 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":23,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":32,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":31,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1, 2, 3];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1, 2, 3];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1, 2, 3];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1, 2, 3];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":2,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1, 2, 3];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1, '2', 3];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1, '2', 3];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1, 2, 3, [4, 5, 6]];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":2,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1,[3],[2]];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1, 2, 3, [4, 6]];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1, 2, null];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":2,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1, true, 3];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1, undefined, 3];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = new Array(1000).fill(0).map((_, i)=>i);\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":2,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = new Array(1000).fill(0).map((_, i)=>i);\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = null;\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [[[[[[[[[[[[1]]]]]]]]]]]];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":6,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = undefined;\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":2,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = undefined;\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = [1];\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\nresult = ARRAY_1 = {0:1};\n                 ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:46:18\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":30,"failureDetails":[{"matcherResult":{"actual":["'result' is never reassigned. Use 'const' instead. File: js-aofs-Chandiniruttala/array_equals.js Line: 45"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"'result' is never reassigned. Use 'const' instead. File: js-aofs-Chandiniruttala/array_equals.js Line: 45\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"'result' is never reassigned. Use 'const' instead. File: js-aofs-Chandiniruttala/array_equals.js Line: 45\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Chandiniruttala array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {name: 'Ram', age: 20};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {name: 'Ravi', age: 20};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {username: 'Ram', age: 20};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":2,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {name: 'Ram', age: 20, location: 'Hyderabad'};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {age: 20, name: 'Ram'};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {name: 'Ram'};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {name: 'Ram', marks:{maths: 100, science: 90}};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":11,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {name: 'Ram', marks:{maths: 90, science: 90}};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":2,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {name: 'Ram', marks: null};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {name: 'Ram', marks: undefined};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {name: 'Ram'};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {name: 'Raju', address: null};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = null;\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = undefined;\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = undefined;\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = [1];\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\nresult = OBJECT_1 = {0:1};\n                  ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:19\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":18,"failureDetails":[{"matcherResult":{"actual":["A space is required after '{'. File: js-aofs-Chandiniruttala/object_equals.js Line: 28","Missing space before value for key '0'. File: js-aofs-Chandiniruttala/object_equals.js Line: 28","A space is required before '}'. File: js-aofs-Chandiniruttala/object_equals.js Line: 28","This line has a length of 126. Maximum allowed is 80. File: js-aofs-Chandiniruttala/object_equals.js Line: 32","'result' is never reassigned. Use 'const' instead. File: js-aofs-Chandiniruttala/object_equals.js Line: 46"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 7\n\n- Array []\n+ Array [\n+   \"A space is required after '{'. File: js-aofs-Chandiniruttala/object_equals.js Line: 28\",\n+   \"Missing space before value for key '0'. File: js-aofs-Chandiniruttala/object_equals.js Line: 28\",\n+   \"A space is required before '}'. File: js-aofs-Chandiniruttala/object_equals.js Line: 28\",\n+   \"This line has a length of 126. Maximum allowed is 80. File: js-aofs-Chandiniruttala/object_equals.js Line: 32\",\n+   \"'result' is never reassigned. Use 'const' instead. File: js-aofs-Chandiniruttala/object_equals.js Line: 46\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 7\n\n- Array []\n+ Array [\n+   \"A space is required after '{'. File: js-aofs-Chandiniruttala/object_equals.js Line: 28\",\n+   \"Missing space before value for key '0'. File: js-aofs-Chandiniruttala/object_equals.js Line: 28\",\n+   \"A space is required before '}'. File: js-aofs-Chandiniruttala/object_equals.js Line: 28\",\n+   \"This line has a length of 126. Maximum allowed is 80. File: js-aofs-Chandiniruttala/object_equals.js Line: 32\",\n+   \"'result' is never reassigned. Use 'const' instead. File: js-aofs-Chandiniruttala/object_equals.js Line: 46\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Chandiniruttala object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":106,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":49,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":28,"failureDetails":[{"matcherResult":{"actual":["Function has too many lines (17). Maximum allowed is 15. File: js-aofs-Charantej21/array_equals.js Line: 31","This line has a length of 115. Maximum allowed is 80. File: js-aofs-Charantej21/array_equals.js Line: 34"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 4\n\n- Array []\n+ Array [\n+   \"Function has too many lines (17). Maximum allowed is 15. File: js-aofs-Charantej21/array_equals.js Line: 31\",\n+   \"This line has a length of 115. Maximum allowed is 80. File: js-aofs-Charantej21/array_equals.js Line: 34\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 4\n\n- Array []\n+ Array [\n+   \"Function has too many lines (17). Maximum allowed is 15. File: js-aofs-Charantej21/array_equals.js Line: 31\",\n+   \"This line has a length of 115. Maximum allowed is 80. File: js-aofs-Charantej21/array_equals.js Line: 34\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Charantej21 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":16,"failureDetails":[{"matcherResult":{"actual":["This line has a length of 153. Maximum allowed is 80. File: js-aofs-Charantej21/object_equals.js Line: 36"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"This line has a length of 153. Maximum allowed is 80. File: js-aofs-Charantej21/object_equals.js Line: 36\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"This line has a length of 153. Maximum allowed is 80. File: js-aofs-Charantej21/object_equals.js Line: 36\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Charantej21 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":36,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":17,"failureDetails":[{"matcherResult":{"actual":["This line has a length of 83. Maximum allowed is 80. File: js-aofs-G-Rajini/object_equals.js Line: 67","This line has 2 statements. Maximum allowed is 1. File: js-aofs-G-Rajini/object_equals.js Line: 69","Block must not be padded by blank lines. File: js-aofs-G-Rajini/object_equals.js Line: 72"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"This line has a length of 83. Maximum allowed is 80. File: js-aofs-G-Rajini/object_equals.js Line: 67\",\n+   \"This line has 2 statements. Maximum allowed is 1. File: js-aofs-G-Rajini/object_equals.js Line: 69\",\n+   \"Block must not be padded by blank lines. File: js-aofs-G-Rajini/object_equals.js Line: 72\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"This line has a length of 83. Maximum allowed is 80. File: js-aofs-G-Rajini/object_equals.js Line: 67\",\n+   \"This line has 2 statements. Maximum allowed is 1. File: js-aofs-G-Rajini/object_equals.js Line: 69\",\n+   \"Block must not be padded by blank lines. File: js-aofs-G-Rajini/object_equals.js Line: 72\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS G-Rajini object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":26,"failureDetails":[{"matcherResult":{"actual":["Expected indentation of 2 spaces but found 0. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 28","Expected indentation of 2 spaces but found 0. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 41","Expected indentation of 2 spaces but found 0. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 42","Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 46","Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 47","Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 48","Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 49","Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 50"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 10\n\n- Array []\n+ Array [\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 28\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 41\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 42\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 46\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 47\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 48\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 49\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 50\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 10\n\n- Array []\n+ Array [\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 28\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 41\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 42\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 46\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 47\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 48\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 49\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 50\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS GOWRIPRASADTW categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":2,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:40\n  if (array1.length !== array2.length) {\n             ^\n\nTypeError: Cannot read properties of undefined (reading 'length')\n    at arrayEqual (evalmachine.<anonymous>:40:14)\n    at evalmachine.<anonymous>:56:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":17,"failureDetails":[{"matcherResult":{"actual":["Expected a function expression. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 33","Function 'arrayEqual' has too many lines (23). Maximum allowed is 15. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 33","Unexpected space before function parentheses. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 33","Multiple spaces found before '{'. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 45","Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 49","Unexpected if as the only statement in an else block. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 49","Expected indentation of 8 spaces but found 10. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 50","Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 51","Trailing spaces not allowed. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 52","Trailing spaces not allowed. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 53","Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 54","Trailing spaces not allowed. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 55"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 14\n\n- Array []\n+ Array [\n+   \"Expected a function expression. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 33\",\n+   \"Function 'arrayEqual' has too many lines (23). Maximum allowed is 15. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 33\",\n+   \"Unexpected space before function parentheses. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 33\",\n+   \"Multiple spaces found before '{'. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 45\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 49\",\n+   \"Unexpected if as the only statement in an else block. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 49\",\n+   \"Expected indentation of 8 spaces but found 10. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 50\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 51\",\n+   \"Trailing spaces not allowed. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 52\",\n+   \"Trailing spaces not allowed. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 53\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 54\",\n+   \"Trailing spaces not allowed. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 55\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 14\n\n- Array []\n+ Array [\n+   \"Expected a function expression. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 33\",\n+   \"Function 'arrayEqual' has too many lines (23). Maximum allowed is 15. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 33\",\n+   \"Unexpected space before function parentheses. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 33\",\n+   \"Multiple spaces found before '{'. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 45\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 49\",\n+   \"Unexpected if as the only statement in an else block. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 49\",\n+   \"Expected indentation of 8 spaces but found 10. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 50\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 51\",\n+   \"Trailing spaces not allowed. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 52\",\n+   \"Trailing spaces not allowed. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 53\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 54\",\n+   \"Trailing spaces not allowed. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 55\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":2,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:39\n    if (Object.keys(object1).length !== Object.keys(object2).length) {\n               ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at objectEqual (evalmachine.<anonymous>:39:16)\n    at evalmachine.<anonymous>:56:20\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:39\n    if (Object.keys(object1).length !== Object.keys(object2).length) {\n                                               ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at objectEqual (evalmachine.<anonymous>:39:48)\n    at evalmachine.<anonymous>:56:20\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:39\n    if (Object.keys(object1).length !== Object.keys(object2).length) {\n               ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at objectEqual (evalmachine.<anonymous>:39:16)\n    at evalmachine.<anonymous>:56:20\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":17,"failureDetails":[{"matcherResult":{"actual":["Expected a function expression. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 32","Function 'objectEqual' has too many lines (24). Maximum allowed is 15. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 32","Unexpected space before function parentheses. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 32","Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 39","Expected indentation of 4 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 40","Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 41","Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 42","'element' is never reassigned. Use 'const' instead. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 42","Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 43","Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 44","Multiple spaces found before '{'. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 44","Expected indentation of 8 spaces but found 10. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 45","Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 46","Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 47","Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 47","Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 48","Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 49","Unexpected if as the only statement in an else block. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 49","Expected indentation of 8 spaces but found 10. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 50","Missing semicolon. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 50","Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 51","Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 52","Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 53","Expected indentation of 2 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 54","Expected indentation of 0 spaces but found 7. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 56","Newline required at end of file but not found. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 56","Missing semicolon. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 56"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 29\n\n- Array []\n+ Array [\n+   \"Expected a function expression. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 32\",\n+   \"Function 'objectEqual' has too many lines (24). Maximum allowed is 15. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 32\",\n+   \"Unexpected space before function parentheses. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 32\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 40\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 41\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 42\",\n+   \"'element' is never reassigned. Use 'const' instead. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 42\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 43\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 44\",\n+   \"Multiple spaces found before '{'. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 44\",\n+   \"Expected indentation of 8 spaces but found 10. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 45\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 46\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 47\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 47\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 48\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 49\",\n+   \"Unexpected if as the only statement in an else block. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 49\",\n+   \"Expected indentation of 8 spaces but found 10. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 50\",\n+   \"Missing semicolon. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 50\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 51\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 52\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 53\",\n+   \"Expected indentation of 2 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 54\",\n+   \"Expected indentation of 0 spaces but found 7. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 56\",\n+   \"Newline required at end of file but not found. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 56\",\n+   \"Missing semicolon. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 56\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 29\n\n- Array []\n+ Array [\n+   \"Expected a function expression. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 32\",\n+   \"Function 'objectEqual' has too many lines (24). Maximum allowed is 15. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 32\",\n+   \"Unexpected space before function parentheses. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 32\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 40\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 41\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 42\",\n+   \"'element' is never reassigned. Use 'const' instead. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 42\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 43\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 44\",\n+   \"Multiple spaces found before '{'. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 44\",\n+   \"Expected indentation of 8 spaces but found 10. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 45\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 46\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 47\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 47\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 48\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 49\",\n+   \"Unexpected if as the only statement in an else block. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 49\",\n+   \"Expected indentation of 8 spaces but found 10. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 50\",\n+   \"Missing semicolon. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 50\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 51\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 52\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 53\",\n+   \"Expected indentation of 2 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 54\",\n+   \"Expected indentation of 0 spaces but found 7. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 56\",\n+   \"Newline required at end of file but not found. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 56\",\n+   \"Missing semicolon. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 56\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":43,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":19,"failureDetails":[{"matcherResult":{"actual":["This line has a length of 101. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/tribonacci.js Line: 27","This line has a length of 90. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/tribonacci.js Line: 35"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 4\n\n- Array []\n+ Array [\n+   \"This line has a length of 101. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/tribonacci.js Line: 27\",\n+   \"This line has a length of 90. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/tribonacci.js Line: 35\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 4\n\n- Array []\n+ Array [\n+   \"This line has a length of 101. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/tribonacci.js Line: 27\",\n+   \"This line has a length of 90. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/tribonacci.js Line: 35\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS HemPradeepthummala tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":22,"failureDetails":[{"matcherResult":{"actual":["Function has a complexity of 27. Maximum allowed is 20. File: js-aofs-HemPradeepthummala/array_equals.js Line: 33","This line has a length of 251. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/array_equals.js Line: 34","This line has a length of 133. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/array_equals.js Line: 36","This line has a length of 176. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/array_equals.js Line: 39"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 6\n\n- Array []\n+ Array [\n+   \"Function has a complexity of 27. Maximum allowed is 20. File: js-aofs-HemPradeepthummala/array_equals.js Line: 33\",\n+   \"This line has a length of 251. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/array_equals.js Line: 34\",\n+   \"This line has a length of 133. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/array_equals.js Line: 36\",\n+   \"This line has a length of 176. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/array_equals.js Line: 39\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 6\n\n- Array []\n+ Array [\n+   \"Function has a complexity of 27. Maximum allowed is 20. File: js-aofs-HemPradeepthummala/array_equals.js Line: 33\",\n+   \"This line has a length of 251. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/array_equals.js Line: 34\",\n+   \"This line has a length of 133. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/array_equals.js Line: 36\",\n+   \"This line has a length of 176. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/array_equals.js Line: 39\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS HemPradeepthummala array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n  if ((object1 === null && object2 === null) || (object1 !== null && object2 !== null && Object.keys(object1).length === Object.keys(object2).length)) {\n                                                                                                ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at compareObjects (evalmachine.<anonymous>:34:97)\n    at evalmachine.<anonymous>:51:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":2,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n  if ((object1 === null && object2 === null) || (object1 !== null && object2 !== null && Object.keys(object1).length === Object.keys(object2).length)) {\n                                                                                                                                ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at compareObjects (evalmachine.<anonymous>:34:129)\n    at evalmachine.<anonymous>:51:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:34\n  if ((object1 === null && object2 === null) || (object1 !== null && object2 !== null && Object.keys(object1).length === Object.keys(object2).length)) {\n                                                                                                ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at compareObjects (evalmachine.<anonymous>:34:97)\n    at evalmachine.<anonymous>:51:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":18,"failureDetails":[{"matcherResult":{"actual":["Function has too many lines (18). Maximum allowed is 15. File: js-aofs-HemPradeepthummala/object_equals.js Line: 33","This line has a length of 152. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/object_equals.js Line: 34","Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-HemPradeepthummala/object_equals.js Line: 52"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"Function has too many lines (18). Maximum allowed is 15. File: js-aofs-HemPradeepthummala/object_equals.js Line: 33\",\n+   \"This line has a length of 152. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/object_equals.js Line: 34\",\n+   \"Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-HemPradeepthummala/object_equals.js Line: 52\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"Function has too many lines (18). Maximum allowed is 15. File: js-aofs-HemPradeepthummala/object_equals.js Line: 33\",\n+   \"This line has a length of 152. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/object_equals.js Line: 34\",\n+   \"Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-HemPradeepthummala/object_equals.js Line: 52\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS HemPradeepthummala object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":23,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[false],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[false],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[false],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":22,"failureDetails":[{"matcherResult":{"actual":["This line has a length of 128. Maximum allowed is 80. File: js-aofs-JAGADEESH2004PJ/array_equals.js Line: 33"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"This line has a length of 128. Maximum allowed is 80. File: js-aofs-JAGADEESH2004PJ/array_equals.js Line: 33\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"This line has a length of 128. Maximum allowed is 80. File: js-aofs-JAGADEESH2004PJ/array_equals.js Line: 33\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[false],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[false],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[false],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[false],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[false],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[false],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[false],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[false],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":49,"failureDetails":[{"matcherResult":{"actual":["Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations. File: js-aofs-JAGADEESH2004PJ/object_equals.js Line: 34","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations. File: js-aofs-JAGADEESH2004PJ/object_equals.js Line: 34","There should be no space after this paren. File: js-aofs-JAGADEESH2004PJ/object_equals.js Line: 49"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations. File: js-aofs-JAGADEESH2004PJ/object_equals.js Line: 34\",\n+   \"Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations. File: js-aofs-JAGADEESH2004PJ/object_equals.js Line: 34\",\n+   \"There should be no space after this paren. File: js-aofs-JAGADEESH2004PJ/object_equals.js Line: 49\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations. File: js-aofs-JAGADEESH2004PJ/object_equals.js Line: 34\",\n+   \"Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations. File: js-aofs-JAGADEESH2004PJ/object_equals.js Line: 34\",\n+   \"There should be no space after this paren. File: js-aofs-JAGADEESH2004PJ/object_equals.js Line: 49\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":24,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":23,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":22,"failureDetails":[{"matcherResult":{"actual":["A space is required after '{'. File: js-aofs-KARTHEEK-TAMADA/object_equals.js Line: 4","A space is required before '}'. File: js-aofs-KARTHEEK-TAMADA/object_equals.js Line: 4","'lengthCheck' was used before it was defined. File: js-aofs-KARTHEEK-TAMADA/object_equals.js Line: 38"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"A space is required after '{'. File: js-aofs-KARTHEEK-TAMADA/object_equals.js Line: 4\",\n+   \"A space is required before '}'. File: js-aofs-KARTHEEK-TAMADA/object_equals.js Line: 4\",\n+   \"'lengthCheck' was used before it was defined. File: js-aofs-KARTHEEK-TAMADA/object_equals.js Line: 38\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"A space is required after '{'. File: js-aofs-KARTHEEK-TAMADA/object_equals.js Line: 4\",\n+   \"A space is required before '}'. File: js-aofs-KARTHEEK-TAMADA/object_equals.js Line: 4\",\n+   \"'lengthCheck' was used before it was defined. File: js-aofs-KARTHEEK-TAMADA/object_equals.js Line: 38\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":23,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":18,"failureDetails":[{"matcherResult":{"actual":["'result' is never reassigned. Use 'const' instead. File: js-aofs-KalluriBhagyasree/object_equals.js Line: 31","This line has a length of 82. Maximum allowed is 80. File: js-aofs-KalluriBhagyasree/object_equals.js Line: 36"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 4\n\n- Array []\n+ Array [\n+   \"'result' is never reassigned. Use 'const' instead. File: js-aofs-KalluriBhagyasree/object_equals.js Line: 31\",\n+   \"This line has a length of 82. Maximum allowed is 80. File: js-aofs-KalluriBhagyasree/object_equals.js Line: 36\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 4\n\n- Array []\n+ Array [\n+   \"'result' is never reassigned. Use 'const' instead. File: js-aofs-KalluriBhagyasree/object_equals.js Line: 31\",\n+   \"This line has a length of 82. Maximum allowed is 80. File: js-aofs-KalluriBhagyasree/object_equals.js Line: 36\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS KalluriBhagyasree object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":26,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":31,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":23,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":24,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":29,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":29,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":29,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":31,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":29,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":34,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":39,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":29,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":29,"failureDetails":[{"matcherResult":{"actual":["'deepComparison' was used before it was defined. File: js-aofs-Nithin7411/array_equals.js Line: 43"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"'deepComparison' was used before it was defined. File: js-aofs-Nithin7411/array_equals.js Line: 43\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"'deepComparison' was used before it was defined. File: js-aofs-Nithin7411/array_equals.js Line: 43\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Nithin7411 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":96,"failureDetails":[{"matcherResult":{"actual":["Function has too many lines (17). Maximum allowed is 15. File: js-aofs-Nithin7411/object_equals.js Line: 32","Missing space before function parentheses. File: js-aofs-Nithin7411/object_equals.js Line: 32","There should be no space after this paren. File: js-aofs-Nithin7411/object_equals.js Line: 32","'objectEqual' was used before it was defined. File: js-aofs-Nithin7411/object_equals.js Line: 40","Expected space(s) before \"else\". File: js-aofs-Nithin7411/object_equals.js Line: 43","There should be no space after this paren. File: js-aofs-Nithin7411/object_equals.js Line: 50","Missing space before opening brace. File: js-aofs-Nithin7411/object_equals.js Line: 50","Missing space before opening brace. File: js-aofs-Nithin7411/object_equals.js Line: 54","Missing semicolon. File: js-aofs-Nithin7411/object_equals.js Line: 66","There should be no space after this paren. File: js-aofs-Nithin7411/object_equals.js Line: 67","There should be no space after this paren. File: js-aofs-Nithin7411/object_equals.js Line: 67"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 13\n\n- Array []\n+ Array [\n+   \"Function has too many lines (17). Maximum allowed is 15. File: js-aofs-Nithin7411/object_equals.js Line: 32\",\n+   \"Missing space before function parentheses. File: js-aofs-Nithin7411/object_equals.js Line: 32\",\n+   \"There should be no space after this paren. File: js-aofs-Nithin7411/object_equals.js Line: 32\",\n+   \"'objectEqual' was used before it was defined. File: js-aofs-Nithin7411/object_equals.js Line: 40\",\n+   \"Expected space(s) before \\\"else\\\". File: js-aofs-Nithin7411/object_equals.js Line: 43\",\n+   \"There should be no space after this paren. File: js-aofs-Nithin7411/object_equals.js Line: 50\",\n+   \"Missing space before opening brace. File: js-aofs-Nithin7411/object_equals.js Line: 50\",\n+   \"Missing space before opening brace. File: js-aofs-Nithin7411/object_equals.js Line: 54\",\n+   \"Missing semicolon. File: js-aofs-Nithin7411/object_equals.js Line: 66\",\n+   \"There should be no space after this paren. File: js-aofs-Nithin7411/object_equals.js Line: 67\",\n+   \"There should be no space after this paren. File: js-aofs-Nithin7411/object_equals.js Line: 67\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 13\n\n- Array []\n+ Array [\n+   \"Function has too many lines (17). Maximum allowed is 15. File: js-aofs-Nithin7411/object_equals.js Line: 32\",\n+   \"Missing space before function parentheses. File: js-aofs-Nithin7411/object_equals.js Line: 32\",\n+   \"There should be no space after this paren. File: js-aofs-Nithin7411/object_equals.js Line: 32\",\n+   \"'objectEqual' was used before it was defined. File: js-aofs-Nithin7411/object_equals.js Line: 40\",\n+   \"Expected space(s) before \\\"else\\\". File: js-aofs-Nithin7411/object_equals.js Line: 43\",\n+   \"There should be no space after this paren. File: js-aofs-Nithin7411/object_equals.js Line: 50\",\n+   \"Missing space before opening brace. File: js-aofs-Nithin7411/object_equals.js Line: 50\",\n+   \"Missing space before opening brace. File: js-aofs-Nithin7411/object_equals.js Line: 54\",\n+   \"Missing semicolon. File: js-aofs-Nithin7411/object_equals.js Line: 66\",\n+   \"There should be no space after this paren. File: js-aofs-Nithin7411/object_equals.js Line: 67\",\n+   \"There should be no space after this paren. File: js-aofs-Nithin7411/object_equals.js Line: 67\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Nithin7411 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":15,"failureDetails":[{"matcherResult":{"actual":["'getObjectValuesEqual' was used before it was defined. File: js-aofs-Pardhasaradhi031/object_equals.js Line: 39"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"'getObjectValuesEqual' was used before it was defined. File: js-aofs-Pardhasaradhi031/object_equals.js Line: 39\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"'getObjectValuesEqual' was used before it was defined. File: js-aofs-Pardhasaradhi031/object_equals.js Line: 39\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":10,"failureDetails":[{"matcherResult":{"actual":["Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 20","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 21","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 22","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 23","Missing semicolon. File: js-aofs-Pujari-Praveen/even_odd.js Line: 23","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 24","'index' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/even_odd.js Line: 24","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 25","Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/even_odd.js Line: 26","Strings must use singlequote. File: js-aofs-Pujari-Praveen/even_odd.js Line: 26","Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/even_odd.js Line: 27","Unexpected use of continue statement. File: js-aofs-Pujari-Praveen/even_odd.js Line: 27","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 28","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 29","Strings must use singlequote. File: js-aofs-Pujari-Praveen/even_odd.js Line: 29","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 30","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 31","Missing semicolon. File: js-aofs-Pujari-Praveen/even_odd.js Line: 32","Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/even_odd.js Line: 35"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 21\n\n- Array []\n+ Array [\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 20\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 21\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 22\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 23\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/even_odd.js Line: 23\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 24\",\n+   \"'index' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/even_odd.js Line: 24\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 25\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/even_odd.js Line: 26\",\n+   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/even_odd.js Line: 26\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/even_odd.js Line: 27\",\n+   \"Unexpected use of continue statement. File: js-aofs-Pujari-Praveen/even_odd.js Line: 27\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 28\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 29\",\n+   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/even_odd.js Line: 29\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 30\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 31\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/even_odd.js Line: 32\",\n+   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/even_odd.js Line: 35\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 21\n\n- Array []\n+ Array [\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 20\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 21\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 22\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 23\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/even_odd.js Line: 23\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 24\",\n+   \"'index' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/even_odd.js Line: 24\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 25\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/even_odd.js Line: 26\",\n+   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/even_odd.js Line: 26\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/even_odd.js Line: 27\",\n+   \"Unexpected use of continue statement. File: js-aofs-Pujari-Praveen/even_odd.js Line: 27\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 28\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 29\",\n+   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/even_odd.js Line: 29\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 30\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 31\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/even_odd.js Line: 32\",\n+   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/even_odd.js Line: 35\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Pujari-Praveen even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":19,"failureDetails":[{"matcherResult":{"actual":["Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 29","'index' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/categorise.js Line: 29","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 30","Block must not be padded by blank lines. File: js-aofs-Pujari-Praveen/categorise.js Line: 30","Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/categorise.js Line: 32","Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/categorise.js Line: 33","'temp' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/categorise.js Line: 33","Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/categorise.js Line: 34","Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/categorise.js Line: 35","Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/categorise.js Line: 36","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 37","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 38","Missing semicolon. File: js-aofs-Pujari-Praveen/categorise.js Line: 39","Function has too many lines (16). Maximum allowed is 15. File: js-aofs-Pujari-Praveen/categorise.js Line: 41","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 42","'categorisedList' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/categorise.js Line: 42","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 43","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 44","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 45","'tempList' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/categorise.js Line: 45","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 46","Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/categorise.js Line: 47","Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/categorise.js Line: 48","Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/categorise.js Line: 49","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 50","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 51","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 52","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 53","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 55","Missing semicolon. File: js-aofs-Pujari-Praveen/categorise.js Line: 56","Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/categorise.js Line: 60"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 33\n\n- Array []\n+ Array [\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 29\",\n+   \"'index' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/categorise.js Line: 29\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 30\",\n+   \"Block must not be padded by blank lines. File: js-aofs-Pujari-Praveen/categorise.js Line: 30\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/categorise.js Line: 32\",\n+   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/categorise.js Line: 33\",\n+   \"'temp' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/categorise.js Line: 33\",\n+   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/categorise.js Line: 34\",\n+   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/categorise.js Line: 35\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/categorise.js Line: 36\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 37\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 38\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/categorise.js Line: 39\",\n+   \"Function has too many lines (16). Maximum allowed is 15. File: js-aofs-Pujari-Praveen/categorise.js Line: 41\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 42\",\n+   \"'categorisedList' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/categorise.js Line: 42\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 43\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 44\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 45\",\n+   \"'tempList' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/categorise.js Line: 45\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 46\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/categorise.js Line: 47\",\n+   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/categorise.js Line: 48\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/categorise.js Line: 49\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 50\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 51\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 52\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 53\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 55\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/categorise.js Line: 56\",\n+   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/categorise.js Line: 60\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 33\n\n- Array []\n+ Array [\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 29\",\n+   \"'index' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/categorise.js Line: 29\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 30\",\n+   \"Block must not be padded by blank lines. File: js-aofs-Pujari-Praveen/categorise.js Line: 30\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/categorise.js Line: 32\",\n+   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/categorise.js Line: 33\",\n+   \"'temp' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/categorise.js Line: 33\",\n+   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/categorise.js Line: 34\",\n+   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/categorise.js Line: 35\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/categorise.js Line: 36\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 37\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 38\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/categorise.js Line: 39\",\n+   \"Function has too many lines (16). Maximum allowed is 15. File: js-aofs-Pujari-Praveen/categorise.js Line: 41\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 42\",\n+   \"'categorisedList' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/categorise.js Line: 42\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 43\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 44\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 45\",\n+   \"'tempList' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/categorise.js Line: 45\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 46\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/categorise.js Line: 47\",\n+   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/categorise.js Line: 48\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/categorise.js Line: 49\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 50\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 51\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 52\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 53\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 55\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/categorise.js Line: 56\",\n+   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/categorise.js Line: 60\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Pujari-Praveen categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":10,"failureDetails":[{"matcherResult":{"actual":["Strings must use singlequote. File: js-aofs-Pujari-Praveen/entries.js Line: 3","Trailing spaces not allowed. File: js-aofs-Pujari-Praveen/entries.js Line: 6","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/entries.js Line: 26","'finalList' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/entries.js Line: 26","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/entries.js Line: 27","'key' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/entries.js Line: 27","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/entries.js Line: 28","'tempList' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/entries.js Line: 28","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/entries.js Line: 29","Missing semicolon. File: js-aofs-Pujari-Praveen/entries.js Line: 29","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/entries.js Line: 30","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/entries.js Line: 31","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/entries.js Line: 32","Missing semicolon. File: js-aofs-Pujari-Praveen/entries.js Line: 33","Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/entries.js Line: 34"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 17\n\n- Array []\n+ Array [\n+   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/entries.js Line: 3\",\n+   \"Trailing spaces not allowed. File: js-aofs-Pujari-Praveen/entries.js Line: 6\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/entries.js Line: 26\",\n+   \"'finalList' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/entries.js Line: 26\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/entries.js Line: 27\",\n+   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/entries.js Line: 27\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/entries.js Line: 28\",\n+   \"'tempList' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/entries.js Line: 28\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/entries.js Line: 29\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/entries.js Line: 29\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/entries.js Line: 30\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/entries.js Line: 31\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/entries.js Line: 32\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/entries.js Line: 33\",\n+   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/entries.js Line: 34\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 17\n\n- Array []\n+ Array [\n+   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/entries.js Line: 3\",\n+   \"Trailing spaces not allowed. File: js-aofs-Pujari-Praveen/entries.js Line: 6\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/entries.js Line: 26\",\n+   \"'finalList' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/entries.js Line: 26\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/entries.js Line: 27\",\n+   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/entries.js Line: 27\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/entries.js Line: 28\",\n+   \"'tempList' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/entries.js Line: 28\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/entries.js Line: 29\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/entries.js Line: 29\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/entries.js Line: 30\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/entries.js Line: 31\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/entries.js Line: 32\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/entries.js Line: 33\",\n+   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/entries.js Line: 34\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Pujari-Praveen entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":14,"failureDetails":[{"matcherResult":{"actual":["Strings must use singlequote. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 3","Trailing spaces not allowed. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 7","Expected '===' and instead saw '=='. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 33","Block must not be padded by blank lines. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 36","Expected '!==' and instead saw '!='. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 38","Expected '===' and instead saw '=='. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 40","Expected '!==' and instead saw '!='. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 40","Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 46"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 10\n\n- Array []\n+ Array [\n+   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 3\",\n+   \"Trailing spaces not allowed. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 7\",\n+   \"Expected '===' and instead saw '=='. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 33\",\n+   \"Block must not be padded by blank lines. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 36\",\n+   \"Expected '!==' and instead saw '!='. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 38\",\n+   \"Expected '===' and instead saw '=='. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 40\",\n+   \"Expected '!==' and instead saw '!='. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 40\",\n+   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 46\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 10\n\n- Array []\n+ Array [\n+   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 3\",\n+   \"Trailing spaces not allowed. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 7\",\n+   \"Expected '===' and instead saw '=='. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 33\",\n+   \"Block must not be padded by blank lines. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 36\",\n+   \"Expected '!==' and instead saw '!='. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 38\",\n+   \"Expected '===' and instead saw '=='. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 40\",\n+   \"Expected '!==' and instead saw '!='. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 40\",\n+   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 46\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":10,"failureDetails":[{"matcherResult":{"actual":["Trailing spaces not allowed. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 7","'finalOne' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 26","Missing semicolon. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 26","Missing semicolon. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 38","Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 40"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 7\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 7\",\n+   \"'finalOne' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 26\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 26\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 38\",\n+   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 40\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 7\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 7\",\n+   \"'finalOne' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 26\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 26\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 38\",\n+   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 40\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Pujari-Praveen tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:32\n    if ((array1 !== null && array2 !== null) && (array1.length !== array2.length)) {\n                                                        ^\n\nTypeError: Cannot read properties of undefined (reading 'length')\n    at checkArraysEqualOrNot (evalmachine.<anonymous>:32:57)\n    at evalmachine.<anonymous>:47:22\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":15,"failureDetails":[{"matcherResult":{"actual":["This line has a length of 84. Maximum allowed is 80. File: js-aofs-Pujari-Praveen/array_equals.js Line: 32","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 32","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/array_equals.js Line: 33","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 34","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 35","'key' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/array_equals.js Line: 35","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/array_equals.js Line: 36","Strings must use singlequote. File: js-aofs-Pujari-Praveen/array_equals.js Line: 36","Strings must use singlequote. File: js-aofs-Pujari-Praveen/array_equals.js Line: 36","Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/array_equals.js Line: 37","Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/array_equals.js Line: 38","Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/array_equals.js Line: 39","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/array_equals.js Line: 40","Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/array_equals.js Line: 41","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/array_equals.js Line: 42","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 43","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 44","Missing semicolon. File: js-aofs-Pujari-Praveen/array_equals.js Line: 45","Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/array_equals.js Line: 48"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 21\n\n- Array []\n+ Array [\n+   \"This line has a length of 84. Maximum allowed is 80. File: js-aofs-Pujari-Praveen/array_equals.js Line: 32\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 32\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/array_equals.js Line: 33\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 34\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 35\",\n+   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/array_equals.js Line: 35\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/array_equals.js Line: 36\",\n+   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/array_equals.js Line: 36\",\n+   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/array_equals.js Line: 36\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/array_equals.js Line: 37\",\n+   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/array_equals.js Line: 38\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/array_equals.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/array_equals.js Line: 40\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/array_equals.js Line: 41\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/array_equals.js Line: 42\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 43\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 44\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/array_equals.js Line: 45\",\n+   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/array_equals.js Line: 48\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 21\n\n- Array []\n+ Array [\n+   \"This line has a length of 84. Maximum allowed is 80. File: js-aofs-Pujari-Praveen/array_equals.js Line: 32\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 32\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/array_equals.js Line: 33\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 34\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 35\",\n+   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/array_equals.js Line: 35\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/array_equals.js Line: 36\",\n+   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/array_equals.js Line: 36\",\n+   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/array_equals.js Line: 36\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/array_equals.js Line: 37\",\n+   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/array_equals.js Line: 38\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/array_equals.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/array_equals.js Line: 40\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/array_equals.js Line: 41\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/array_equals.js Line: 42\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 43\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 44\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/array_equals.js Line: 45\",\n+   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/array_equals.js Line: 48\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Pujari-Praveen array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:32\n    if ((obj1 !== null && obj2 !== null) && (Object.keys(obj1).length !== Object.keys(obj2).length)) {\n                                                    ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at checkObjectsEqualOrNot (evalmachine.<anonymous>:32:53)\n    at evalmachine.<anonymous>:47:20\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:32\n    if ((obj1 !== null && obj2 !== null) && (Object.keys(obj1).length !== Object.keys(obj2).length)) {\n                                                                                 ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at checkObjectsEqualOrNot (evalmachine.<anonymous>:32:82)\n    at evalmachine.<anonymous>:47:20\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":2,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:32\n    if ((obj1 !== null && obj2 !== null) && (Object.keys(obj1).length !== Object.keys(obj2).length)) {\n                                                    ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at checkObjectsEqualOrNot (evalmachine.<anonymous>:32:53)\n    at evalmachine.<anonymous>:47:20\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":11,"failureDetails":[{"matcherResult":{"actual":["This line has a length of 102. Maximum allowed is 80. File: js-aofs-Pujari-Praveen/object_equals.js Line: 32","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 32","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/object_equals.js Line: 33","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 34","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 35","'key' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/object_equals.js Line: 35","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/object_equals.js Line: 36","Strings must use singlequote. File: js-aofs-Pujari-Praveen/object_equals.js Line: 36","Strings must use singlequote. File: js-aofs-Pujari-Praveen/object_equals.js Line: 36","Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/object_equals.js Line: 37","Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/object_equals.js Line: 38","Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/object_equals.js Line: 39","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/object_equals.js Line: 40","Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/object_equals.js Line: 41","Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/object_equals.js Line: 42","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 43","Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 44","Missing semicolon. File: js-aofs-Pujari-Praveen/object_equals.js Line: 45","Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/object_equals.js Line: 48"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 21\n\n- Array []\n+ Array [\n+   \"This line has a length of 102. Maximum allowed is 80. File: js-aofs-Pujari-Praveen/object_equals.js Line: 32\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 32\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/object_equals.js Line: 33\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 34\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 35\",\n+   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/object_equals.js Line: 35\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/object_equals.js Line: 36\",\n+   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/object_equals.js Line: 36\",\n+   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/object_equals.js Line: 36\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/object_equals.js Line: 37\",\n+   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/object_equals.js Line: 38\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/object_equals.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/object_equals.js Line: 40\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/object_equals.js Line: 41\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/object_equals.js Line: 42\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 43\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 44\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/object_equals.js Line: 45\",\n+   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/object_equals.js Line: 48\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 21\n\n- Array []\n+ Array [\n+   \"This line has a length of 102. Maximum allowed is 80. File: js-aofs-Pujari-Praveen/object_equals.js Line: 32\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 32\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/object_equals.js Line: 33\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 34\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 35\",\n+   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/object_equals.js Line: 35\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/object_equals.js Line: 36\",\n+   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/object_equals.js Line: 36\",\n+   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/object_equals.js Line: 36\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/object_equals.js Line: 37\",\n+   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/object_equals.js Line: 38\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/object_equals.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/object_equals.js Line: 40\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/object_equals.js Line: 41\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/object_equals.js Line: 42\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 43\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 44\",\n+   \"Missing semicolon. File: js-aofs-Pujari-Praveen/object_equals.js Line: 45\",\n+   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/object_equals.js Line: 48\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Pujari-Praveen object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":14,"failureDetails":[{"matcherResult":{"actual":["Trailing spaces not allowed. File: js-aofs-Rohith-216/tribonacci.js Line: 7","Function has too many lines (20). Maximum allowed is 15. File: js-aofs-Rohith-216/tribonacci.js Line: 23","This line has a length of 85. Maximum allowed is 80. File: js-aofs-Rohith-216/tribonacci.js Line: 28","Assignment to function parameter 'firstNumber'. File: js-aofs-Rohith-216/tribonacci.js Line: 31","Assignment to function parameter 'secondNumber'. File: js-aofs-Rohith-216/tribonacci.js Line: 32","Assignment to function parameter 'thirdNumber'. File: js-aofs-Rohith-216/tribonacci.js Line: 33","Assignment to function parameter 'fourthNumber'. File: js-aofs-Rohith-216/tribonacci.js Line: 34","Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Rohith-216/tribonacci.js Line: 36","Unnecessary 'else' after 'return'. File: js-aofs-Rohith-216/tribonacci.js Line: 37","Missing semicolon. File: js-aofs-Rohith-216/tribonacci.js Line: 40"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 12\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-Rohith-216/tribonacci.js Line: 7\",\n+   \"Function has too many lines (20). Maximum allowed is 15. File: js-aofs-Rohith-216/tribonacci.js Line: 23\",\n+   \"This line has a length of 85. Maximum allowed is 80. File: js-aofs-Rohith-216/tribonacci.js Line: 28\",\n+   \"Assignment to function parameter 'firstNumber'. File: js-aofs-Rohith-216/tribonacci.js Line: 31\",\n+   \"Assignment to function parameter 'secondNumber'. File: js-aofs-Rohith-216/tribonacci.js Line: 32\",\n+   \"Assignment to function parameter 'thirdNumber'. File: js-aofs-Rohith-216/tribonacci.js Line: 33\",\n+   \"Assignment to function parameter 'fourthNumber'. File: js-aofs-Rohith-216/tribonacci.js Line: 34\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Rohith-216/tribonacci.js Line: 36\",\n+   \"Unnecessary 'else' after 'return'. File: js-aofs-Rohith-216/tribonacci.js Line: 37\",\n+   \"Missing semicolon. File: js-aofs-Rohith-216/tribonacci.js Line: 40\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 12\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-Rohith-216/tribonacci.js Line: 7\",\n+   \"Function has too many lines (20). Maximum allowed is 15. File: js-aofs-Rohith-216/tribonacci.js Line: 23\",\n+   \"This line has a length of 85. Maximum allowed is 80. File: js-aofs-Rohith-216/tribonacci.js Line: 28\",\n+   \"Assignment to function parameter 'firstNumber'. File: js-aofs-Rohith-216/tribonacci.js Line: 31\",\n+   \"Assignment to function parameter 'secondNumber'. File: js-aofs-Rohith-216/tribonacci.js Line: 32\",\n+   \"Assignment to function parameter 'thirdNumber'. File: js-aofs-Rohith-216/tribonacci.js Line: 33\",\n+   \"Assignment to function parameter 'fourthNumber'. File: js-aofs-Rohith-216/tribonacci.js Line: 34\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Rohith-216/tribonacci.js Line: 36\",\n+   \"Unnecessary 'else' after 'return'. File: js-aofs-Rohith-216/tribonacci.js Line: 37\",\n+   \"Missing semicolon. File: js-aofs-Rohith-216/tribonacci.js Line: 40\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Rohith-216 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[" "],"expected":[""],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"\",\n+   \" \",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"\",\n+   \" \",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[" Leading spaces!!!"],"expected":["Leading spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Leading spaces!!!\",\n+   \" Leading spaces!!!\",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Leading spaces!!!\",\n+   \" Leading spaces!!!\",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[" Leading spaces!!! & Trailing Spaces!!! "],"expected":["Leading spaces!!! & Trailing Spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Leading spaces!!! & Trailing Spaces!!!\",\n+   \" Leading spaces!!! & Trailing Spaces!!! \",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Leading spaces!!! & Trailing Spaces!!!\",\n+   \" Leading spaces!!! & Trailing Spaces!!! \",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":["Trailing Spaces!!! "],"expected":["Trailing Spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Trailing Spaces!!!\",\n+   \"Trailing Spaces!!! \",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Trailing Spaces!!!\",\n+   \"Trailing Spaces!!! \",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[" こんにちは 世界 "],"expected":["こんにちは 世界"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"こんにちは 世界\",\n+   \" こんにちは 世界 \",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"こんにちは 世界\",\n+   \" こんにちは 世界 \",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":13,"failureDetails":[{"matcherResult":{"actual":["'myArrayFunction' was used before it was defined. File: js-aofs-SACHITH31/array_equals.js Line: 34","This line has a length of 132. Maximum allowed is 80. File: js-aofs-SACHITH31/array_equals.js Line: 47"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 4\n\n- Array []\n+ Array [\n+   \"'myArrayFunction' was used before it was defined. File: js-aofs-SACHITH31/array_equals.js Line: 34\",\n+   \"This line has a length of 132. Maximum allowed is 80. File: js-aofs-SACHITH31/array_equals.js Line: 47\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 4\n\n- Array []\n+ Array [\n+   \"'myArrayFunction' was used before it was defined. File: js-aofs-SACHITH31/array_equals.js Line: 34\",\n+   \"This line has a length of 132. Maximum allowed is 80. File: js-aofs-SACHITH31/array_equals.js Line: 47\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS SACHITH31 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":15,"failureDetails":[{"matcherResult":{"actual":["This line has a length of 91. Maximum allowed is 80. File: js-aofs-SACHITH31/object_equals.js Line: 32","This line has a length of 91. Maximum allowed is 80. File: js-aofs-SACHITH31/object_equals.js Line: 35","'anotherFunction' was used before it was defined. File: js-aofs-SACHITH31/object_equals.js Line: 44"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"This line has a length of 91. Maximum allowed is 80. File: js-aofs-SACHITH31/object_equals.js Line: 32\",\n+   \"This line has a length of 91. Maximum allowed is 80. File: js-aofs-SACHITH31/object_equals.js Line: 35\",\n+   \"'anotherFunction' was used before it was defined. File: js-aofs-SACHITH31/object_equals.js Line: 44\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"This line has a length of 91. Maximum allowed is 80. File: js-aofs-SACHITH31/object_equals.js Line: 32\",\n+   \"This line has a length of 91. Maximum allowed is 80. File: js-aofs-SACHITH31/object_equals.js Line: 35\",\n+   \"'anotherFunction' was used before it was defined. File: js-aofs-SACHITH31/object_equals.js Line: 44\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS SACHITH31 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":0,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":13,"failureDetails":[{"matcherResult":{"actual":["Unnecessary use of boolean literals in conditional expression. File: js-aofs-SaiLokeshGoud/array_equals.js Line: 44","Expected '!==' and instead saw '!='. File: js-aofs-SaiLokeshGoud/array_equals.js Line: 45","Expected '!==' and instead saw '!='. File: js-aofs-SaiLokeshGoud/array_equals.js Line: 45"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"Unnecessary use of boolean literals in conditional expression. File: js-aofs-SaiLokeshGoud/array_equals.js Line: 44\",\n+   \"Expected '!==' and instead saw '!='. File: js-aofs-SaiLokeshGoud/array_equals.js Line: 45\",\n+   \"Expected '!==' and instead saw '!='. File: js-aofs-SaiLokeshGoud/array_equals.js Line: 45\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"Unnecessary use of boolean literals in conditional expression. File: js-aofs-SaiLokeshGoud/array_equals.js Line: 44\",\n+   \"Expected '!==' and instead saw '!='. File: js-aofs-SaiLokeshGoud/array_equals.js Line: 45\",\n+   \"Expected '!==' and instead saw '!='. File: js-aofs-SaiLokeshGoud/array_equals.js Line: 45\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS SaiLokeshGoud array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\n  result = OBJECT_1 = null;\n                    ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:21\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:49\nif (OBJECT_1 !== null && OBJECT_2 !== null && OBJECT_1.length === OBJECT_2.length) {\n                                                       ^\n\nTypeError: Cannot read properties of undefined (reading 'length')\n    at evalmachine.<anonymous>:49:56\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:49\nif (OBJECT_1 !== null && OBJECT_2 !== null && OBJECT_1.length === OBJECT_2.length) {\n                                                                           ^\n\nTypeError: Cannot read properties of undefined (reading 'length')\n    at evalmachine.<anonymous>:49:76\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\n  result = OBJECT_1 = undefined;\n                    ^\n\nTypeError: Assignment to constant variable.\n    at evalmachine.<anonymous>:47:21\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":13,"failureDetails":[{"matcherResult":{"actual":["This line has a length of 84. Maximum allowed is 80. File: js-aofs-SaiLokeshGoud/object_equals.js Line: 49"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"This line has a length of 84. Maximum allowed is 80. File: js-aofs-SaiLokeshGoud/object_equals.js Line: 49\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"This line has a length of 84. Maximum allowed is 80. File: js-aofs-SaiLokeshGoud/object_equals.js Line: 49\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS SaiLokeshGoud object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[false],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[false],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":23,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":20,"failureDetails":[{"matcherResult":{"actual":["This line has a length of 125. Maximum allowed is 80. File: js-aofs-SkAkramali/object_equals.js Line: 35"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"This line has a length of 125. Maximum allowed is 80. File: js-aofs-SkAkramali/object_equals.js Line: 35\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"This line has a length of 125. Maximum allowed is 80. File: js-aofs-SkAkramali/object_equals.js Line: 35\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS SkAkramali object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":15,"failureDetails":[{"matcherResult":{"actual":["Expected a function expression. File: js-aofs-Sravani175/even_odd.js Line: 18","Missing space before opening brace. File: js-aofs-Sravani175/even_odd.js Line: 18","Expected indentation of 2 spaces but found 1. File: js-aofs-Sravani175/even_odd.js Line: 19","A space is required before '}'. File: js-aofs-Sravani175/even_odd.js Line: 19","Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/even_odd.js Line: 20","There should be no space after this paren. File: js-aofs-Sravani175/even_odd.js Line: 20","'mine' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/even_odd.js Line: 20","Missing space before opening brace. File: js-aofs-Sravani175/even_odd.js Line: 20","Expected indentation of 4 spaces but found 6. File: js-aofs-Sravani175/even_odd.js Line: 21","There should be no space before this paren. File: js-aofs-Sravani175/even_odd.js Line: 21","Missing space before opening brace. File: js-aofs-Sravani175/even_odd.js Line: 21","Expected indentation of 6 spaces but found 4. File: js-aofs-Sravani175/even_odd.js Line: 22","Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Sravani175/even_odd.js Line: 23","Expected indentation of 4 spaces but found 0. File: js-aofs-Sravani175/even_odd.js Line: 23","Expected indentation of 4 spaces but found 5. File: js-aofs-Sravani175/even_odd.js Line: 24","Expected indentation of 6 spaces but found 9. File: js-aofs-Sravani175/even_odd.js Line: 25","Expected indentation of 4 spaces but found 6. File: js-aofs-Sravani175/even_odd.js Line: 26","Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/even_odd.js Line: 27","Expected indentation of 2 spaces but found 6. File: js-aofs-Sravani175/even_odd.js Line: 28","Expected indentation of 0 spaces but found 2. File: js-aofs-Sravani175/even_odd.js Line: 29","Expected indentation of 0 spaces but found 4. File: js-aofs-Sravani175/even_odd.js Line: 30","Trailing spaces not allowed. File: js-aofs-Sravani175/even_odd.js Line: 31","Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-Sravani175/even_odd.js Line: 31","Newline required at end of file but not found. File: js-aofs-Sravani175/even_odd.js Line: 31"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 26\n\n- Array []\n+ Array [\n+   \"Expected a function expression. File: js-aofs-Sravani175/even_odd.js Line: 18\",\n+   \"Missing space before opening brace. File: js-aofs-Sravani175/even_odd.js Line: 18\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sravani175/even_odd.js Line: 19\",\n+   \"A space is required before '}'. File: js-aofs-Sravani175/even_odd.js Line: 19\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/even_odd.js Line: 20\",\n+   \"There should be no space after this paren. File: js-aofs-Sravani175/even_odd.js Line: 20\",\n+   \"'mine' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/even_odd.js Line: 20\",\n+   \"Missing space before opening brace. File: js-aofs-Sravani175/even_odd.js Line: 20\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sravani175/even_odd.js Line: 21\",\n+   \"There should be no space before this paren. File: js-aofs-Sravani175/even_odd.js Line: 21\",\n+   \"Missing space before opening brace. File: js-aofs-Sravani175/even_odd.js Line: 21\",\n+   \"Expected indentation of 6 spaces but found 4. File: js-aofs-Sravani175/even_odd.js Line: 22\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Sravani175/even_odd.js Line: 23\",\n+   \"Expected indentation of 4 spaces but found 0. File: js-aofs-Sravani175/even_odd.js Line: 23\",\n+   \"Expected indentation of 4 spaces but found 5. File: js-aofs-Sravani175/even_odd.js Line: 24\",\n+   \"Expected indentation of 6 spaces but found 9. File: js-aofs-Sravani175/even_odd.js Line: 25\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sravani175/even_odd.js Line: 26\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/even_odd.js Line: 27\",\n+   \"Expected indentation of 2 spaces but found 6. File: js-aofs-Sravani175/even_odd.js Line: 28\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-Sravani175/even_odd.js Line: 29\",\n+   \"Expected indentation of 0 spaces but found 4. File: js-aofs-Sravani175/even_odd.js Line: 30\",\n+   \"Trailing spaces not allowed. File: js-aofs-Sravani175/even_odd.js Line: 31\",\n+   \"Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-Sravani175/even_odd.js Line: 31\",\n+   \"Newline required at end of file but not found. File: js-aofs-Sravani175/even_odd.js Line: 31\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 26\n\n- Array []\n+ Array [\n+   \"Expected a function expression. File: js-aofs-Sravani175/even_odd.js Line: 18\",\n+   \"Missing space before opening brace. File: js-aofs-Sravani175/even_odd.js Line: 18\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sravani175/even_odd.js Line: 19\",\n+   \"A space is required before '}'. File: js-aofs-Sravani175/even_odd.js Line: 19\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/even_odd.js Line: 20\",\n+   \"There should be no space after this paren. File: js-aofs-Sravani175/even_odd.js Line: 20\",\n+   \"'mine' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/even_odd.js Line: 20\",\n+   \"Missing space before opening brace. File: js-aofs-Sravani175/even_odd.js Line: 20\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sravani175/even_odd.js Line: 21\",\n+   \"There should be no space before this paren. File: js-aofs-Sravani175/even_odd.js Line: 21\",\n+   \"Missing space before opening brace. File: js-aofs-Sravani175/even_odd.js Line: 21\",\n+   \"Expected indentation of 6 spaces but found 4. File: js-aofs-Sravani175/even_odd.js Line: 22\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Sravani175/even_odd.js Line: 23\",\n+   \"Expected indentation of 4 spaces but found 0. File: js-aofs-Sravani175/even_odd.js Line: 23\",\n+   \"Expected indentation of 4 spaces but found 5. File: js-aofs-Sravani175/even_odd.js Line: 24\",\n+   \"Expected indentation of 6 spaces but found 9. File: js-aofs-Sravani175/even_odd.js Line: 25\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sravani175/even_odd.js Line: 26\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/even_odd.js Line: 27\",\n+   \"Expected indentation of 2 spaces but found 6. File: js-aofs-Sravani175/even_odd.js Line: 28\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-Sravani175/even_odd.js Line: 29\",\n+   \"Expected indentation of 0 spaces but found 4. File: js-aofs-Sravani175/even_odd.js Line: 30\",\n+   \"Trailing spaces not allowed. File: js-aofs-Sravani175/even_odd.js Line: 31\",\n+   \"Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-Sravani175/even_odd.js Line: 31\",\n+   \"Newline required at end of file but not found. File: js-aofs-Sravani175/even_odd.js Line: 31\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Sravani175 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":21,"failureDetails":[{"matcherResult":{"actual":["Expected a function expression. File: js-aofs-Sravani175/categorise.js Line: 26","Function 'groupNumbers' has too many lines (16). Maximum allowed is 15. File: js-aofs-Sravani175/categorise.js Line: 26","Missing space before opening brace. File: js-aofs-Sravani175/categorise.js Line: 26","Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/categorise.js Line: 28","'num' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/categorise.js Line: 28","Expected indentation of 4 spaces but found 6. File: js-aofs-Sravani175/categorise.js Line: 29","Unexpected whitespace before property num. File: js-aofs-Sravani175/categorise.js Line: 29","There should be no space before this paren. File: js-aofs-Sravani175/categorise.js Line: 29","Expected indentation of 6 spaces but found 2. File: js-aofs-Sravani175/categorise.js Line: 30","Unexpected whitespace before property num. File: js-aofs-Sravani175/categorise.js Line: 30","Expected indentation of 4 spaces but found 0. File: js-aofs-Sravani175/categorise.js Line: 31","Expected indentation of 4 spaces but found 3. File: js-aofs-Sravani175/categorise.js Line: 32","Unexpected whitespace before property num. File: js-aofs-Sravani175/categorise.js Line: 32","Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/categorise.js Line: 33","Expected indentation of 2 spaces but found 0. File: js-aofs-Sravani175/categorise.js Line: 34","'arrays' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/categorise.js Line: 34","'keys' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/categorise.js Line: 35","Operator '=' must be spaced. File: js-aofs-Sravani175/categorise.js Line: 35","A space is required after ','. File: js-aofs-Sravani175/categorise.js Line: 35","Missing space before =>. File: js-aofs-Sravani175/categorise.js Line: 35","Missing space after =>. File: js-aofs-Sravani175/categorise.js Line: 35","Operator '-' must be spaced. File: js-aofs-Sravani175/categorise.js Line: 35","Expected indentation of 2 spaces but found 3. File: js-aofs-Sravani175/categorise.js Line: 36","Expected space(s) after \"for\". File: js-aofs-Sravani175/categorise.js Line: 36","'k' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/categorise.js Line: 36","Opening curly brace does not appear on the same line as controlling statement. File: js-aofs-Sravani175/categorise.js Line: 37","Expected indentation of 2 spaces but found 0. File: js-aofs-Sravani175/categorise.js Line: 37","Expected indentation of 2 spaces but found 0. File: js-aofs-Sravani175/categorise.js Line: 39","Expected indentation of 2 spaces but found 3. File: js-aofs-Sravani175/categorise.js Line: 40","Newline required at end of file but not found. File: js-aofs-Sravani175/categorise.js Line: 42"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 32\n\n- Array []\n+ Array [\n+   \"Expected a function expression. File: js-aofs-Sravani175/categorise.js Line: 26\",\n+   \"Function 'groupNumbers' has too many lines (16). Maximum allowed is 15. File: js-aofs-Sravani175/categorise.js Line: 26\",\n+   \"Missing space before opening brace. File: js-aofs-Sravani175/categorise.js Line: 26\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/categorise.js Line: 28\",\n+   \"'num' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/categorise.js Line: 28\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sravani175/categorise.js Line: 29\",\n+   \"Unexpected whitespace before property num. File: js-aofs-Sravani175/categorise.js Line: 29\",\n+   \"There should be no space before this paren. File: js-aofs-Sravani175/categorise.js Line: 29\",\n+   \"Expected indentation of 6 spaces but found 2. File: js-aofs-Sravani175/categorise.js Line: 30\",\n+   \"Unexpected whitespace before property num. File: js-aofs-Sravani175/categorise.js Line: 30\",\n+   \"Expected indentation of 4 spaces but found 0. File: js-aofs-Sravani175/categorise.js Line: 31\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Sravani175/categorise.js Line: 32\",\n+   \"Unexpected whitespace before property num. File: js-aofs-Sravani175/categorise.js Line: 32\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/categorise.js Line: 33\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-Sravani175/categorise.js Line: 34\",\n+   \"'arrays' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/categorise.js Line: 34\",\n+   \"'keys' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/categorise.js Line: 35\",\n+   \"Operator '=' must be spaced. File: js-aofs-Sravani175/categorise.js Line: 35\",\n+   \"A space is required after ','. File: js-aofs-Sravani175/categorise.js Line: 35\",\n+   \"Missing space before =>. File: js-aofs-Sravani175/categorise.js Line: 35\",\n+   \"Missing space after =>. File: js-aofs-Sravani175/categorise.js Line: 35\",\n+   \"Operator '-' must be spaced. File: js-aofs-Sravani175/categorise.js Line: 35\",\n+   \"Expected indentation of 2 spaces but found 3. File: js-aofs-Sravani175/categorise.js Line: 36\",\n+   \"Expected space(s) after \\\"for\\\". File: js-aofs-Sravani175/categorise.js Line: 36\",\n+   \"'k' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/categorise.js Line: 36\",\n+   \"Opening curly brace does not appear on the same line as controlling statement. File: js-aofs-Sravani175/categorise.js Line: 37\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-Sravani175/categorise.js Line: 37\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-Sravani175/categorise.js Line: 39\",\n+   \"Expected indentation of 2 spaces but found 3. File: js-aofs-Sravani175/categorise.js Line: 40\",\n+   \"Newline required at end of file but not found. File: js-aofs-Sravani175/categorise.js Line: 42\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 32\n\n- Array []\n+ Array [\n+   \"Expected a function expression. File: js-aofs-Sravani175/categorise.js Line: 26\",\n+   \"Function 'groupNumbers' has too many lines (16). Maximum allowed is 15. File: js-aofs-Sravani175/categorise.js Line: 26\",\n+   \"Missing space before opening brace. File: js-aofs-Sravani175/categorise.js Line: 26\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/categorise.js Line: 28\",\n+   \"'num' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/categorise.js Line: 28\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sravani175/categorise.js Line: 29\",\n+   \"Unexpected whitespace before property num. File: js-aofs-Sravani175/categorise.js Line: 29\",\n+   \"There should be no space before this paren. File: js-aofs-Sravani175/categorise.js Line: 29\",\n+   \"Expected indentation of 6 spaces but found 2. File: js-aofs-Sravani175/categorise.js Line: 30\",\n+   \"Unexpected whitespace before property num. File: js-aofs-Sravani175/categorise.js Line: 30\",\n+   \"Expected indentation of 4 spaces but found 0. File: js-aofs-Sravani175/categorise.js Line: 31\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Sravani175/categorise.js Line: 32\",\n+   \"Unexpected whitespace before property num. File: js-aofs-Sravani175/categorise.js Line: 32\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/categorise.js Line: 33\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-Sravani175/categorise.js Line: 34\",\n+   \"'arrays' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/categorise.js Line: 34\",\n+   \"'keys' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/categorise.js Line: 35\",\n+   \"Operator '=' must be spaced. File: js-aofs-Sravani175/categorise.js Line: 35\",\n+   \"A space is required after ','. File: js-aofs-Sravani175/categorise.js Line: 35\",\n+   \"Missing space before =>. File: js-aofs-Sravani175/categorise.js Line: 35\",\n+   \"Missing space after =>. File: js-aofs-Sravani175/categorise.js Line: 35\",\n+   \"Operator '-' must be spaced. File: js-aofs-Sravani175/categorise.js Line: 35\",\n+   \"Expected indentation of 2 spaces but found 3. File: js-aofs-Sravani175/categorise.js Line: 36\",\n+   \"Expected space(s) after \\\"for\\\". File: js-aofs-Sravani175/categorise.js Line: 36\",\n+   \"'k' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/categorise.js Line: 36\",\n+   \"Opening curly brace does not appear on the same line as controlling statement. File: js-aofs-Sravani175/categorise.js Line: 37\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-Sravani175/categorise.js Line: 37\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-Sravani175/categorise.js Line: 39\",\n+   \"Expected indentation of 2 spaces but found 3. File: js-aofs-Sravani175/categorise.js Line: 40\",\n+   \"Newline required at end of file but not found. File: js-aofs-Sravani175/categorise.js Line: 42\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Sravani175 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":19,"failureDetails":[{"matcherResult":{"actual":["A space is required after '{'. File: js-aofs-Sravani175/entries.js Line: 3","A space is required before '}'. File: js-aofs-Sravani175/entries.js Line: 3","Trailing spaces not allowed. File: js-aofs-Sravani175/entries.js Line: 6","Expected indentation of 0 spaces but found 1. File: js-aofs-Sravani175/entries.js Line: 22","Missing space before function parentheses. File: js-aofs-Sravani175/entries.js Line: 22","'OBJECT' is already declared in the upper scope on line 3 column 7. File: js-aofs-Sravani175/entries.js Line: 22","Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/entries.js Line: 23","There should be no space after this paren. File: js-aofs-Sravani175/entries.js Line: 24","'mine' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/entries.js Line: 24","Expected indentation of 4 spaces but found 6. File: js-aofs-Sravani175/entries.js Line: 25","'index' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/entries.js Line: 25","Expected indentation of 4 spaces but found 8. File: js-aofs-Sravani175/entries.js Line: 26","Expected indentation of 4 spaces but found 5. File: js-aofs-Sravani175/entries.js Line: 27","Expected indentation of 4 spaces but found 3. File: js-aofs-Sravani175/entries.js Line: 28","Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/entries.js Line: 30","Missing semicolon. File: js-aofs-Sravani175/entries.js Line: 31","Expected indentation of 0 spaces but found 4. File: js-aofs-Sravani175/entries.js Line: 32","Expected indentation of 0 spaces but found 2. File: js-aofs-Sravani175/entries.js Line: 33"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 20\n\n- Array []\n+ Array [\n+   \"A space is required after '{'. File: js-aofs-Sravani175/entries.js Line: 3\",\n+   \"A space is required before '}'. File: js-aofs-Sravani175/entries.js Line: 3\",\n+   \"Trailing spaces not allowed. File: js-aofs-Sravani175/entries.js Line: 6\",\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Sravani175/entries.js Line: 22\",\n+   \"Missing space before function parentheses. File: js-aofs-Sravani175/entries.js Line: 22\",\n+   \"'OBJECT' is already declared in the upper scope on line 3 column 7. File: js-aofs-Sravani175/entries.js Line: 22\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/entries.js Line: 23\",\n+   \"There should be no space after this paren. File: js-aofs-Sravani175/entries.js Line: 24\",\n+   \"'mine' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/entries.js Line: 24\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sravani175/entries.js Line: 25\",\n+   \"'index' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/entries.js Line: 25\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Sravani175/entries.js Line: 26\",\n+   \"Expected indentation of 4 spaces but found 5. File: js-aofs-Sravani175/entries.js Line: 27\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Sravani175/entries.js Line: 28\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/entries.js Line: 30\",\n+   \"Missing semicolon. File: js-aofs-Sravani175/entries.js Line: 31\",\n+   \"Expected indentation of 0 spaces but found 4. File: js-aofs-Sravani175/entries.js Line: 32\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-Sravani175/entries.js Line: 33\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 20\n\n- Array []\n+ Array [\n+   \"A space is required after '{'. File: js-aofs-Sravani175/entries.js Line: 3\",\n+   \"A space is required before '}'. File: js-aofs-Sravani175/entries.js Line: 3\",\n+   \"Trailing spaces not allowed. File: js-aofs-Sravani175/entries.js Line: 6\",\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Sravani175/entries.js Line: 22\",\n+   \"Missing space before function parentheses. File: js-aofs-Sravani175/entries.js Line: 22\",\n+   \"'OBJECT' is already declared in the upper scope on line 3 column 7. File: js-aofs-Sravani175/entries.js Line: 22\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/entries.js Line: 23\",\n+   \"There should be no space after this paren. File: js-aofs-Sravani175/entries.js Line: 24\",\n+   \"'mine' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/entries.js Line: 24\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sravani175/entries.js Line: 25\",\n+   \"'index' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/entries.js Line: 25\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Sravani175/entries.js Line: 26\",\n+   \"Expected indentation of 4 spaces but found 5. File: js-aofs-Sravani175/entries.js Line: 27\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Sravani175/entries.js Line: 28\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/entries.js Line: 30\",\n+   \"Missing semicolon. File: js-aofs-Sravani175/entries.js Line: 31\",\n+   \"Expected indentation of 0 spaces but found 4. File: js-aofs-Sravani175/entries.js Line: 32\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-Sravani175/entries.js Line: 33\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Sravani175 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["One extra space!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"One extra space!!!\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"One extra space!!!\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["Multiple extra spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"Multiple extra spaces!!!\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"Multiple extra spaces!!!\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[""],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[""],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":0,"failureDetails":[{"matcherResult":{"actual":[],"expected":["SingleWord"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"SingleWord\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"SingleWord\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["a"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"a\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"a\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["ItsALongSentenceWithoutAnySpaces"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"ItsALongSentenceWithoutAnySpaces\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"ItsALongSentenceWithoutAnySpaces\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["Leading spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"Leading spaces!!!\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"Leading spaces!!!\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["Leading spaces!!! & Trailing Spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"Leading spaces!!! & Trailing Spaces!!!\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"Leading spaces!!! & Trailing Spaces!!!\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["Trailing Spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"Trailing Spaces!!!\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"Trailing Spaces!!!\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["String \t with \t spaces \t and \t tabs!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"String \t with \t spaces \t and \t tabs!!!\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"String \t with \t spaces \t and \t tabs!!!\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["String \n with \n spaces \n and \n newlines!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 7\n+ Received  + 1\n\n- Array [\n-   \"String \n-  with \n-  spaces \n-  and \n-  newlines!!!\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 7\n+ Received  + 1\n\n- Array [\n-   \"String \n-  with \n-  spaces \n-  and \n-  newlines!!!\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["123 456 789"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"123 456 789\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"123 456 789\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["こんにちは 世界"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"こんにちは 世界\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"こんにちは 世界\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":9,"failureDetails":[{"matcherResult":{"actual":["Strings must use singlequote. File: js-aofs-Sravani175/remove_adjacent_spaces.js Line: 3","Trailing spaces not allowed. File: js-aofs-Sravani175/remove_adjacent_spaces.js Line: 7"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 4\n\n- Array []\n+ Array [\n+   \"Strings must use singlequote. File: js-aofs-Sravani175/remove_adjacent_spaces.js Line: 3\",\n+   \"Trailing spaces not allowed. File: js-aofs-Sravani175/remove_adjacent_spaces.js Line: 7\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 4\n\n- Array []\n+ Array [\n+   \"Strings must use singlequote. File: js-aofs-Sravani175/remove_adjacent_spaces.js Line: 3\",\n+   \"Trailing spaces not allowed. File: js-aofs-Sravani175/remove_adjacent_spaces.js Line: 7\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[0,0,1,1,2,4,7]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 11\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-   ],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 11\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-   ],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[0,0,1,1,2,4,7,13,24]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 13\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-     13,\n-     24,\n-   ],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 13\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-     13,\n-     24,\n-   ],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[0,0,1,1,2,4,7,13,24,44,81]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 15\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-     13,\n-     24,\n-     44,\n-     81,\n-   ],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 15\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-     13,\n-     24,\n-     44,\n-     81,\n-   ],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[0,0,1,1,2,4,7,13,24,44,81,149,274]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 17\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-     13,\n-     24,\n-     44,\n-     81,\n-     149,\n-     274,\n-   ],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 17\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-     13,\n-     24,\n-     44,\n-     81,\n-     149,\n-     274,\n-   ],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[0,0,1,1,2]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 9\n+ Received  + 1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-   ],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 9\n+ Received  + 1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-   ],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[0,0,1,1]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 8\n+ Received  + 1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-   ],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 8\n+ Received  + 1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-   ],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[0,0]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 6\n+ Received  + 1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-   ],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 6\n+ Received  + 1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-   ],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   Array [],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   Array [],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   Array [],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   Array [],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   Array [],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   Array [],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[0,0,1,1,2,4,7,13,24,44,81,149,274,504,927,1705,3136,5768]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 22\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-     13,\n-     24,\n-     44,\n-     81,\n-     149,\n-     274,\n-     504,\n-     927,\n-     1705,\n-     3136,\n-     5768,\n-   ],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 22\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-     13,\n-     24,\n-     44,\n-     81,\n-     149,\n-     274,\n-     504,\n-     927,\n-     1705,\n-     3136,\n-     5768,\n-   ],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":8,"failureDetails":[{"matcherResult":{"actual":["Trailing spaces not allowed. File: js-aofs-Sravani175/tribonacci.js Line: 7","Trailing spaces not allowed. File: js-aofs-Sravani175/tribonacci.js Line: 23","Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-Sravani175/tribonacci.js Line: 23","Newline required at end of file but not found. File: js-aofs-Sravani175/tribonacci.js Line: 23"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 6\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-Sravani175/tribonacci.js Line: 7\",\n+   \"Trailing spaces not allowed. File: js-aofs-Sravani175/tribonacci.js Line: 23\",\n+   \"Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-Sravani175/tribonacci.js Line: 23\",\n+   \"Newline required at end of file but not found. File: js-aofs-Sravani175/tribonacci.js Line: 23\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 6\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-Sravani175/tribonacci.js Line: 7\",\n+   \"Trailing spaces not allowed. File: js-aofs-Sravani175/tribonacci.js Line: 23\",\n+   \"Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-Sravani175/tribonacci.js Line: 23\",\n+   \"Newline required at end of file but not found. File: js-aofs-Sravani175/tribonacci.js Line: 23\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Sravani175 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":0,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":0,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":0,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":0,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":0,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:32\n     if ( firstarray.length !== secondarray.length ) {\n                     ^\n\nTypeError: Cannot read properties of undefined (reading 'length')\n    at arrayequal (evalmachine.<anonymous>:32:22)\n    at evalmachine.<anonymous>:54:14\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Sreenayak array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":31,"failureDetails":[{"matcherResult":{"actual":["Expected space or tab before '*/' in comment. File: js-aofs-Sreenayak/array_equals.js Line: 6","Arrow function has too many lines (24). Maximum allowed is 15. File: js-aofs-Sreenayak/array_equals.js Line: 30","Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 31","Expected indentation of 4 spaces but found 5. File: js-aofs-Sreenayak/array_equals.js Line: 32","There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 32","There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 32","Expected indentation of 6 spaces but found 11. File: js-aofs-Sreenayak/array_equals.js Line: 33","Expected indentation of 4 spaces but found 6. File: js-aofs-Sreenayak/array_equals.js Line: 34","Expected indentation of 4 spaces but found 6. File: js-aofs-Sreenayak/array_equals.js Line: 35","There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 35","There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 35","Expected indentation of 6 spaces but found 9. File: js-aofs-Sreenayak/array_equals.js Line: 36","There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 36","There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 36","There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 36","There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 36","There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 36","Expected indentation of 8 spaces but found 10. File: js-aofs-Sreenayak/array_equals.js Line: 37","There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 37","There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 37","There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 37","There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 37","There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 37","There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 37","There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 37","There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 37","Expected indentation of 10 spaces but found 11. File: js-aofs-Sreenayak/array_equals.js Line: 38","Expected indentation of 8 spaces but found 9. File: js-aofs-Sreenayak/array_equals.js Line: 39","Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Sreenayak/array_equals.js Line: 40","Trailing spaces not allowed. File: js-aofs-Sreenayak/array_equals.js Line: 40","Expected indentation of 6 spaces but found 5. File: js-aofs-Sreenayak/array_equals.js Line: 41","There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 41","There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 41","There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 41","There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 41","There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 41","There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 41","Expected indentation of 6 spaces but found 5. File: js-aofs-Sreenayak/array_equals.js Line: 43","Expected indentation of 4 spaces but found 3. File: js-aofs-Sreenayak/array_equals.js Line: 44","Expected indentation of 4 spaces but found 3. File: js-aofs-Sreenayak/array_equals.js Line: 45","Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 46","Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Sreenayak/array_equals.js Line: 46","Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 47","Expected space(s) after \"if\". File: js-aofs-Sreenayak/array_equals.js Line: 47","Expected indentation of 4 spaces but found 2. File: js-aofs-Sreenayak/array_equals.js Line: 48","Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 49","Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Sreenayak/array_equals.js Line: 49","Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 50","Unnecessary 'else' after 'return'. File: js-aofs-Sreenayak/array_equals.js Line: 50","Expected indentation of 4 spaces but found 2. File: js-aofs-Sreenayak/array_equals.js Line: 51","Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 52","There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 54","There should be no space before ','. File: js-aofs-Sreenayak/array_equals.js Line: 54","There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 54","Newline required at end of file but not found. File: js-aofs-Sreenayak/array_equals.js Line: 54"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 57\n\n- Array []\n+ Array [\n+   \"Expected space or tab before '*/' in comment. File: js-aofs-Sreenayak/array_equals.js Line: 6\",\n+   \"Arrow function has too many lines (24). Maximum allowed is 15. File: js-aofs-Sreenayak/array_equals.js Line: 30\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 31\",\n+   \"Expected indentation of 4 spaces but found 5. File: js-aofs-Sreenayak/array_equals.js Line: 32\",\n+   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 32\",\n+   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 32\",\n+   \"Expected indentation of 6 spaces but found 11. File: js-aofs-Sreenayak/array_equals.js Line: 33\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sreenayak/array_equals.js Line: 34\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sreenayak/array_equals.js Line: 35\",\n+   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 35\",\n+   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 35\",\n+   \"Expected indentation of 6 spaces but found 9. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n+   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n+   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n+   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n+   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n+   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n+   \"Expected indentation of 8 spaces but found 10. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"Expected indentation of 10 spaces but found 11. File: js-aofs-Sreenayak/array_equals.js Line: 38\",\n+   \"Expected indentation of 8 spaces but found 9. File: js-aofs-Sreenayak/array_equals.js Line: 39\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Sreenayak/array_equals.js Line: 40\",\n+   \"Trailing spaces not allowed. File: js-aofs-Sreenayak/array_equals.js Line: 40\",\n+   \"Expected indentation of 6 spaces but found 5. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n+   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n+   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n+   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n+   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n+   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n+   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n+   \"Expected indentation of 6 spaces but found 5. File: js-aofs-Sreenayak/array_equals.js Line: 43\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Sreenayak/array_equals.js Line: 44\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Sreenayak/array_equals.js Line: 45\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 46\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Sreenayak/array_equals.js Line: 46\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 47\",\n+   \"Expected space(s) after \\\"if\\\". File: js-aofs-Sreenayak/array_equals.js Line: 47\",\n+   \"Expected indentation of 4 spaces but found 2. File: js-aofs-Sreenayak/array_equals.js Line: 48\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 49\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Sreenayak/array_equals.js Line: 49\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 50\",\n+   \"Unnecessary 'else' after 'return'. File: js-aofs-Sreenayak/array_equals.js Line: 50\",\n+   \"Expected indentation of 4 spaces but found 2. File: js-aofs-Sreenayak/array_equals.js Line: 51\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 52\",\n+   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 54\",\n+   \"There should be no space before ','. File: js-aofs-Sreenayak/array_equals.js Line: 54\",\n+   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 54\",\n+   \"Newline required at end of file but not found. File: js-aofs-Sreenayak/array_equals.js Line: 54\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 57\n\n- Array []\n+ Array [\n+   \"Expected space or tab before '*/' in comment. File: js-aofs-Sreenayak/array_equals.js Line: 6\",\n+   \"Arrow function has too many lines (24). Maximum allowed is 15. File: js-aofs-Sreenayak/array_equals.js Line: 30\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 31\",\n+   \"Expected indentation of 4 spaces but found 5. File: js-aofs-Sreenayak/array_equals.js Line: 32\",\n+   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 32\",\n+   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 32\",\n+   \"Expected indentation of 6 spaces but found 11. File: js-aofs-Sreenayak/array_equals.js Line: 33\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sreenayak/array_equals.js Line: 34\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sreenayak/array_equals.js Line: 35\",\n+   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 35\",\n+   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 35\",\n+   \"Expected indentation of 6 spaces but found 9. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n+   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n+   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n+   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n+   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n+   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n+   \"Expected indentation of 8 spaces but found 10. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n+   \"Expected indentation of 10 spaces but found 11. File: js-aofs-Sreenayak/array_equals.js Line: 38\",\n+   \"Expected indentation of 8 spaces but found 9. File: js-aofs-Sreenayak/array_equals.js Line: 39\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Sreenayak/array_equals.js Line: 40\",\n+   \"Trailing spaces not allowed. File: js-aofs-Sreenayak/array_equals.js Line: 40\",\n+   \"Expected indentation of 6 spaces but found 5. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n+   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n+   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n+   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n+   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n+   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n+   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n+   \"Expected indentation of 6 spaces but found 5. File: js-aofs-Sreenayak/array_equals.js Line: 43\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Sreenayak/array_equals.js Line: 44\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Sreenayak/array_equals.js Line: 45\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 46\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Sreenayak/array_equals.js Line: 46\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 47\",\n+   \"Expected space(s) after \\\"if\\\". File: js-aofs-Sreenayak/array_equals.js Line: 47\",\n+   \"Expected indentation of 4 spaces but found 2. File: js-aofs-Sreenayak/array_equals.js Line: 48\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 49\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Sreenayak/array_equals.js Line: 49\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 50\",\n+   \"Unnecessary 'else' after 'return'. File: js-aofs-Sreenayak/array_equals.js Line: 50\",\n+   \"Expected indentation of 4 spaces but found 2. File: js-aofs-Sreenayak/array_equals.js Line: 51\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 52\",\n+   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 54\",\n+   \"There should be no space before ','. File: js-aofs-Sreenayak/array_equals.js Line: 54\",\n+   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 54\",\n+   \"Newline required at end of file but not found. File: js-aofs-Sreenayak/array_equals.js Line: 54\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Sreenayak array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":0,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":24,"failureDetails":[{"matcherResult":{"actual":["This line has a length of 95. Maximum allowed is 80. File: js-aofs-Sreenayak/object_equals.js Line: 36"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"This line has a length of 95. Maximum allowed is 80. File: js-aofs-Sreenayak/object_equals.js Line: 36\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"This line has a length of 95. Maximum allowed is 80. File: js-aofs-Sreenayak/object_equals.js Line: 36\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Sreenayak object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":20,"failureDetails":[{"matcherResult":{"actual":["Arrow function has too many lines (19). Maximum allowed is 15. File: js-aofs-Triveni12062006/categorise.js Line: 26"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Arrow function has too many lines (19). Maximum allowed is 15. File: js-aofs-Triveni12062006/categorise.js Line: 26\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Arrow function has too many lines (19). Maximum allowed is 15. File: js-aofs-Triveni12062006/categorise.js Line: 26\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Triveni12062006 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":32,"failureDetails":[{"matcherResult":{"actual":["Trailing spaces not allowed. File: js-aofs-Triveni12062006/entries.js Line: 7"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-Triveni12062006/entries.js Line: 7\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-Triveni12062006/entries.js Line: 7\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Triveni12062006 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":35,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":11,"failureDetails":[{"matcherResult":{"actual":["Trailing spaces not allowed. File: js-aofs-Triveni12062006/remove_adjacent_spaces.js Line: 7","Arrow function has too many lines (23). Maximum allowed is 15. File: js-aofs-Triveni12062006/remove_adjacent_spaces.js Line: 31","Expected indentation of 2 spaces but found 1. File: js-aofs-Triveni12062006/remove_adjacent_spaces.js Line: 52"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-Triveni12062006/remove_adjacent_spaces.js Line: 7\",\n+   \"Arrow function has too many lines (23). Maximum allowed is 15. File: js-aofs-Triveni12062006/remove_adjacent_spaces.js Line: 31\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Triveni12062006/remove_adjacent_spaces.js Line: 52\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-Triveni12062006/remove_adjacent_spaces.js Line: 7\",\n+   \"Arrow function has too many lines (23). Maximum allowed is 15. File: js-aofs-Triveni12062006/remove_adjacent_spaces.js Line: 31\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Triveni12062006/remove_adjacent_spaces.js Line: 52\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":9,"failureDetails":[{"matcherResult":{"actual":["Trailing spaces not allowed. File: js-aofs-Triveni12062006/tribonacci.js Line: 7","Trailing spaces not allowed. File: js-aofs-Triveni12062006/tribonacci.js Line: 29"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 4\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-Triveni12062006/tribonacci.js Line: 7\",\n+   \"Trailing spaces not allowed. File: js-aofs-Triveni12062006/tribonacci.js Line: 29\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 4\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-Triveni12062006/tribonacci.js Line: 7\",\n+   \"Trailing spaces not allowed. File: js-aofs-Triveni12062006/tribonacci.js Line: 29\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Triveni12062006 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:35\n  if (a.length !== b.length) {\n        ^\n\nTypeError: Cannot read properties of undefined (reading 'length')\n    at arrEqual (evalmachine.<anonymous>:35:9)\n    at evalmachine.<anonymous>:51:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:35\n  if (a.length !== b.length) {\n        ^\n\nTypeError: Cannot read properties of undefined (reading 'length')\n    at arrEqual (evalmachine.<anonymous>:35:9)\n    at evalmachine.<anonymous>:51:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":13,"failureDetails":[{"matcherResult":{"actual":["Arrow function has too many lines (17). Maximum allowed is 15. File: js-aofs-Triveni12062006/array_equals.js Line: 31","Expected indentation of 4 spaces but found 5. File: js-aofs-Triveni12062006/array_equals.js Line: 33","Expected indentation of 4 spaces but found 5. File: js-aofs-Triveni12062006/array_equals.js Line: 36","'array' was used before it was defined. File: js-aofs-Triveni12062006/array_equals.js Line: 41","'array' was used before it was defined. File: js-aofs-Triveni12062006/array_equals.js Line: 41","Expected indentation of 2 spaces but found 5. File: js-aofs-Triveni12062006/array_equals.js Line: 46"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 8\n\n- Array []\n+ Array [\n+   \"Arrow function has too many lines (17). Maximum allowed is 15. File: js-aofs-Triveni12062006/array_equals.js Line: 31\",\n+   \"Expected indentation of 4 spaces but found 5. File: js-aofs-Triveni12062006/array_equals.js Line: 33\",\n+   \"Expected indentation of 4 spaces but found 5. File: js-aofs-Triveni12062006/array_equals.js Line: 36\",\n+   \"'array' was used before it was defined. File: js-aofs-Triveni12062006/array_equals.js Line: 41\",\n+   \"'array' was used before it was defined. File: js-aofs-Triveni12062006/array_equals.js Line: 41\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Triveni12062006/array_equals.js Line: 46\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 8\n\n- Array []\n+ Array [\n+   \"Arrow function has too many lines (17). Maximum allowed is 15. File: js-aofs-Triveni12062006/array_equals.js Line: 31\",\n+   \"Expected indentation of 4 spaces but found 5. File: js-aofs-Triveni12062006/array_equals.js Line: 33\",\n+   \"Expected indentation of 4 spaces but found 5. File: js-aofs-Triveni12062006/array_equals.js Line: 36\",\n+   \"'array' was used before it was defined. File: js-aofs-Triveni12062006/array_equals.js Line: 41\",\n+   \"'array' was used before it was defined. File: js-aofs-Triveni12062006/array_equals.js Line: 41\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Triveni12062006/array_equals.js Line: 46\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Triveni12062006 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:38\n  const key1 = Object.keys(obj1);\n                      ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at objEqual (evalmachine.<anonymous>:38:23)\n    at evalmachine.<anonymous>:53:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:39\n  const key2 = Object.keys(obj2);\n                      ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at objEqual (evalmachine.<anonymous>:39:23)\n    at evalmachine.<anonymous>:53:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:38\n  const key1 = Object.keys(obj1);\n                      ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at objEqual (evalmachine.<anonymous>:38:23)\n    at evalmachine.<anonymous>:53:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":11,"failureDetails":[{"matcherResult":{"actual":["Arrow function has too many lines (19). Maximum allowed is 15. File: js-aofs-Triveni12062006/object_equals.js Line: 34","Expected indentation of 6 spaces but found 7. File: js-aofs-Triveni12062006/object_equals.js Line: 48","Trailing spaces not allowed. File: js-aofs-Triveni12062006/object_equals.js Line: 53"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"Arrow function has too many lines (19). Maximum allowed is 15. File: js-aofs-Triveni12062006/object_equals.js Line: 34\",\n+   \"Expected indentation of 6 spaces but found 7. File: js-aofs-Triveni12062006/object_equals.js Line: 48\",\n+   \"Trailing spaces not allowed. File: js-aofs-Triveni12062006/object_equals.js Line: 53\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"Arrow function has too many lines (19). Maximum allowed is 15. File: js-aofs-Triveni12062006/object_equals.js Line: 34\",\n+   \"Expected indentation of 6 spaces but found 7. File: js-aofs-Triveni12062006/object_equals.js Line: 48\",\n+   \"Trailing spaces not allowed. File: js-aofs-Triveni12062006/object_equals.js Line: 53\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS Triveni12062006 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[""],"expected":["One extra space!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"One extra space!!!\",\n+   \"\",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"One extra space!!!\",\n+   \"\",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[""],"expected":["Multiple extra spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Multiple extra spaces!!!\",\n+   \"\",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Multiple extra spaces!!!\",\n+   \"\",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[""],"expected":["SingleWord"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"SingleWord\",\n+   \"\",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"SingleWord\",\n+   \"\",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[""],"expected":["a"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"a\",\n+   \"\",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"a\",\n+   \"\",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[""],"expected":["ItsALongSentenceWithoutAnySpaces"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"ItsALongSentenceWithoutAnySpaces\",\n+   \"\",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"ItsALongSentenceWithoutAnySpaces\",\n+   \"\",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[" Leading spaces!!!"],"expected":["Leading spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Leading spaces!!!\",\n+   \" Leading spaces!!!\",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Leading spaces!!!\",\n+   \" Leading spaces!!!\",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[" Leading spaces!!! & Trailing Spaces!!!"],"expected":["Leading spaces!!! & Trailing Spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Leading spaces!!! & Trailing Spaces!!!\",\n+   \" Leading spaces!!! & Trailing Spaces!!!\",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Leading spaces!!! & Trailing Spaces!!!\",\n+   \" Leading spaces!!! & Trailing Spaces!!!\",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[""],"expected":["Trailing Spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Trailing Spaces!!!\",\n+   \"\",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Trailing Spaces!!!\",\n+   \"\",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[""],"expected":["String \t with \t spaces \t and \t tabs!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"String \t with \t spaces \t and \t tabs!!!\",\n+   \"\",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"String \t with \t spaces \t and \t tabs!!!\",\n+   \"\",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[""],"expected":["String \n with \n spaces \n and \n newlines!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 5\n+ Received  + 1\n\n  Array [\n-   \"String \n-  with \n-  spaces \n-  and \n-  newlines!!!\",\n+   \"\",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 5\n+ Received  + 1\n\n  Array [\n-   \"String \n-  with \n-  spaces \n-  and \n-  newlines!!!\",\n+   \"\",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[""],"expected":["123 456 789"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"123 456 789\",\n+   \"\",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"123 456 789\",\n+   \"\",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[" こんにちは 世界"],"expected":["こんにちは 世界"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"こんにちは 世界\",\n+   \" こんにちは 世界\",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"こんにちは 世界\",\n+   \" こんにちは 世界\",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":14,"failureDetails":[{"matcherResult":{"actual":["Expected { after 'for' condition. File: js-aofs-VETR1-V1GNESH/remove_adjacent_spaces.js Line: 35"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected { after 'for' condition. File: js-aofs-VETR1-V1GNESH/remove_adjacent_spaces.js Line: 35\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Expected { after 'for' condition. File: js-aofs-VETR1-V1GNESH/remove_adjacent_spaces.js Line: 35\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:47\n  } else if (arr1.length !== arr2.length) {\n                  ^\n\nTypeError: Cannot read properties of undefined (reading 'length')\n    at findEqual (evalmachine.<anonymous>:47:19)\n    at evalmachine.<anonymous>:54:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":12,"failureDetails":[{"matcherResult":{"actual":["Multiple spaces found before 'null'. File: js-aofs-VETR1-V1GNESH/array_equals.js Line: 45"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Multiple spaces found before 'null'. File: js-aofs-VETR1-V1GNESH/array_equals.js Line: 45\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Multiple spaces found before 'null'. File: js-aofs-VETR1-V1GNESH/array_equals.js Line: 45\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:35\n  } else if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n                    ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at findEqual (evalmachine.<anonymous>:35:21)\n    at evalmachine.<anonymous>:50:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:35\n  } else if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n                                                 ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at findEqual (evalmachine.<anonymous>:35:50)\n    at evalmachine.<anonymous>:50:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:35\n  } else if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n                    ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at findEqual (evalmachine.<anonymous>:35:21)\n    at evalmachine.<anonymous>:50:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":0,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":11,"failureDetails":[{"matcherResult":{"actual":["Function has too many lines (17). Maximum allowed is 15. File: js-aofs-VETR1-V1GNESH/object_equals.js Line: 32"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Function has too many lines (17). Maximum allowed is 15. File: js-aofs-VETR1-V1GNESH/object_equals.js Line: 32\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Function has too many lines (17). Maximum allowed is 15. File: js-aofs-VETR1-V1GNESH/object_equals.js Line: 32\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":15,"failureDetails":[{"matcherResult":{"actual":["Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/array_equals.js Line: 44","Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/array_equals.js Line: 45","Expected indentation of 8 spaces but found 10. File: js-aofs-balasatish1/array_equals.js Line: 46","Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/array_equals.js Line: 47","Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/array_equals.js Line: 48","Expected indentation of 6 spaces but found 10. File: js-aofs-balasatish1/array_equals.js Line: 49","Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/array_equals.js Line: 50"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 9\n\n- Array []\n+ Array [\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/array_equals.js Line: 44\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/array_equals.js Line: 45\",\n+   \"Expected indentation of 8 spaces but found 10. File: js-aofs-balasatish1/array_equals.js Line: 46\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/array_equals.js Line: 47\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/array_equals.js Line: 48\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-balasatish1/array_equals.js Line: 49\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/array_equals.js Line: 50\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 9\n\n- Array []\n+ Array [\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/array_equals.js Line: 44\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/array_equals.js Line: 45\",\n+   \"Expected indentation of 8 spaces but found 10. File: js-aofs-balasatish1/array_equals.js Line: 46\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/array_equals.js Line: 47\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/array_equals.js Line: 48\",\n+   \"Expected indentation of 6 spaces but found 10. File: js-aofs-balasatish1/array_equals.js Line: 49\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/array_equals.js Line: 50\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS balasatish1 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":15,"failureDetails":[{"matcherResult":{"actual":["A space is required after '{'. File: js-aofs-balasatish1/object_equals.js Line: 2","A space is required before '}'. File: js-aofs-balasatish1/object_equals.js Line: 2","A space is required after '{'. File: js-aofs-balasatish1/object_equals.js Line: 3","A space is required before '}'. File: js-aofs-balasatish1/object_equals.js Line: 3","This line has a length of 105. Maximum allowed is 80. File: js-aofs-balasatish1/object_equals.js Line: 33","Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/object_equals.js Line: 45","Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/object_equals.js Line: 46","Expected indentation of 8 spaces but found 10. File: js-aofs-balasatish1/object_equals.js Line: 47","Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/object_equals.js Line: 48","Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/object_equals.js Line: 49","Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/object_equals.js Line: 50","Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/object_equals.js Line: 51"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 14\n\n- Array []\n+ Array [\n+   \"A space is required after '{'. File: js-aofs-balasatish1/object_equals.js Line: 2\",\n+   \"A space is required before '}'. File: js-aofs-balasatish1/object_equals.js Line: 2\",\n+   \"A space is required after '{'. File: js-aofs-balasatish1/object_equals.js Line: 3\",\n+   \"A space is required before '}'. File: js-aofs-balasatish1/object_equals.js Line: 3\",\n+   \"This line has a length of 105. Maximum allowed is 80. File: js-aofs-balasatish1/object_equals.js Line: 33\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/object_equals.js Line: 45\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/object_equals.js Line: 46\",\n+   \"Expected indentation of 8 spaces but found 10. File: js-aofs-balasatish1/object_equals.js Line: 47\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/object_equals.js Line: 48\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/object_equals.js Line: 49\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/object_equals.js Line: 50\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/object_equals.js Line: 51\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 14\n\n- Array []\n+ Array [\n+   \"A space is required after '{'. File: js-aofs-balasatish1/object_equals.js Line: 2\",\n+   \"A space is required before '}'. File: js-aofs-balasatish1/object_equals.js Line: 2\",\n+   \"A space is required after '{'. File: js-aofs-balasatish1/object_equals.js Line: 3\",\n+   \"A space is required before '}'. File: js-aofs-balasatish1/object_equals.js Line: 3\",\n+   \"This line has a length of 105. Maximum allowed is 80. File: js-aofs-balasatish1/object_equals.js Line: 33\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/object_equals.js Line: 45\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/object_equals.js Line: 46\",\n+   \"Expected indentation of 8 spaces but found 10. File: js-aofs-balasatish1/object_equals.js Line: 47\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/object_equals.js Line: 48\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/object_equals.js Line: 49\",\n+   \"Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/object_equals.js Line: 50\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/object_equals.js Line: 51\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS balasatish1 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[false],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS kumarnandeesh array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[false],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS kumarnandeesh array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[false],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   true,\n+   false,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS kumarnandeesh array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":17,"failureDetails":[{"matcherResult":{"actual":["Trailing spaces not allowed. File: js-aofs-kumarnandeesh/array_equals.js Line: 34","Trailing spaces not allowed. File: js-aofs-kumarnandeesh/array_equals.js Line: 39","Expected indentation of 6 spaces File: js-aofs-kumarnandeesh/array_equals.js Line: 40"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-kumarnandeesh/array_equals.js Line: 34\",\n+   \"Trailing spaces not allowed. File: js-aofs-kumarnandeesh/array_equals.js Line: 39\",\n+   \"Expected indentation of 6 spaces File: js-aofs-kumarnandeesh/array_equals.js Line: 40\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-kumarnandeesh/array_equals.js Line: 34\",\n+   \"Trailing spaces not allowed. File: js-aofs-kumarnandeesh/array_equals.js Line: 39\",\n+   \"Expected indentation of 6 spaces File: js-aofs-kumarnandeesh/array_equals.js Line: 40\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS kumarnandeesh array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":19,"failureDetails":[{"matcherResult":{"actual":["'functionAreObjectsEqual' was used before it was defined. File: js-aofs-kumarnandeesh/object_equals.js Line: 36","Trailing spaces not allowed. File: js-aofs-kumarnandeesh/object_equals.js Line: 49","This line has a length of 83. Maximum allowed is 80. File: js-aofs-kumarnandeesh/object_equals.js Line: 50"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"'functionAreObjectsEqual' was used before it was defined. File: js-aofs-kumarnandeesh/object_equals.js Line: 36\",\n+   \"Trailing spaces not allowed. File: js-aofs-kumarnandeesh/object_equals.js Line: 49\",\n+   \"This line has a length of 83. Maximum allowed is 80. File: js-aofs-kumarnandeesh/object_equals.js Line: 50\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 5\n\n- Array []\n+ Array [\n+   \"'functionAreObjectsEqual' was used before it was defined. File: js-aofs-kumarnandeesh/object_equals.js Line: 36\",\n+   \"Trailing spaces not allowed. File: js-aofs-kumarnandeesh/object_equals.js Line: 49\",\n+   \"This line has a length of 83. Maximum allowed is 80. File: js-aofs-kumarnandeesh/object_equals.js Line: 50\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS kumarnandeesh object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":24,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":26,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":23,"failureDetails":[{"matcherResult":{"actual":["This line has a length of 92. Maximum allowed is 80. File: js-aofs-naveen-kumar-vadla/array_equals.js Line: 37"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"This line has a length of 92. Maximum allowed is 80. File: js-aofs-naveen-kumar-vadla/array_equals.js Line: 37\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"This line has a length of 92. Maximum allowed is 80. File: js-aofs-naveen-kumar-vadla/array_equals.js Line: 37\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:39\n  const object2Keys = Object.keys(object2);\n                             ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at areObjectsEqual (evalmachine.<anonymous>:39:30)\n    at evalmachine.<anonymous>:70:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":26,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":17,"failureDetails":[{"matcherResult":{"actual":["'evenOddSeperation' was used before it was defined. File: js-aofs-nithindenkada/even_odd.js Line: 20","Expected a function expression. File: js-aofs-nithindenkada/even_odd.js Line: 23","'numbers' is already declared in the upper scope on line 19 column 5. File: js-aofs-nithindenkada/even_odd.js Line: 23","'even' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/even_odd.js Line: 24","'odd' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/even_odd.js Line: 25","Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/even_odd.js Line: 28","Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/even_odd.js Line: 29","Trailing spaces not allowed. File: js-aofs-nithindenkada/even_odd.js Line: 30","A space is required after '{'. File: js-aofs-nithindenkada/even_odd.js Line: 35","A space is required before '}'. File: js-aofs-nithindenkada/even_odd.js Line: 35","Newline required at end of file but not found. File: js-aofs-nithindenkada/even_odd.js Line: 36"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 13\n\n- Array []\n+ Array [\n+   \"'evenOddSeperation' was used before it was defined. File: js-aofs-nithindenkada/even_odd.js Line: 20\",\n+   \"Expected a function expression. File: js-aofs-nithindenkada/even_odd.js Line: 23\",\n+   \"'numbers' is already declared in the upper scope on line 19 column 5. File: js-aofs-nithindenkada/even_odd.js Line: 23\",\n+   \"'even' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/even_odd.js Line: 24\",\n+   \"'odd' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/even_odd.js Line: 25\",\n+   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/even_odd.js Line: 28\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/even_odd.js Line: 29\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/even_odd.js Line: 30\",\n+   \"A space is required after '{'. File: js-aofs-nithindenkada/even_odd.js Line: 35\",\n+   \"A space is required before '}'. File: js-aofs-nithindenkada/even_odd.js Line: 35\",\n+   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/even_odd.js Line: 36\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 13\n\n- Array []\n+ Array [\n+   \"'evenOddSeperation' was used before it was defined. File: js-aofs-nithindenkada/even_odd.js Line: 20\",\n+   \"Expected a function expression. File: js-aofs-nithindenkada/even_odd.js Line: 23\",\n+   \"'numbers' is already declared in the upper scope on line 19 column 5. File: js-aofs-nithindenkada/even_odd.js Line: 23\",\n+   \"'even' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/even_odd.js Line: 24\",\n+   \"'odd' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/even_odd.js Line: 25\",\n+   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/even_odd.js Line: 28\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/even_odd.js Line: 29\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/even_odd.js Line: 30\",\n+   \"A space is required after '{'. File: js-aofs-nithindenkada/even_odd.js Line: 35\",\n+   \"A space is required before '}'. File: js-aofs-nithindenkada/even_odd.js Line: 35\",\n+   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/even_odd.js Line: 36\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS nithindenkada even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":32,"failureDetails":[{"matcherResult":{"actual":["'copyOfNumbers' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/categorise.js Line: 27","Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/categorise.js Line: 27","'sortingGrouping' was used before it was defined. File: js-aofs-nithindenkada/categorise.js Line: 28","Expected a function expression. File: js-aofs-nithindenkada/categorise.js Line: 29","Function 'sortingGrouping' has too many lines (17). Maximum allowed is 15. File: js-aofs-nithindenkada/categorise.js Line: 29","'copyOfNumbers' is already declared in the upper scope on line 27 column 5. File: js-aofs-nithindenkada/categorise.js Line: 29","Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 29","Expected indentation of 2 spaces but found 0. File: js-aofs-nithindenkada/categorise.js Line: 30","'sortList' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/categorise.js Line: 30","Expected indentation of 2 spaces but found 0. File: js-aofs-nithindenkada/categorise.js Line: 31","'sorting' was used before it was defined. File: js-aofs-nithindenkada/categorise.js Line: 32","Expected indentation of 2 spaces but found 0. File: js-aofs-nithindenkada/categorise.js Line: 32","Trailing spaces not allowed. File: js-aofs-nithindenkada/categorise.js Line: 33","Expected space(s) after \"while\". File: js-aofs-nithindenkada/categorise.js Line: 34","Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 34","'category' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/categorise.js Line: 35","Expected space(s) after \"while\". File: js-aofs-nithindenkada/categorise.js Line: 36","Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 36","Expected indentation of 6 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 38","Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 39","Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 40","Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 41","Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 42","Expected a function expression. File: js-aofs-nithindenkada/categorise.js Line: 47","'copyOfNumbers' is already declared in the upper scope on line 27 column 5. File: js-aofs-nithindenkada/categorise.js Line: 47","Missing whitespace after semicolon. File: js-aofs-nithindenkada/categorise.js Line: 48","Operator '<' must be spaced. File: js-aofs-nithindenkada/categorise.js Line: 48","Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 48","This line has a length of 83. Maximum allowed is 80. File: js-aofs-nithindenkada/categorise.js Line: 49","Expected indentation of 4 spaces but found 0. File: js-aofs-nithindenkada/categorise.js Line: 49","Operator '+' must be spaced. File: js-aofs-nithindenkada/categorise.js Line: 49","Missing whitespace after semicolon. File: js-aofs-nithindenkada/categorise.js Line: 49","Operator '<' must be spaced. File: js-aofs-nithindenkada/categorise.js Line: 49","Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 49","Expected indentation of 6 spaces but found 4. File: js-aofs-nithindenkada/categorise.js Line: 50","Expected indentation of 8 spaces but found 6. File: js-aofs-nithindenkada/categorise.js Line: 51","'temporary' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/categorise.js Line: 51","Expected indentation of 8 spaces but found 6. File: js-aofs-nithindenkada/categorise.js Line: 52","Expected indentation of 8 spaces but found 6. File: js-aofs-nithindenkada/categorise.js Line: 53","Expected indentation of 6 spaces but found 4. File: js-aofs-nithindenkada/categorise.js Line: 54","Expected indentation of 4 spaces but found 2. File: js-aofs-nithindenkada/categorise.js Line: 55","Newline required at end of file but not found. File: js-aofs-nithindenkada/categorise.js Line: 57"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 44\n\n- Array []\n+ Array [\n+   \"'copyOfNumbers' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/categorise.js Line: 27\",\n+   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/categorise.js Line: 27\",\n+   \"'sortingGrouping' was used before it was defined. File: js-aofs-nithindenkada/categorise.js Line: 28\",\n+   \"Expected a function expression. File: js-aofs-nithindenkada/categorise.js Line: 29\",\n+   \"Function 'sortingGrouping' has too many lines (17). Maximum allowed is 15. File: js-aofs-nithindenkada/categorise.js Line: 29\",\n+   \"'copyOfNumbers' is already declared in the upper scope on line 27 column 5. File: js-aofs-nithindenkada/categorise.js Line: 29\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 29\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-nithindenkada/categorise.js Line: 30\",\n+   \"'sortList' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/categorise.js Line: 30\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-nithindenkada/categorise.js Line: 31\",\n+   \"'sorting' was used before it was defined. File: js-aofs-nithindenkada/categorise.js Line: 32\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-nithindenkada/categorise.js Line: 32\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/categorise.js Line: 33\",\n+   \"Expected space(s) after \\\"while\\\". File: js-aofs-nithindenkada/categorise.js Line: 34\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 34\",\n+   \"'category' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/categorise.js Line: 35\",\n+   \"Expected space(s) after \\\"while\\\". File: js-aofs-nithindenkada/categorise.js Line: 36\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 36\",\n+   \"Expected indentation of 6 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 38\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 40\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 41\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 42\",\n+   \"Expected a function expression. File: js-aofs-nithindenkada/categorise.js Line: 47\",\n+   \"'copyOfNumbers' is already declared in the upper scope on line 27 column 5. File: js-aofs-nithindenkada/categorise.js Line: 47\",\n+   \"Missing whitespace after semicolon. File: js-aofs-nithindenkada/categorise.js Line: 48\",\n+   \"Operator '<' must be spaced. File: js-aofs-nithindenkada/categorise.js Line: 48\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 48\",\n+   \"This line has a length of 83. Maximum allowed is 80. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n+   \"Expected indentation of 4 spaces but found 0. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n+   \"Operator '+' must be spaced. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n+   \"Missing whitespace after semicolon. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n+   \"Operator '<' must be spaced. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n+   \"Expected indentation of 6 spaces but found 4. File: js-aofs-nithindenkada/categorise.js Line: 50\",\n+   \"Expected indentation of 8 spaces but found 6. File: js-aofs-nithindenkada/categorise.js Line: 51\",\n+   \"'temporary' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/categorise.js Line: 51\",\n+   \"Expected indentation of 8 spaces but found 6. File: js-aofs-nithindenkada/categorise.js Line: 52\",\n+   \"Expected indentation of 8 spaces but found 6. File: js-aofs-nithindenkada/categorise.js Line: 53\",\n+   \"Expected indentation of 6 spaces but found 4. File: js-aofs-nithindenkada/categorise.js Line: 54\",\n+   \"Expected indentation of 4 spaces but found 2. File: js-aofs-nithindenkada/categorise.js Line: 55\",\n+   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/categorise.js Line: 57\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 44\n\n- Array []\n+ Array [\n+   \"'copyOfNumbers' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/categorise.js Line: 27\",\n+   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/categorise.js Line: 27\",\n+   \"'sortingGrouping' was used before it was defined. File: js-aofs-nithindenkada/categorise.js Line: 28\",\n+   \"Expected a function expression. File: js-aofs-nithindenkada/categorise.js Line: 29\",\n+   \"Function 'sortingGrouping' has too many lines (17). Maximum allowed is 15. File: js-aofs-nithindenkada/categorise.js Line: 29\",\n+   \"'copyOfNumbers' is already declared in the upper scope on line 27 column 5. File: js-aofs-nithindenkada/categorise.js Line: 29\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 29\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-nithindenkada/categorise.js Line: 30\",\n+   \"'sortList' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/categorise.js Line: 30\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-nithindenkada/categorise.js Line: 31\",\n+   \"'sorting' was used before it was defined. File: js-aofs-nithindenkada/categorise.js Line: 32\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-nithindenkada/categorise.js Line: 32\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/categorise.js Line: 33\",\n+   \"Expected space(s) after \\\"while\\\". File: js-aofs-nithindenkada/categorise.js Line: 34\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 34\",\n+   \"'category' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/categorise.js Line: 35\",\n+   \"Expected space(s) after \\\"while\\\". File: js-aofs-nithindenkada/categorise.js Line: 36\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 36\",\n+   \"Expected indentation of 6 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 38\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 40\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 41\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 42\",\n+   \"Expected a function expression. File: js-aofs-nithindenkada/categorise.js Line: 47\",\n+   \"'copyOfNumbers' is already declared in the upper scope on line 27 column 5. File: js-aofs-nithindenkada/categorise.js Line: 47\",\n+   \"Missing whitespace after semicolon. File: js-aofs-nithindenkada/categorise.js Line: 48\",\n+   \"Operator '<' must be spaced. File: js-aofs-nithindenkada/categorise.js Line: 48\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 48\",\n+   \"This line has a length of 83. Maximum allowed is 80. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n+   \"Expected indentation of 4 spaces but found 0. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n+   \"Operator '+' must be spaced. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n+   \"Missing whitespace after semicolon. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n+   \"Operator '<' must be spaced. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n+   \"Expected indentation of 6 spaces but found 4. File: js-aofs-nithindenkada/categorise.js Line: 50\",\n+   \"Expected indentation of 8 spaces but found 6. File: js-aofs-nithindenkada/categorise.js Line: 51\",\n+   \"'temporary' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/categorise.js Line: 51\",\n+   \"Expected indentation of 8 spaces but found 6. File: js-aofs-nithindenkada/categorise.js Line: 52\",\n+   \"Expected indentation of 8 spaces but found 6. File: js-aofs-nithindenkada/categorise.js Line: 53\",\n+   \"Expected indentation of 6 spaces but found 4. File: js-aofs-nithindenkada/categorise.js Line: 54\",\n+   \"Expected indentation of 4 spaces but found 2. File: js-aofs-nithindenkada/categorise.js Line: 55\",\n+   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/categorise.js Line: 57\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS nithindenkada categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":14,"failureDetails":[{"matcherResult":{"actual":["A space is required after '{'. File: js-aofs-nithindenkada/entries.js Line: 3","A space is required before '}'. File: js-aofs-nithindenkada/entries.js Line: 3","Missing semicolon. File: js-aofs-nithindenkada/entries.js Line: 3","Trailing spaces not allowed. File: js-aofs-nithindenkada/entries.js Line: 6","More than 1 blank line not allowed. File: js-aofs-nithindenkada/entries.js Line: 23","'myEntries' was used before it was defined. File: js-aofs-nithindenkada/entries.js Line: 25","Expected a function expression. File: js-aofs-nithindenkada/entries.js Line: 27","'objectCopy' is already declared in the upper scope on line 24 column 5. File: js-aofs-nithindenkada/entries.js Line: 27","Missing space before opening brace. File: js-aofs-nithindenkada/entries.js Line: 27","Expected indentation of 2 spaces but found 0. File: js-aofs-nithindenkada/entries.js Line: 28","'output' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/entries.js Line: 28","Expected space(s) after \"for\". File: js-aofs-nithindenkada/entries.js Line: 29","'key' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/entries.js Line: 29","Missing space before opening brace. File: js-aofs-nithindenkada/entries.js Line: 29","Block must not be padded by blank lines. File: js-aofs-nithindenkada/entries.js Line: 30","Trailing spaces not allowed. File: js-aofs-nithindenkada/entries.js Line: 31","Block must not be padded by blank lines. File: js-aofs-nithindenkada/entries.js Line: 33","Trailing spaces not allowed. File: js-aofs-nithindenkada/entries.js Line: 34","Newline required at end of file but not found. File: js-aofs-nithindenkada/entries.js Line: 35"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 21\n\n- Array []\n+ Array [\n+   \"A space is required after '{'. File: js-aofs-nithindenkada/entries.js Line: 3\",\n+   \"A space is required before '}'. File: js-aofs-nithindenkada/entries.js Line: 3\",\n+   \"Missing semicolon. File: js-aofs-nithindenkada/entries.js Line: 3\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/entries.js Line: 6\",\n+   \"More than 1 blank line not allowed. File: js-aofs-nithindenkada/entries.js Line: 23\",\n+   \"'myEntries' was used before it was defined. File: js-aofs-nithindenkada/entries.js Line: 25\",\n+   \"Expected a function expression. File: js-aofs-nithindenkada/entries.js Line: 27\",\n+   \"'objectCopy' is already declared in the upper scope on line 24 column 5. File: js-aofs-nithindenkada/entries.js Line: 27\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/entries.js Line: 27\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-nithindenkada/entries.js Line: 28\",\n+   \"'output' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/entries.js Line: 28\",\n+   \"Expected space(s) after \\\"for\\\". File: js-aofs-nithindenkada/entries.js Line: 29\",\n+   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/entries.js Line: 29\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/entries.js Line: 29\",\n+   \"Block must not be padded by blank lines. File: js-aofs-nithindenkada/entries.js Line: 30\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/entries.js Line: 31\",\n+   \"Block must not be padded by blank lines. File: js-aofs-nithindenkada/entries.js Line: 33\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/entries.js Line: 34\",\n+   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/entries.js Line: 35\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 21\n\n- Array []\n+ Array [\n+   \"A space is required after '{'. File: js-aofs-nithindenkada/entries.js Line: 3\",\n+   \"A space is required before '}'. File: js-aofs-nithindenkada/entries.js Line: 3\",\n+   \"Missing semicolon. File: js-aofs-nithindenkada/entries.js Line: 3\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/entries.js Line: 6\",\n+   \"More than 1 blank line not allowed. File: js-aofs-nithindenkada/entries.js Line: 23\",\n+   \"'myEntries' was used before it was defined. File: js-aofs-nithindenkada/entries.js Line: 25\",\n+   \"Expected a function expression. File: js-aofs-nithindenkada/entries.js Line: 27\",\n+   \"'objectCopy' is already declared in the upper scope on line 24 column 5. File: js-aofs-nithindenkada/entries.js Line: 27\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/entries.js Line: 27\",\n+   \"Expected indentation of 2 spaces but found 0. File: js-aofs-nithindenkada/entries.js Line: 28\",\n+   \"'output' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/entries.js Line: 28\",\n+   \"Expected space(s) after \\\"for\\\". File: js-aofs-nithindenkada/entries.js Line: 29\",\n+   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/entries.js Line: 29\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/entries.js Line: 29\",\n+   \"Block must not be padded by blank lines. File: js-aofs-nithindenkada/entries.js Line: 30\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/entries.js Line: 31\",\n+   \"Block must not be padded by blank lines. File: js-aofs-nithindenkada/entries.js Line: 33\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/entries.js Line: 34\",\n+   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/entries.js Line: 35\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS nithindenkada entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":30,"failureDetails":[{"matcherResult":{"actual":["Strings must use singlequote. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 3","Trailing spaces not allowed. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 5","Trailing spaces not allowed. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 7","'finalResult' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 32","'removeAdjacentSpaces' was used before it was defined. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 32","Expected a function expression. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 35","Function 'removeAdjacentSpaces' has too many lines (27). Maximum allowed is 15. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 35","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 36","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 37","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 38","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 39","Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 39","Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 40","There should be no space after this paren. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 40","Expected indentation of 6 spaces but found 12. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 41","Expected indentation of 6 spaces but found 12. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 42","Expected indentation of 4 spaces but found 9. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 43","Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 43","Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 44","There should be no space after this paren. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 44","Expected '!==' and instead saw '!='. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 44","Expected indentation of 6 spaces but found 11. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 45","Expected indentation of 6 spaces but found 11. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 46","Expected indentation of 4 spaces but found 9. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 47","Expected indentation of 2 spaces but found 5. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 48","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 49","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 50","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 51","Expected space(s) after \"if\". File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 51","Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 52","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 53","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 54","Operator '-' must be spaced. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 54","Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 55","Operator '-' must be spaced. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 55","Expected indentation of 2 spaces but found 5. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 56","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 57","There should be no space after this paren. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 57","Missing whitespace after semicolon. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 57","Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 57","Expected indentation of 4 spaces but found 7. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 58","Operator '+=' must be spaced. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 58","Expected indentation of 2 spaces but found 5. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 59","Expected indentation of 2 spaces but found 1. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 60","Expected indentation of 0 spaces but found 1. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 61","Newline required at end of file but not found. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 61"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 48\n\n- Array []\n+ Array [\n+   \"Strings must use singlequote. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 3\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 5\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 7\",\n+   \"'finalResult' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 32\",\n+   \"'removeAdjacentSpaces' was used before it was defined. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 32\",\n+   \"Expected a function expression. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 35\",\n+   \"Function 'removeAdjacentSpaces' has too many lines (27). Maximum allowed is 15. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 35\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 36\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 37\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 38\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 39\",\n+   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 40\",\n+   \"There should be no space after this paren. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 40\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 41\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 42\",\n+   \"Expected indentation of 4 spaces but found 9. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 43\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 43\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 44\",\n+   \"There should be no space after this paren. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 44\",\n+   \"Expected '!==' and instead saw '!='. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 44\",\n+   \"Expected indentation of 6 spaces but found 11. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 45\",\n+   \"Expected indentation of 6 spaces but found 11. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 46\",\n+   \"Expected indentation of 4 spaces but found 9. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 47\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 48\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 49\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 50\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 51\",\n+   \"Expected space(s) after \\\"if\\\". File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 51\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 52\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 53\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 54\",\n+   \"Operator '-' must be spaced. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 54\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 55\",\n+   \"Operator '-' must be spaced. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 55\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 56\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 57\",\n+   \"There should be no space after this paren. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 57\",\n+   \"Missing whitespace after semicolon. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 57\",\n+   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 57\",\n+   \"Expected indentation of 4 spaces but found 7. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 58\",\n+   \"Operator '+=' must be spaced. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 58\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 59\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 60\",\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 61\",\n+   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 61\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 48\n\n- Array []\n+ Array [\n+   \"Strings must use singlequote. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 3\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 5\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 7\",\n+   \"'finalResult' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 32\",\n+   \"'removeAdjacentSpaces' was used before it was defined. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 32\",\n+   \"Expected a function expression. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 35\",\n+   \"Function 'removeAdjacentSpaces' has too many lines (27). Maximum allowed is 15. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 35\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 36\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 37\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 38\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 39\",\n+   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 40\",\n+   \"There should be no space after this paren. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 40\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 41\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 42\",\n+   \"Expected indentation of 4 spaces but found 9. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 43\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 43\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 44\",\n+   \"There should be no space after this paren. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 44\",\n+   \"Expected '!==' and instead saw '!='. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 44\",\n+   \"Expected indentation of 6 spaces but found 11. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 45\",\n+   \"Expected indentation of 6 spaces but found 11. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 46\",\n+   \"Expected indentation of 4 spaces but found 9. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 47\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 48\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 49\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 50\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 51\",\n+   \"Expected space(s) after \\\"if\\\". File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 51\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 52\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 53\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 54\",\n+   \"Operator '-' must be spaced. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 54\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 55\",\n+   \"Operator '-' must be spaced. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 55\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 56\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 57\",\n+   \"There should be no space after this paren. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 57\",\n+   \"Missing whitespace after semicolon. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 57\",\n+   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 57\",\n+   \"Expected indentation of 4 spaces but found 7. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 58\",\n+   \"Operator '+=' must be spaced. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 58\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 59\",\n+   \"Expected indentation of 2 spaces but found 1. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 60\",\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 61\",\n+   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 61\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":20,"failureDetails":[{"matcherResult":{"actual":["Trailing spaces not allowed. File: js-aofs-nithindenkada/tribonacci.js Line: 7","'number' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 23","Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 25","'number1' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 25","Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 26","'number2' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 26","Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 27","'number3' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 27","Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 28","'number4' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 28","Operator '+' must be spaced. File: js-aofs-nithindenkada/tribonacci.js Line: 28","Operator '+' must be spaced. File: js-aofs-nithindenkada/tribonacci.js Line: 28","Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 29","'result' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 29","Trailing spaces not allowed. File: js-aofs-nithindenkada/tribonacci.js Line: 30","'finalResult' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 31","'tribonacci' was used before it was defined. File: js-aofs-nithindenkada/tribonacci.js Line: 31","A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 31","A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 31","A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 31","Expected exception block, space or tab after '//' in comment. File: js-aofs-nithindenkada/tribonacci.js Line: 33","Trailing spaces not allowed. File: js-aofs-nithindenkada/tribonacci.js Line: 34","Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 35","Expected a function expression. File: js-aofs-nithindenkada/tribonacci.js Line: 35","Function 'tribonacci' has too many lines (17). Maximum allowed is 15. File: js-aofs-nithindenkada/tribonacci.js Line: 35","'number1' is already declared in the upper scope on line 25 column 7. File: js-aofs-nithindenkada/tribonacci.js Line: 35","A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 35","'number2' is already declared in the upper scope on line 26 column 7. File: js-aofs-nithindenkada/tribonacci.js Line: 35","A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 35","'number3' is already declared in the upper scope on line 27 column 7. File: js-aofs-nithindenkada/tribonacci.js Line: 35","A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 35","'number4' is already declared in the upper scope on line 28 column 7. File: js-aofs-nithindenkada/tribonacci.js Line: 35","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 36","Missing space before opening brace. File: js-aofs-nithindenkada/tribonacci.js Line: 36","Trailing spaces not allowed. File: js-aofs-nithindenkada/tribonacci.js Line: 39","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 40","Missing space before opening brace. File: js-aofs-nithindenkada/tribonacci.js Line: 40","Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 41","Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 42","Assignment to function parameter 'number1'. File: js-aofs-nithindenkada/tribonacci.js Line: 42","Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 43","Assignment to function parameter 'number2'. File: js-aofs-nithindenkada/tribonacci.js Line: 43","Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 44","Assignment to function parameter 'number3'. File: js-aofs-nithindenkada/tribonacci.js Line: 44","Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 45","Assignment to function parameter 'number4'. File: js-aofs-nithindenkada/tribonacci.js Line: 45","Operator '+' must be spaced. File: js-aofs-nithindenkada/tribonacci.js Line: 45","Operator '+' must be spaced. File: js-aofs-nithindenkada/tribonacci.js Line: 45","Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 46","A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 46","A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 46","A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 46","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 47","Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/tribonacci.js Line: 47","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 48","Unnecessary 'else' after 'return'. File: js-aofs-nithindenkada/tribonacci.js Line: 48","Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 49","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 50","Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 51","Newline required at end of file but not found. File: js-aofs-nithindenkada/tribonacci.js Line: 51"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 62\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/tribonacci.js Line: 7\",\n+   \"'number' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 23\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 25\",\n+   \"'number1' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 25\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 26\",\n+   \"'number2' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 26\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 27\",\n+   \"'number3' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 27\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 28\",\n+   \"'number4' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 28\",\n+   \"Operator '+' must be spaced. File: js-aofs-nithindenkada/tribonacci.js Line: 28\",\n+   \"Operator '+' must be spaced. File: js-aofs-nithindenkada/tribonacci.js Line: 28\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 29\",\n+   \"'result' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 29\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/tribonacci.js Line: 30\",\n+   \"'finalResult' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 31\",\n+   \"'tribonacci' was used before it was defined. File: js-aofs-nithindenkada/tribonacci.js Line: 31\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 31\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 31\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 31\",\n+   \"Expected exception block, space or tab after '//' in comment. File: js-aofs-nithindenkada/tribonacci.js Line: 33\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/tribonacci.js Line: 34\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"Expected a function expression. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"Function 'tribonacci' has too many lines (17). Maximum allowed is 15. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"'number1' is already declared in the upper scope on line 25 column 7. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"'number2' is already declared in the upper scope on line 26 column 7. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"'number3' is already declared in the upper scope on line 27 column 7. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"'number4' is already declared in the upper scope on line 28 column 7. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 36\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/tribonacci.js Line: 36\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/tribonacci.js Line: 39\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 40\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/tribonacci.js Line: 40\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 41\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 42\",\n+   \"Assignment to function parameter 'number1'. File: js-aofs-nithindenkada/tribonacci.js Line: 42\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 43\",\n+   \"Assignment to function parameter 'number2'. File: js-aofs-nithindenkada/tribonacci.js Line: 43\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 44\",\n+   \"Assignment to function parameter 'number3'. File: js-aofs-nithindenkada/tribonacci.js Line: 44\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 45\",\n+   \"Assignment to function parameter 'number4'. File: js-aofs-nithindenkada/tribonacci.js Line: 45\",\n+   \"Operator '+' must be spaced. File: js-aofs-nithindenkada/tribonacci.js Line: 45\",\n+   \"Operator '+' must be spaced. File: js-aofs-nithindenkada/tribonacci.js Line: 45\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 46\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 46\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 46\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 46\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 47\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/tribonacci.js Line: 47\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 48\",\n+   \"Unnecessary 'else' after 'return'. File: js-aofs-nithindenkada/tribonacci.js Line: 48\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 49\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 50\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 51\",\n+   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/tribonacci.js Line: 51\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 62\n\n- Array []\n+ Array [\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/tribonacci.js Line: 7\",\n+   \"'number' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 23\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 25\",\n+   \"'number1' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 25\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 26\",\n+   \"'number2' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 26\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 27\",\n+   \"'number3' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 27\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 28\",\n+   \"'number4' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 28\",\n+   \"Operator '+' must be spaced. File: js-aofs-nithindenkada/tribonacci.js Line: 28\",\n+   \"Operator '+' must be spaced. File: js-aofs-nithindenkada/tribonacci.js Line: 28\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 29\",\n+   \"'result' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 29\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/tribonacci.js Line: 30\",\n+   \"'finalResult' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 31\",\n+   \"'tribonacci' was used before it was defined. File: js-aofs-nithindenkada/tribonacci.js Line: 31\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 31\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 31\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 31\",\n+   \"Expected exception block, space or tab after '//' in comment. File: js-aofs-nithindenkada/tribonacci.js Line: 33\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/tribonacci.js Line: 34\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"Expected a function expression. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"Function 'tribonacci' has too many lines (17). Maximum allowed is 15. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"'number1' is already declared in the upper scope on line 25 column 7. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"'number2' is already declared in the upper scope on line 26 column 7. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"'number3' is already declared in the upper scope on line 27 column 7. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"'number4' is already declared in the upper scope on line 28 column 7. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 36\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/tribonacci.js Line: 36\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/tribonacci.js Line: 39\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 40\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/tribonacci.js Line: 40\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 41\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 42\",\n+   \"Assignment to function parameter 'number1'. File: js-aofs-nithindenkada/tribonacci.js Line: 42\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 43\",\n+   \"Assignment to function parameter 'number2'. File: js-aofs-nithindenkada/tribonacci.js Line: 43\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 44\",\n+   \"Assignment to function parameter 'number3'. File: js-aofs-nithindenkada/tribonacci.js Line: 44\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 45\",\n+   \"Assignment to function parameter 'number4'. File: js-aofs-nithindenkada/tribonacci.js Line: 45\",\n+   \"Operator '+' must be spaced. File: js-aofs-nithindenkada/tribonacci.js Line: 45\",\n+   \"Operator '+' must be spaced. File: js-aofs-nithindenkada/tribonacci.js Line: 45\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 46\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 46\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 46\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 46\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 47\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/tribonacci.js Line: 47\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 48\",\n+   \"Unnecessary 'else' after 'return'. File: js-aofs-nithindenkada/tribonacci.js Line: 48\",\n+   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 49\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 50\",\n+   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 51\",\n+   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/tribonacci.js Line: 51\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS nithindenkada tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:35\n    if (array1.length != array2.length) {\n               ^\n\nTypeError: Cannot read properties of undefined (reading 'length')\n    at arrayEqualOrNot (evalmachine.<anonymous>:35:16)\n    at evalmachine.<anonymous>:50:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)"],"fullName":"JS-AOFS nithindenkada array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":22,"failureDetails":[{"matcherResult":{"actual":["A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 3","A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 3","A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 4","A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 4","Trailing spaces not allowed. File: js-aofs-nithindenkada/array_equals.js Line: 11","Expected a function expression. File: js-aofs-nithindenkada/array_equals.js Line: 31","Function 'arrayEqualOrNot' has too many lines (19). Maximum allowed is 15. File: js-aofs-nithindenkada/array_equals.js Line: 31","Unexpected space before function parentheses. File: js-aofs-nithindenkada/array_equals.js Line: 31","A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 31","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 32","Operator '||' must be spaced. File: js-aofs-nithindenkada/array_equals.js Line: 32","Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 33","Operator '===' must be spaced. File: js-aofs-nithindenkada/array_equals.js Line: 33","Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/array_equals.js Line: 33","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 34","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 35","Expected '!==' and instead saw '!='. File: js-aofs-nithindenkada/array_equals.js Line: 35","Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 36","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 37","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 38","Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/array_equals.js Line: 38","There should be no space before this paren. File: js-aofs-nithindenkada/array_equals.js Line: 38","Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 39","Unary word operator 'typeof' must be followed by whitespace. File: js-aofs-nithindenkada/array_equals.js Line: 39","Operator '===' must be spaced. File: js-aofs-nithindenkada/array_equals.js Line: 39","Unary word operator 'typeof' must be followed by whitespace. File: js-aofs-nithindenkada/array_equals.js Line: 39","Expected indentation of 6 spaces but found 11. File: js-aofs-nithindenkada/array_equals.js Line: 40","A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 40","Expected '!==' and instead saw '!='. File: js-aofs-nithindenkada/array_equals.js Line: 40","Expected indentation of 8 spaces but found 14. File: js-aofs-nithindenkada/array_equals.js Line: 41","Expected indentation of 6 spaces but found 12. File: js-aofs-nithindenkada/array_equals.js Line: 42","Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 43","Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/array_equals.js Line: 43","Expected indentation of 4 spaces but found 7. File: js-aofs-nithindenkada/array_equals.js Line: 44","Expected indentation of 6 spaces but found 11. File: js-aofs-nithindenkada/array_equals.js Line: 45","Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 46","Expected indentation of 2 spaces but found 5. File: js-aofs-nithindenkada/array_equals.js Line: 47","Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 48","Expected indentation of 0 spaces but found 1. File: js-aofs-nithindenkada/array_equals.js Line: 49","A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 50","Newline required at end of file but not found. File: js-aofs-nithindenkada/array_equals.js Line: 50"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 43\n\n- Array []\n+ Array [\n+   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 3\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 3\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 4\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 4\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/array_equals.js Line: 11\",\n+   \"Expected a function expression. File: js-aofs-nithindenkada/array_equals.js Line: 31\",\n+   \"Function 'arrayEqualOrNot' has too many lines (19). Maximum allowed is 15. File: js-aofs-nithindenkada/array_equals.js Line: 31\",\n+   \"Unexpected space before function parentheses. File: js-aofs-nithindenkada/array_equals.js Line: 31\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 31\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 32\",\n+   \"Operator '||' must be spaced. File: js-aofs-nithindenkada/array_equals.js Line: 32\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 33\",\n+   \"Operator '===' must be spaced. File: js-aofs-nithindenkada/array_equals.js Line: 33\",\n+   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/array_equals.js Line: 33\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 34\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 35\",\n+   \"Expected '!==' and instead saw '!='. File: js-aofs-nithindenkada/array_equals.js Line: 35\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 36\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 37\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 38\",\n+   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/array_equals.js Line: 38\",\n+   \"There should be no space before this paren. File: js-aofs-nithindenkada/array_equals.js Line: 38\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 39\",\n+   \"Unary word operator 'typeof' must be followed by whitespace. File: js-aofs-nithindenkada/array_equals.js Line: 39\",\n+   \"Operator '===' must be spaced. File: js-aofs-nithindenkada/array_equals.js Line: 39\",\n+   \"Unary word operator 'typeof' must be followed by whitespace. File: js-aofs-nithindenkada/array_equals.js Line: 39\",\n+   \"Expected indentation of 6 spaces but found 11. File: js-aofs-nithindenkada/array_equals.js Line: 40\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 40\",\n+   \"Expected '!==' and instead saw '!='. File: js-aofs-nithindenkada/array_equals.js Line: 40\",\n+   \"Expected indentation of 8 spaces but found 14. File: js-aofs-nithindenkada/array_equals.js Line: 41\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-nithindenkada/array_equals.js Line: 42\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 43\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/array_equals.js Line: 43\",\n+   \"Expected indentation of 4 spaces but found 7. File: js-aofs-nithindenkada/array_equals.js Line: 44\",\n+   \"Expected indentation of 6 spaces but found 11. File: js-aofs-nithindenkada/array_equals.js Line: 45\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 46\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-nithindenkada/array_equals.js Line: 47\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 48\",\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-nithindenkada/array_equals.js Line: 49\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 50\",\n+   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/array_equals.js Line: 50\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 43\n\n- Array []\n+ Array [\n+   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 3\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 3\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 4\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 4\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/array_equals.js Line: 11\",\n+   \"Expected a function expression. File: js-aofs-nithindenkada/array_equals.js Line: 31\",\n+   \"Function 'arrayEqualOrNot' has too many lines (19). Maximum allowed is 15. File: js-aofs-nithindenkada/array_equals.js Line: 31\",\n+   \"Unexpected space before function parentheses. File: js-aofs-nithindenkada/array_equals.js Line: 31\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 31\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 32\",\n+   \"Operator '||' must be spaced. File: js-aofs-nithindenkada/array_equals.js Line: 32\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 33\",\n+   \"Operator '===' must be spaced. File: js-aofs-nithindenkada/array_equals.js Line: 33\",\n+   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/array_equals.js Line: 33\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 34\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 35\",\n+   \"Expected '!==' and instead saw '!='. File: js-aofs-nithindenkada/array_equals.js Line: 35\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 36\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 37\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 38\",\n+   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/array_equals.js Line: 38\",\n+   \"There should be no space before this paren. File: js-aofs-nithindenkada/array_equals.js Line: 38\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 39\",\n+   \"Unary word operator 'typeof' must be followed by whitespace. File: js-aofs-nithindenkada/array_equals.js Line: 39\",\n+   \"Operator '===' must be spaced. File: js-aofs-nithindenkada/array_equals.js Line: 39\",\n+   \"Unary word operator 'typeof' must be followed by whitespace. File: js-aofs-nithindenkada/array_equals.js Line: 39\",\n+   \"Expected indentation of 6 spaces but found 11. File: js-aofs-nithindenkada/array_equals.js Line: 40\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 40\",\n+   \"Expected '!==' and instead saw '!='. File: js-aofs-nithindenkada/array_equals.js Line: 40\",\n+   \"Expected indentation of 8 spaces but found 14. File: js-aofs-nithindenkada/array_equals.js Line: 41\",\n+   \"Expected indentation of 6 spaces but found 12. File: js-aofs-nithindenkada/array_equals.js Line: 42\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 43\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/array_equals.js Line: 43\",\n+   \"Expected indentation of 4 spaces but found 7. File: js-aofs-nithindenkada/array_equals.js Line: 44\",\n+   \"Expected indentation of 6 spaces but found 11. File: js-aofs-nithindenkada/array_equals.js Line: 45\",\n+   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 46\",\n+   \"Expected indentation of 2 spaces but found 5. File: js-aofs-nithindenkada/array_equals.js Line: 47\",\n+   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 48\",\n+   \"Expected indentation of 0 spaces but found 1. File: js-aofs-nithindenkada/array_equals.js Line: 49\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 50\",\n+   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/array_equals.js Line: 50\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS nithindenkada array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:38\n  let array_1 = Object.keys(obj1);\n                       ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at objectEqual (evalmachine.<anonymous>:38:24)\n    at objectEqual (evalmachine.<anonymous>:51:18)\n    at evalmachine.<anonymous>:34:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)"],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:38\n  let array_1 = Object.keys(obj1);\n                       ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at objectEqual (evalmachine.<anonymous>:38:24)\n    at evalmachine.<anonymous>:34:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":2,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:38\n  let array_1 = Object.keys(obj1);\n                       ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at objectEqual (evalmachine.<anonymous>:38:24)\n    at evalmachine.<anonymous>:34:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:39\n  let array_2 = Object.keys(obj2);\n                       ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at objectEqual (evalmachine.<anonymous>:39:24)\n    at evalmachine.<anonymous>:34:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:38\n  let array_1 = Object.keys(obj1);\n                       ^\n\nTypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at objectEqual (evalmachine.<anonymous>:38:24)\n    at evalmachine.<anonymous>:34:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[true],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   false,\n+   true,\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:39:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":35,"failureDetails":[{"matcherResult":{"actual":["There should be no space before ','. File: js-aofs-nithindenkada/object_equals.js Line: 3","A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 3","Missing space before value for key 'd'. File: js-aofs-nithindenkada/object_equals.js Line: 3","A space is required after '{'. File: js-aofs-nithindenkada/object_equals.js Line: 3","Missing space before value for key 'b'. File: js-aofs-nithindenkada/object_equals.js Line: 3","A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 3","Missing space before value for key 'a'. File: js-aofs-nithindenkada/object_equals.js Line: 3","A space is required before '}'. File: js-aofs-nithindenkada/object_equals.js Line: 3","A space is required before '}'. File: js-aofs-nithindenkada/object_equals.js Line: 3","Missing space before value for key 'd'. File: js-aofs-nithindenkada/object_equals.js Line: 4","A space is required after '{'. File: js-aofs-nithindenkada/object_equals.js Line: 4","Missing space before value for key 'a'. File: js-aofs-nithindenkada/object_equals.js Line: 4","A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 4","Missing space before value for key 'b'. File: js-aofs-nithindenkada/object_equals.js Line: 4","A space is required before '}'. File: js-aofs-nithindenkada/object_equals.js Line: 4","A space is required before '}'. File: js-aofs-nithindenkada/object_equals.js Line: 4","Trailing spaces not allowed. File: js-aofs-nithindenkada/object_equals.js Line: 5","More than 1 blank line not allowed. File: js-aofs-nithindenkada/object_equals.js Line: 32","'objectEqual' was used before it was defined. File: js-aofs-nithindenkada/object_equals.js Line: 33","A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 33","Missing semicolon. File: js-aofs-nithindenkada/object_equals.js Line: 33","Expected a function expression. File: js-aofs-nithindenkada/object_equals.js Line: 35","Function 'objectEqual' has too many lines (25). Maximum allowed is 15. File: js-aofs-nithindenkada/object_equals.js Line: 35","A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 35","Block must not be padded by blank lines. File: js-aofs-nithindenkada/object_equals.js Line: 35","Trailing spaces not allowed. File: js-aofs-nithindenkada/object_equals.js Line: 36","Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 37","'array_1' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/object_equals.js Line: 37","Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 38","'array_2' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/object_equals.js Line: 38","Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 39","Expected '!==' and instead saw '!='. File: js-aofs-nithindenkada/object_equals.js Line: 39","Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 39","Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/object_equals.js Line: 40","Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 42","Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/object_equals.js Line: 42","Missing space before opening brace. File: js-aofs-nithindenkada/object_equals.js Line: 42","Expected indentation of 4 spaces but found 5. File: js-aofs-nithindenkada/object_equals.js Line: 43","Operator '<' must be spaced. File: js-aofs-nithindenkada/object_equals.js Line: 44","Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 44","Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 45","Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 45","Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 46","Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 46","Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/object_equals.js Line: 48","Expected indentation of 8 spaces but found 0. File: js-aofs-nithindenkada/object_equals.js Line: 48","Unary word operator 'typeof' must be followed by whitespace. File: js-aofs-nithindenkada/object_equals.js Line: 49","Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 49","Operator '&&' must be spaced. File: js-aofs-nithindenkada/object_equals.js Line: 49","Unary word operator 'typeof' must be followed by whitespace. File: js-aofs-nithindenkada/object_equals.js Line: 49","Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 49","Operator '===' must be spaced. File: js-aofs-nithindenkada/object_equals.js Line: 49","Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 50","Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 50","Missing semicolon. File: js-aofs-nithindenkada/object_equals.js Line: 50","Expected space(s) after \"if\". File: js-aofs-nithindenkada/object_equals.js Line: 54","Expected '===' and instead saw '=='. File: js-aofs-nithindenkada/object_equals.js Line: 54"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 59\n\n- Array []\n+ Array [\n+   \"There should be no space before ','. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"Missing space before value for key 'd'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"A space is required after '{'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"Missing space before value for key 'b'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"Missing space before value for key 'a'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"A space is required before '}'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"A space is required before '}'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"Missing space before value for key 'd'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n+   \"A space is required after '{'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n+   \"Missing space before value for key 'a'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n+   \"Missing space before value for key 'b'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n+   \"A space is required before '}'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n+   \"A space is required before '}'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/object_equals.js Line: 5\",\n+   \"More than 1 blank line not allowed. File: js-aofs-nithindenkada/object_equals.js Line: 32\",\n+   \"'objectEqual' was used before it was defined. File: js-aofs-nithindenkada/object_equals.js Line: 33\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 33\",\n+   \"Missing semicolon. File: js-aofs-nithindenkada/object_equals.js Line: 33\",\n+   \"Expected a function expression. File: js-aofs-nithindenkada/object_equals.js Line: 35\",\n+   \"Function 'objectEqual' has too many lines (25). Maximum allowed is 15. File: js-aofs-nithindenkada/object_equals.js Line: 35\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 35\",\n+   \"Block must not be padded by blank lines. File: js-aofs-nithindenkada/object_equals.js Line: 35\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/object_equals.js Line: 36\",\n+   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 37\",\n+   \"'array_1' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/object_equals.js Line: 37\",\n+   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 38\",\n+   \"'array_2' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/object_equals.js Line: 38\",\n+   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 39\",\n+   \"Expected '!==' and instead saw '!='. File: js-aofs-nithindenkada/object_equals.js Line: 39\",\n+   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/object_equals.js Line: 40\",\n+   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 42\",\n+   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/object_equals.js Line: 42\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/object_equals.js Line: 42\",\n+   \"Expected indentation of 4 spaces but found 5. File: js-aofs-nithindenkada/object_equals.js Line: 43\",\n+   \"Operator '<' must be spaced. File: js-aofs-nithindenkada/object_equals.js Line: 44\",\n+   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 44\",\n+   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 45\",\n+   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 45\",\n+   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 46\",\n+   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 46\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/object_equals.js Line: 48\",\n+   \"Expected indentation of 8 spaces but found 0. File: js-aofs-nithindenkada/object_equals.js Line: 48\",\n+   \"Unary word operator 'typeof' must be followed by whitespace. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n+   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n+   \"Operator '&&' must be spaced. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n+   \"Unary word operator 'typeof' must be followed by whitespace. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n+   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n+   \"Operator '===' must be spaced. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n+   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 50\",\n+   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 50\",\n+   \"Missing semicolon. File: js-aofs-nithindenkada/object_equals.js Line: 50\",\n+   \"Expected space(s) after \\\"if\\\". File: js-aofs-nithindenkada/object_equals.js Line: 54\",\n+   \"Expected '===' and instead saw '=='. File: js-aofs-nithindenkada/object_equals.js Line: 54\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  -  1\n+ Received  + 59\n\n- Array []\n+ Array [\n+   \"There should be no space before ','. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"Missing space before value for key 'd'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"A space is required after '{'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"Missing space before value for key 'b'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"Missing space before value for key 'a'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"A space is required before '}'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"A space is required before '}'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n+   \"Missing space before value for key 'd'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n+   \"A space is required after '{'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n+   \"Missing space before value for key 'a'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n+   \"Missing space before value for key 'b'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n+   \"A space is required before '}'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n+   \"A space is required before '}'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/object_equals.js Line: 5\",\n+   \"More than 1 blank line not allowed. File: js-aofs-nithindenkada/object_equals.js Line: 32\",\n+   \"'objectEqual' was used before it was defined. File: js-aofs-nithindenkada/object_equals.js Line: 33\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 33\",\n+   \"Missing semicolon. File: js-aofs-nithindenkada/object_equals.js Line: 33\",\n+   \"Expected a function expression. File: js-aofs-nithindenkada/object_equals.js Line: 35\",\n+   \"Function 'objectEqual' has too many lines (25). Maximum allowed is 15. File: js-aofs-nithindenkada/object_equals.js Line: 35\",\n+   \"A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 35\",\n+   \"Block must not be padded by blank lines. File: js-aofs-nithindenkada/object_equals.js Line: 35\",\n+   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/object_equals.js Line: 36\",\n+   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 37\",\n+   \"'array_1' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/object_equals.js Line: 37\",\n+   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 38\",\n+   \"'array_2' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/object_equals.js Line: 38\",\n+   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 39\",\n+   \"Expected '!==' and instead saw '!='. File: js-aofs-nithindenkada/object_equals.js Line: 39\",\n+   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 39\",\n+   \"Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/object_equals.js Line: 40\",\n+   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 42\",\n+   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/object_equals.js Line: 42\",\n+   \"Missing space before opening brace. File: js-aofs-nithindenkada/object_equals.js Line: 42\",\n+   \"Expected indentation of 4 spaces but found 5. File: js-aofs-nithindenkada/object_equals.js Line: 43\",\n+   \"Operator '<' must be spaced. File: js-aofs-nithindenkada/object_equals.js Line: 44\",\n+   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 44\",\n+   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 45\",\n+   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 45\",\n+   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 46\",\n+   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 46\",\n+   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/object_equals.js Line: 48\",\n+   \"Expected indentation of 8 spaces but found 0. File: js-aofs-nithindenkada/object_equals.js Line: 48\",\n+   \"Unary word operator 'typeof' must be followed by whitespace. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n+   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n+   \"Operator '&&' must be spaced. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n+   \"Unary word operator 'typeof' must be followed by whitespace. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n+   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n+   \"Operator '===' must be spaced. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n+   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 50\",\n+   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 50\",\n+   \"Missing semicolon. File: js-aofs-nithindenkada/object_equals.js Line: 50\",\n+   \"Expected space(s) after \\\"if\\\". File: js-aofs-nithindenkada/object_equals.js Line: 54\",\n+   \"Expected '===' and instead saw '=='. File: js-aofs-nithindenkada/object_equals.js Line: 54\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS nithindenkada object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":26,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":32,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":36,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":35,"failureDetails":[{"matcherResult":{"actual":["Assignment to function parameter 'similers'. File: js-aofs-omkardalu/categorise.js Line: 35"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Assignment to function parameter 'similers'. File: js-aofs-omkardalu/categorise.js Line: 35\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Assignment to function parameter 'similers'. File: js-aofs-omkardalu/categorise.js Line: 35\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS omkardalu categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":29,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:32\n  if (firstArray.length !== secondArray.length) {\n                 ^\n\nTypeError: Cannot read properties of null (reading 'length')\n    at check (evalmachine.<anonymous>:32:18)\n    at areTheyEqual (evalmachine.<anonymous>:42:8)\n    at evalmachine.<anonymous>:58:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS omkardalu array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:32\n  if (firstArray.length !== secondArray.length) {\n                 ^\n\nTypeError: Cannot read properties of undefined (reading 'length')\n    at check (evalmachine.<anonymous>:32:18)\n    at areTheyEqual (evalmachine.<anonymous>:42:8)\n    at evalmachine.<anonymous>:58:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS omkardalu array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:32\n  if (firstArray.length !== secondArray.length) {\n                 ^\n\nTypeError: Cannot read properties of undefined (reading 'length')\n    at check (evalmachine.<anonymous>:32:18)\n    at areTheyEqual (evalmachine.<anonymous>:42:8)\n    at evalmachine.<anonymous>:58:13\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)"],"fullName":"JS-AOFS omkardalu array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":28,"failureDetails":[{"matcherResult":{"actual":["More than 1 blank line not allowed. File: js-aofs-omkardalu/array_equals.js Line: 57"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"More than 1 blank line not allowed. File: js-aofs-omkardalu/array_equals.js Line: 57\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"More than 1 blank line not allowed. File: js-aofs-omkardalu/array_equals.js Line: 57\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS omkardalu array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:57\nconsole.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                         ^\n\nReferenceError: ARRAY_1 is not defined\n    at evalmachine.<anonymous>:57:26\n    at Script.runInContext (node:vm:133:12)\n    at Object.runInContext (/home/runner/work/test-suite/test-suite/test/test.js:38:33)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)"],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":31,"failureDetails":[{"matcherResult":{"actual":["Function has too many lines (17). Maximum allowed is 15. File: js-aofs-omkardalu/object_equals.js Line: 40"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Function has too many lines (17). Maximum allowed is 15. File: js-aofs-omkardalu/object_equals.js Line: 40\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Function has too many lines (17). Maximum allowed is 15. File: js-aofs-omkardalu/object_equals.js Line: 40\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS omkardalu object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":37,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":35,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":26,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":34,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":29,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":31,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', age: 20};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', age: 20};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', age: 20};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', age: 20};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', age: 20};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', marks:{maths: 100, science: 90}};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":6,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', marks:{maths: 100, science: 90}};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', marks: null};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', marks: undefined};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', marks: undefined};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Raju', address: {location: 'Hyderabad'}};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = null;\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = undefined;\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = undefined;\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = {0:1};\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n} else if (OBJECT_1 === undefined || OBJECT_2 = [1];\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid left-hand side in assignment\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":36,"failureDetails":[{"matcherResult":{"actual":["This line has a length of 93. Maximum allowed is 80. File: js-aofs-sampathkumarreddy123/object_equals.js Line: 50"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"This line has a length of 93. Maximum allowed is 80. File: js-aofs-sampathkumarreddy123/object_equals.js Line: 50\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"This line has a length of 93. Maximum allowed is 80. File: js-aofs-sampathkumarreddy123/object_equals.js Line: 50\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":23,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":30,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":23,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":42,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":38,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":24,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":40,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":38,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":5,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:46\n  return false;\n  ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:34:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":11,"failureDetails":[{"matcherResult":{"actual":["Unnecessary 'else' after 'return'. File: js-aofs-suneethalokarapu/object_equals.js Line: 46"],"expected":[],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Unnecessary 'else' after 'return'. File: js-aofs-suneethalokarapu/object_equals.js Line: 46\",\n+ ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 3\n\n- Array []\n+ Array [\n+   \"Unnecessary 'else' after 'return'. File: js-aofs-suneethalokarapu/object_equals.js Line: 46\",\n+ ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:79:30)"],"fullName":"JS-AOFS suneethalokarapu object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log true when given two deep arrays are equal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two deep arrays are equal"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when ARRAY_1=undefined and ARRAY_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=null"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when ARRAY_1=[1] and ARRAY_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1=[1] and ARRAY_2={0:1}"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when ARRAY_1={0:1} and ARRAY_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when ARRAY_1={0:1} and ARRAY_2=[1]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1=undefined and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=undefined and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={} and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={} and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1=undefined and OBJECT_2=undefined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=undefined and OBJECT_2=undefined"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1=[1] and OBJECT_2={0:1}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1=[1] and OBJECT_2={0:1}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={0:1} and OBJECT_2=[1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={0:1} and OBJECT_2=[1]"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should follow coding conventions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should follow coding conventions"}],"endTime":1724748951484,"message":"  ● JS-AOFS › Amarendra7062 › even_odd › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 16\n\n    - Array []\n    + Array [\n    +   \"Expected a function expression. File: js-aofs-Amarendra7062/even_odd.js Line: 18\",\n    +   \"Expected indentation of 2 spaces but found 0. File: js-aofs-Amarendra7062/even_odd.js Line: 19\",\n    +   \"Expected space(s) after \\\"for\\\". File: js-aofs-Amarendra7062/even_odd.js Line: 20\",\n    +   \"Expected indentation of 2 spaces but found 0. File: js-aofs-Amarendra7062/even_odd.js Line: 20\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/even_odd.js Line: 20\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/even_odd.js Line: 21\",\n    +   \"Expected space(s) after \\\"if\\\". File: js-aofs-Amarendra7062/even_odd.js Line: 21\",\n    +   \"Operator '%' must be spaced. File: js-aofs-Amarendra7062/even_odd.js Line: 21\",\n    +   \"Expected indentation of 6 spaces but found 8. File: js-aofs-Amarendra7062/even_odd.js Line: 22\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Amarendra7062/even_odd.js Line: 23\",\n    +   \"Expected indentation of 4 spaces but found 7. File: js-aofs-Amarendra7062/even_odd.js Line: 24\",\n    +   \"Expected indentation of 6 spaces but found 4. File: js-aofs-Amarendra7062/even_odd.js Line: 25\",\n    +   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Amarendra7062/even_odd.js Line: 26\",\n    +   \"Expected indentation of 0 spaces but found 2. File: js-aofs-Amarendra7062/even_odd.js Line: 30\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Amarendra7062 › categorise › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 29\n\n    - Array []\n    + Array [\n    +   \"Missing semicolon. File: js-aofs-Amarendra7062/categorise.js Line: 2\",\n    +   \"Expected a function expression. File: js-aofs-Amarendra7062/categorise.js Line: 25\",\n    +   \"Function 'categorizeAndSort' has too many lines (29). Maximum allowed is 15. File: js-aofs-Amarendra7062/categorise.js Line: 25\",\n    +   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/categorise.js Line: 27\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 28\",\n    +   \"'number' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/categorise.js Line: 28\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 29\",\n    +   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/categorise.js Line: 30\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 31\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 32\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/categorise.js Line: 34\",\n    +   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/categorise.js Line: 35\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 36\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/categorise.js Line: 38\",\n    +   \"This line has a length of 84. Maximum allowed is 80. File: js-aofs-Amarendra7062/categorise.js Line: 39\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 39\",\n    +   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/categorise.js Line: 40\",\n    +   \"Expected indentation of 8 spaces but found 14. File: js-aofs-Amarendra7062/categorise.js Line: 41\",\n    +   \"'temp' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/categorise.js Line: 41\",\n    +   \"Expected indentation of 8 spaces but found 14. File: js-aofs-Amarendra7062/categorise.js Line: 42\",\n    +   \"Expected indentation of 8 spaces but found 14. File: js-aofs-Amarendra7062/categorise.js Line: 43\",\n    +   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/categorise.js Line: 44\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 45\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/categorise.js Line: 47\",\n    +   \"'result' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/categorise.js Line: 47\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/categorise.js Line: 49\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/categorise.js Line: 54\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Amarendra7062 › entries › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 29\n\n    - Array []\n    + Array [\n    +   \"A space is required after '{'. File: js-aofs-Amarendra7062/entries.js Line: 3\",\n    +   \"A space is required before '}'. File: js-aofs-Amarendra7062/entries.js Line: 3\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/entries.js Line: 7\",\n    +   \"Expected a function expression. File: js-aofs-Amarendra7062/entries.js Line: 23\",\n    +   \"There should be no space after this paren. File: js-aofs-Amarendra7062/entries.js Line: 23\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 24\",\n    +   \"Operator '=' must be spaced. File: js-aofs-Amarendra7062/entries.js Line: 24\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 25\",\n    +   \"Operator '=' must be spaced. File: js-aofs-Amarendra7062/entries.js Line: 25\",\n    +   \"Expected indentation of 2 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 26\",\n    +   \"Expected space(s) after \\\"for\\\". File: js-aofs-Amarendra7062/entries.js Line: 26\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 27\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 28\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 29\",\n    +   \"Expected space(s) after \\\"for\\\". File: js-aofs-Amarendra7062/entries.js Line: 29\",\n    +   \"Operator '<' must be spaced. File: js-aofs-Amarendra7062/entries.js Line: 29\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 30\",\n    +   \"There should be no space after '['. File: js-aofs-Amarendra7062/entries.js Line: 30\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 31\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/entries.js Line: 32\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 33\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/entries.js Line: 34\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/entries.js Line: 34\",\n    +   \"Expected indentation of 0 spaces but found 2. File: js-aofs-Amarendra7062/entries.js Line: 35\",\n    +   \"Expected indentation of 0 spaces but found 2. File: js-aofs-Amarendra7062/entries.js Line: 36\",\n    +   \"There should be no space before this paren. File: js-aofs-Amarendra7062/entries.js Line: 36\",\n    +   \"Newline required at end of file but not found. File: js-aofs-Amarendra7062/entries.js Line: 36\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Amarendra7062 › remove_adjacent_spaces › should remove extra spaces when TEXT contains only 1 extra space\n\n    evalmachine.<anonymous>:42\n              result += char;\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at removeAdjacentSpaces (evalmachine.<anonymous>:42:18)\n      at evalmachine.<anonymous>:62:15\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › remove_adjacent_spaces › should remove extra spaces when TEXT contains multiple extra spaces\n\n    evalmachine.<anonymous>:42\n              result += char;\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at removeAdjacentSpaces (evalmachine.<anonymous>:42:18)\n      at evalmachine.<anonymous>:62:15\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › remove_adjacent_spaces › should remove extra spaces when TEXT contains only space\n\n    evalmachine.<anonymous>:38\n                   result += ' ';\n                          ^\n\n    TypeError: Assignment to constant variable.\n\n      at removeAdjacentSpaces (evalmachine.<anonymous>:38:23)\n      at evalmachine.<anonymous>:62:15\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › remove_adjacent_spaces › should remove extra spaces when TEXT is a single word\n\n    evalmachine.<anonymous>:42\n              result += char;\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at removeAdjacentSpaces (evalmachine.<anonymous>:42:18)\n      at evalmachine.<anonymous>:62:15\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › remove_adjacent_spaces › should remove extra spaces when TEXT is a single character\n\n    evalmachine.<anonymous>:42\n              result += char;\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at removeAdjacentSpaces (evalmachine.<anonymous>:42:18)\n      at evalmachine.<anonymous>:62:15\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › remove_adjacent_spaces › should remove extra spaces when TEXT has no spaces\n\n    evalmachine.<anonymous>:42\n              result += char;\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at removeAdjacentSpaces (evalmachine.<anonymous>:42:18)\n      at evalmachine.<anonymous>:62:15\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › remove_adjacent_spaces › should remove extra spaces when TEXT has leading spaces\n\n    evalmachine.<anonymous>:38\n                   result += ' ';\n                          ^\n\n    TypeError: Assignment to constant variable.\n\n      at removeAdjacentSpaces (evalmachine.<anonymous>:38:23)\n      at evalmachine.<anonymous>:62:15\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › remove_adjacent_spaces › should remove extra spaces when TEXT  has leading & trailing spaces\n\n    evalmachine.<anonymous>:38\n                   result += ' ';\n                          ^\n\n    TypeError: Assignment to constant variable.\n\n      at removeAdjacentSpaces (evalmachine.<anonymous>:38:23)\n      at evalmachine.<anonymous>:62:15\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › remove_adjacent_spaces › should remove extra spaces when TEXT has trailing spaces\n\n    evalmachine.<anonymous>:42\n              result += char;\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at removeAdjacentSpaces (evalmachine.<anonymous>:42:18)\n      at evalmachine.<anonymous>:62:15\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › remove_adjacent_spaces › should remove extra spaces when TEXT has mixed spaces & tabs\n\n    evalmachine.<anonymous>:42\n              result += char;\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at removeAdjacentSpaces (evalmachine.<anonymous>:42:18)\n      at evalmachine.<anonymous>:62:15\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › remove_adjacent_spaces › should remove extra spaces when TEXT has mixed spaces & newlines\n\n    evalmachine.<anonymous>:66\n              result += char;\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at removeAdjacentSpaces (evalmachine.<anonymous>:66:18)\n      at evalmachine.<anonymous>:86:15\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › remove_adjacent_spaces › should remove extra spaces when TEXT is numeric string with spaces\n\n    evalmachine.<anonymous>:42\n              result += char;\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at removeAdjacentSpaces (evalmachine.<anonymous>:42:18)\n      at evalmachine.<anonymous>:62:15\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › remove_adjacent_spaces › should remove extra spaces when TEXT is multi lingual string with spaces\n\n    evalmachine.<anonymous>:38\n                   result += ' ';\n                          ^\n\n    TypeError: Assignment to constant variable.\n\n      at removeAdjacentSpaces (evalmachine.<anonymous>:38:23)\n      at evalmachine.<anonymous>:62:15\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › remove_adjacent_spaces › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 46\n\n    - Array []\n    + Array [\n    +   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 2\",\n    +   \"Strings must use singlequote. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 2\",\n    +   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 3\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 5\",\n    +   \"Expected a function expression. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 29\",\n    +   \"Function 'removeAdjacentSpaces' has too many lines (32). Maximum allowed is 15. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 29\",\n    +   \"Unexpected space before function parentheses. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 29\",\n    +   \"Multiple spaces found before '{'. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 33\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 34\",\n    +   \"There should be no space after '['. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 34\",\n    +   \"There should be no space before ']'. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 34\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 35\",\n    +   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 36\",\n    +   \"Expected indentation of 8 spaces but found 15. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 37\",\n    +   \"'result' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 37\",\n    +   \"Expected indentation of 8 spaces but found 14. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 38\",\n    +   \"'spaceFound' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 38\",\n    +   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 39\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 40\",\n    +   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 41\",\n    +   \"'result' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 41\",\n    +   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 42\",\n    +   \"'spaceFound' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 42\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 43\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 44\",\n    +   \"'index' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 44\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 48\",\n    +   \"Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 50\",\n    +   \"Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 51\",\n    +   \"Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 51\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 52\",\n    +   \"'text_1' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 52\",\n    +   \"Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 52\",\n    +   \"Expected indentation of 2 spaces but found 3. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 54\",\n    +   \"Identifier 'text_1' is not in camel case. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 55\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 56\",\n    +   \"'finalResult' is constant. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 56\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 57\",\n    +   \"Expected indentation of 2 spaces but found 3. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 59\",\n    +   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 61\",\n    +   \"There should be no space before this paren. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 61\",\n    +   \"Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 62\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 63\",\n    +   \"Newline required at end of file but not found. File: js-aofs-Amarendra7062/remove_adjacent_spaces.js Line: 63\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Amarendra7062 › tribonacci › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 18\n\n    - Array []\n    + Array [\n    +   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/tribonacci.js Line: 7\",\n    +   \"This line has a length of 101. Maximum allowed is 80. File: js-aofs-Amarendra7062/tribonacci.js Line: 23\",\n    +   \"Expected a function expression. File: js-aofs-Amarendra7062/tribonacci.js Line: 23\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/tribonacci.js Line: 23\",\n    +   \"Expected space(s) after \\\"if\\\". File: js-aofs-Amarendra7062/tribonacci.js Line: 24\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/tribonacci.js Line: 24\",\n    +   \"Expected indentation of 4 spaces but found 7. File: js-aofs-Amarendra7062/tribonacci.js Line: 25\",\n    +   \"Expected { after 'if' condition. File: js-aofs-Amarendra7062/tribonacci.js Line: 25\",\n    +   \"This line has a length of 131. Maximum allowed is 80. File: js-aofs-Amarendra7062/tribonacci.js Line: 26\",\n    +   \"Expected indentation of 2 spaces but found 3. File: js-aofs-Amarendra7062/tribonacci.js Line: 26\",\n    +   \"A space is required after ','. File: js-aofs-Amarendra7062/tribonacci.js Line: 26\",\n    +   \"There should be no space before ','. File: js-aofs-Amarendra7062/tribonacci.js Line: 26\",\n    +   \"There should be no space before this paren. File: js-aofs-Amarendra7062/tribonacci.js Line: 26\",\n    +   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/tribonacci.js Line: 28\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/tribonacci.js Line: 28\",\n    +   \"Newline required at end of file but not found. File: js-aofs-Amarendra7062/tribonacci.js Line: 28\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Amarendra7062 › array_equals › should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]\n\n    evalmachine.<anonymous>:36\n           for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                    ^\n\n    TypeError: Assignment to constant variable.\n\n      at arrayEqual (evalmachine.<anonymous>:36:65)\n      at evalmachine.<anonymous>:55:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › array_equals › should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]\n\n    evalmachine.<anonymous>:36\n           for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                    ^\n\n    TypeError: Assignment to constant variable.\n\n      at arrayEqual (evalmachine.<anonymous>:36:65)\n      at evalmachine.<anonymous>:55:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › array_equals › should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]\n\n    evalmachine.<anonymous>:36\n           for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                    ^\n\n    TypeError: Assignment to constant variable.\n\n      at arrayEqual (evalmachine.<anonymous>:36:65)\n      at evalmachine.<anonymous>:55:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › array_equals › should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]\n\n    evalmachine.<anonymous>:36\n           for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                    ^\n\n    TypeError: Assignment to constant variable.\n\n      at arrayEqual (evalmachine.<anonymous>:36:65)\n      at evalmachine.<anonymous>:55:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › array_equals › should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]\n\n    evalmachine.<anonymous>:36\n           for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                    ^\n\n    TypeError: Assignment to constant variable.\n\n      at arrayEqual (evalmachine.<anonymous>:36:65)\n      at evalmachine.<anonymous>:55:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › array_equals › should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]\n\n    evalmachine.<anonymous>:36\n           for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                    ^\n\n    TypeError: Assignment to constant variable.\n\n      at arrayEqual (evalmachine.<anonymous>:36:65)\n      at evalmachine.<anonymous>:55:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › array_equals › should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]\n\n    evalmachine.<anonymous>:36\n           for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                    ^\n\n    TypeError: Assignment to constant variable.\n\n      at arrayEqual (evalmachine.<anonymous>:36:65)\n      at evalmachine.<anonymous>:55:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › array_equals › should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]\n\n    evalmachine.<anonymous>:36\n           for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                    ^\n\n    TypeError: Assignment to constant variable.\n\n      at arrayEqual (evalmachine.<anonymous>:36:65)\n      at evalmachine.<anonymous>:55:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › array_equals › should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]\n\n    evalmachine.<anonymous>:36\n           for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                    ^\n\n    TypeError: Assignment to constant variable.\n\n      at arrayEqual (evalmachine.<anonymous>:36:65)\n      at evalmachine.<anonymous>:55:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › array_equals › should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]\n\n    evalmachine.<anonymous>:36\n           for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                    ^\n\n    TypeError: Assignment to constant variable.\n\n      at arrayEqual (evalmachine.<anonymous>:36:65)\n      at evalmachine.<anonymous>:55:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › array_equals › should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]\n\n    evalmachine.<anonymous>:36\n           for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                    ^\n\n    TypeError: Assignment to constant variable.\n\n      at arrayEqual (evalmachine.<anonymous>:36:65)\n      at evalmachine.<anonymous>:55:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › array_equals › should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]\n\n    evalmachine.<anonymous>:36\n           for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                    ^\n\n    TypeError: Assignment to constant variable.\n\n      at arrayEqual (evalmachine.<anonymous>:36:65)\n      at evalmachine.<anonymous>:55:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › array_equals › should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]\n\n    evalmachine.<anonymous>:36\n           for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                    ^\n\n    TypeError: Assignment to constant variable.\n\n      at arrayEqual (evalmachine.<anonymous>:36:65)\n      at evalmachine.<anonymous>:55:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › array_equals › should log true when given two very large arrays with same data\n\n    evalmachine.<anonymous>:36\n           for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                    ^\n\n    TypeError: Assignment to constant variable.\n\n      at arrayEqual (evalmachine.<anonymous>:36:65)\n      at evalmachine.<anonymous>:55:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › array_equals › should log true when given two deep arrays are equal\n\n    evalmachine.<anonymous>:36\n           for(const index = 0; index< booleanArrayOne.length; index++) {\n                                                                    ^\n\n    TypeError: Assignment to constant variable.\n\n      at arrayEqual (evalmachine.<anonymous>:36:65)\n      at arrayEqual (evalmachine.<anonymous>:38:17)\n      at arrayEqual (evalmachine.<anonymous>:38:17)\n      at arrayEqual (evalmachine.<anonymous>:38:17)\n      at arrayEqual (evalmachine.<anonymous>:38:17)\n      at arrayEqual (evalmachine.<anonymous>:38:17)\n      at arrayEqual (evalmachine.<anonymous>:38:17)\n      at arrayEqual (evalmachine.<anonymous>:38:17)\n      at arrayEqual (evalmachine.<anonymous>:38:17)\n      at arrayEqual (evalmachine.<anonymous>:38:17)\n\n  ● JS-AOFS › Amarendra7062 › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 47\n\n    - Array []\n    + Array [\n    +   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/array_equals.js Line: 31\",\n    +   \"Expected a function expression. File: js-aofs-Amarendra7062/array_equals.js Line: 31\",\n    +   \"Function 'arrayEqual' has too many lines (24). Maximum allowed is 15. File: js-aofs-Amarendra7062/array_equals.js Line: 31\",\n    +   \"This line has a length of 122. Maximum allowed is 80. File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n    +   \"Expected space(s) after \\\"if\\\". File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n    +   \"Operator '&&' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n    +   \"Operator '!==' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n    +   \"Operator '&&' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n    +   \"Operator '&&' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 32\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/array_equals.js Line: 33\",\n    +   \"Expected space(s) after \\\"if\\\". File: js-aofs-Amarendra7062/array_equals.js Line: 33\",\n    +   \"Expected indentation of 6 spaces but found 9. File: js-aofs-Amarendra7062/array_equals.js Line: 34\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Amarendra7062/array_equals.js Line: 35\",\n    +   \"Expected indentation of 4 spaces but found 7. File: js-aofs-Amarendra7062/array_equals.js Line: 36\",\n    +   \"Expected space(s) after \\\"for\\\". File: js-aofs-Amarendra7062/array_equals.js Line: 36\",\n    +   \"Operator '<' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 36\",\n    +   \"'index' is constant. File: js-aofs-Amarendra7062/array_equals.js Line: 36\",\n    +   \"Expected indentation of 6 spaces but found 10. File: js-aofs-Amarendra7062/array_equals.js Line: 37\",\n    +   \"There should be no space after '['. File: js-aofs-Amarendra7062/array_equals.js Line: 37\",\n    +   \"Operator '===' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 37\",\n    +   \"Operator '===' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 37\",\n    +   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 37\",\n    +   \"Expected indentation of 8 spaces but found 11. File: js-aofs-Amarendra7062/array_equals.js Line: 38\",\n    +   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 38\",\n    +   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 38\",\n    +   \"Expected indentation of 10 spaces but found 12. File: js-aofs-Amarendra7062/array_equals.js Line: 39\",\n    +   \"Expected indentation of 8 spaces but found 10. File: js-aofs-Amarendra7062/array_equals.js Line: 40\",\n    +   \"Expected indentation of 6 spaces but found 7. File: js-aofs-Amarendra7062/array_equals.js Line: 41\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Amarendra7062/array_equals.js Line: 41\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/array_equals.js Line: 41\",\n    +   \"Operator '!==' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 42\",\n    +   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 42\",\n    +   \"Expected indentation of 8 spaces but found 9. File: js-aofs-Amarendra7062/array_equals.js Line: 43\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Amarendra7062/array_equals.js Line: 47\",\n    +   \"Operator '===' must be spaced. File: js-aofs-Amarendra7062/array_equals.js Line: 48\",\n    +   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Amarendra7062/array_equals.js Line: 49\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Amarendra7062/array_equals.js Line: 50\",\n    +   \"Unnecessary 'else' after 'return'. File: js-aofs-Amarendra7062/array_equals.js Line: 51\",\n    +   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Amarendra7062/array_equals.js Line: 52\",\n    +   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/array_equals.js Line: 54\",\n    +   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Amarendra7062/array_equals.js Line: 55\",\n    +   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 55\",\n    +   \"There should be no space before this paren. File: js-aofs-Amarendra7062/array_equals.js Line: 55\",\n    +   \"Newline required at end of file but not found. File: js-aofs-Amarendra7062/array_equals.js Line: 55\",\n    +   \"Missing semicolon. File: js-aofs-Amarendra7062/array_equals.js Line: 55\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log false when OBJECT_1=undefined and OBJECT_2={}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log false when OBJECT_1={} and OBJECT_2=undefined\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    evalmachine.<anonymous>:34\n            value++;\n                 ^\n\n    TypeError: Assignment to constant variable.\n\n      at objects_Equal (evalmachine.<anonymous>:34:14)\n      at evalmachine.<anonymous>:59:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Amarendra7062 › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 67\n\n    - Array []\n    + Array [\n    +   \"A space is required after '{'. File: js-aofs-Amarendra7062/object_equals.js Line: 2\",\n    +   \"A space is required before '}'. File: js-aofs-Amarendra7062/object_equals.js Line: 2\",\n    +   \"Missing semicolon. File: js-aofs-Amarendra7062/object_equals.js Line: 2\",\n    +   \"A space is required after '{'. File: js-aofs-Amarendra7062/object_equals.js Line: 3\",\n    +   \"A space is required before '}'. File: js-aofs-Amarendra7062/object_equals.js Line: 3\",\n    +   \"Missing semicolon. File: js-aofs-Amarendra7062/object_equals.js Line: 3\",\n    +   \"Expected a function expression. File: js-aofs-Amarendra7062/object_equals.js Line: 29\",\n    +   \"Function 'objects_Equal' has too many lines (29). Maximum allowed is 15. File: js-aofs-Amarendra7062/object_equals.js Line: 29\",\n    +   \"Identifier 'objects_Equal' is not in camel case. File: js-aofs-Amarendra7062/object_equals.js Line: 29\",\n    +   \"Unexpected space before function parentheses. File: js-aofs-Amarendra7062/object_equals.js Line: 29\",\n    +   \"A space is required after ','. File: js-aofs-Amarendra7062/object_equals.js Line: 29\",\n    +   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/object_equals.js Line: 30\",\n    +   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/object_equals.js Line: 31\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 32\",\n    +   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/object_equals.js Line: 32\",\n    +   \"'key' is already declared in the upper scope on line 31 column 10. File: js-aofs-Amarendra7062/object_equals.js Line: 32\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 33\",\n    +   \"'value' is constant. File: js-aofs-Amarendra7062/object_equals.js Line: 33\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 34\",\n    +   \"Expected indentation of 2 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 35\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 36\",\n    +   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/object_equals.js Line: 36\",\n    +   \"'key' is already declared in the upper scope on line 31 column 10. File: js-aofs-Amarendra7062/object_equals.js Line: 36\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 37\",\n    +   \"'value2' is constant. File: js-aofs-Amarendra7062/object_equals.js Line: 37\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 38\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 39\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 40\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 41\",\n    +   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/object_equals.js Line: 42\",\n    +   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Amarendra7062/object_equals.js Line: 42\",\n    +   \"'key' is already declared in the upper scope on line 31 column 10. File: js-aofs-Amarendra7062/object_equals.js Line: 42\",\n    +   \"Expected indentation of 4 spaces but found 9. File: js-aofs-Amarendra7062/object_equals.js Line: 43\",\n    +   \"Unexpected space after unary operator '!'. File: js-aofs-Amarendra7062/object_equals.js Line: 43\",\n    +   \"There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 43\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Amarendra7062/object_equals.js Line: 44\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 45\",\n    +   \"Expected indentation of 4 spaces but found 10. File: js-aofs-Amarendra7062/object_equals.js Line: 46\",\n    +   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 46\",\n    +   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 46\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n    +   \"Unexpected space after unary operator '!'. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n    +   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n    +   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n    +   \"There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n    +   \"There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 47\",\n    +   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Amarendra7062/object_equals.js Line: 48\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Amarendra7062/object_equals.js Line: 49\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 50\",\n    +   \"Expected indentation of 6 spaces but found 13. File: js-aofs-Amarendra7062/object_equals.js Line: 51\",\n    +   \"Unexpected if as the only statement in an else block. File: js-aofs-Amarendra7062/object_equals.js Line: 51\",\n    +   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 51\",\n    +   \"Unexpected whitespace before property key. File: js-aofs-Amarendra7062/object_equals.js Line: 51\",\n    +   \"There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 51\",\n    +   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Amarendra7062/object_equals.js Line: 52\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Amarendra7062/object_equals.js Line: 53\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Amarendra7062/object_equals.js Line: 54\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Amarendra7062/object_equals.js Line: 55\",\n    +   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Amarendra7062/object_equals.js Line: 56\",\n    +   \"A space is required after ','. File: js-aofs-Amarendra7062/object_equals.js Line: 58\",\n    +   \"There should be no space before this paren. File: js-aofs-Amarendra7062/object_equals.js Line: 58\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/object_equals.js Line: 58\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Amarendra7062/object_equals.js Line: 59\",\n    +   \"Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-Amarendra7062/object_equals.js Line: 59\",\n    +   \"Newline required at end of file but not found. File: js-aofs-Amarendra7062/object_equals.js Line: 59\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1, 2, 3];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1, 2, 3];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1, 2, 3];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1, 2, 3];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1, 2, 3];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1, '2', 3];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1, '2', 3];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1, 2, 3, [4, 5, 6]];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1,[3],[2]];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1, 2, 3, [4, 6]];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1, 2, null];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1, true, 3];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1, undefined, 3];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log true when given two very large arrays with same data\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = new Array(1000).fill(0).map((_, i)=>i);\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when given two very large arrays with different data\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = new Array(1000).fill(0).map((_, i)=>i);\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log true when given two arrays are null\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = null;\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log true when given two deep arrays are equal\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [[[[[[[[[[[[1]]]]]]]]]]]];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when ARRAY_1=undefined and ARRAY_2=null\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = undefined;\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = undefined;\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when ARRAY_1=[1] and ARRAY_2={0:1}\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = [1];\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should log false when ARRAY_1={0:1} and ARRAY_2=[1]\n\n    evalmachine.<anonymous>:46\n    result = ARRAY_1 = {0:1};\n                     ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:46:18\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"'result' is never reassigned. Use 'const' instead. File: js-aofs-Chandiniruttala/array_equals.js Line: 45\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {name: 'Ram', age: 20};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {name: 'Ravi', age: 20};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {username: 'Ram', age: 20};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {name: 'Ram', age: 20, location: 'Hyderabad'};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {age: 20, name: 'Ram'};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log true when OBJECT_1={} and OBJECT_2={}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {name: 'Ram'};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {name: 'Ram', marks:{maths: 100, science: 90}};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {name: 'Ram', marks:{maths: 90, science: 90}};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {name: 'Ram', marks: null};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {name: 'Ram', marks: undefined};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {name: 'Ram'};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {name: 'Raju', address: null};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log true when OBJECT_1=null and OBJECT_2=null\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = null;\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log false when OBJECT_1=undefined and OBJECT_2={}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = undefined;\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log false when OBJECT_1={} and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log true when OBJECT_1=undefined and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = undefined;\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = [1];\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    evalmachine.<anonymous>:47\n    result = OBJECT_1 = {0:1};\n                      ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:19\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Chandiniruttala › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 7\n\n    - Array []\n    + Array [\n    +   \"A space is required after '{'. File: js-aofs-Chandiniruttala/object_equals.js Line: 28\",\n    +   \"Missing space before value for key '0'. File: js-aofs-Chandiniruttala/object_equals.js Line: 28\",\n    +   \"A space is required before '}'. File: js-aofs-Chandiniruttala/object_equals.js Line: 28\",\n    +   \"This line has a length of 126. Maximum allowed is 80. File: js-aofs-Chandiniruttala/object_equals.js Line: 32\",\n    +   \"'result' is never reassigned. Use 'const' instead. File: js-aofs-Chandiniruttala/object_equals.js Line: 46\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Charantej21 › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 4\n\n    - Array []\n    + Array [\n    +   \"Function has too many lines (17). Maximum allowed is 15. File: js-aofs-Charantej21/array_equals.js Line: 31\",\n    +   \"This line has a length of 115. Maximum allowed is 80. File: js-aofs-Charantej21/array_equals.js Line: 34\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Charantej21 › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Charantej21 › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Charantej21 › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"This line has a length of 153. Maximum allowed is 80. File: js-aofs-Charantej21/object_equals.js Line: 36\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › G-Rajini › object_equals › should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › G-Rajini › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › G-Rajini › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › G-Rajini › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 5\n\n    - Array []\n    + Array [\n    +   \"This line has a length of 83. Maximum allowed is 80. File: js-aofs-G-Rajini/object_equals.js Line: 67\",\n    +   \"This line has 2 statements. Maximum allowed is 1. File: js-aofs-G-Rajini/object_equals.js Line: 69\",\n    +   \"Block must not be padded by blank lines. File: js-aofs-G-Rajini/object_equals.js Line: 72\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › GOWRIPRASADTW › categorise › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 10\n\n    - Array []\n    + Array [\n    +   \"Expected indentation of 2 spaces but found 0. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 28\",\n    +   \"Expected indentation of 2 spaces but found 0. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 41\",\n    +   \"Expected indentation of 2 spaces but found 0. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 42\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 46\",\n    +   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 47\",\n    +   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 48\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 49\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/categorise.js Line: 50\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › GOWRIPRASADTW › array_equals › should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]\n\n    evalmachine.<anonymous>:40\n      if (array1.length !== array2.length) {\n                 ^\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\n      at arrayEqual (evalmachine.<anonymous>:40:14)\n      at evalmachine.<anonymous>:56:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › GOWRIPRASADTW › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 14\n\n    - Array []\n    + Array [\n    +   \"Expected a function expression. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 33\",\n    +   \"Function 'arrayEqual' has too many lines (23). Maximum allowed is 15. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 33\",\n    +   \"Unexpected space before function parentheses. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 33\",\n    +   \"Multiple spaces found before '{'. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 45\",\n    +   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 49\",\n    +   \"Unexpected if as the only statement in an else block. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 49\",\n    +   \"Expected indentation of 8 spaces but found 10. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 50\",\n    +   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 51\",\n    +   \"Trailing spaces not allowed. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 52\",\n    +   \"Trailing spaces not allowed. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 53\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 54\",\n    +   \"Trailing spaces not allowed. File: js-aofs-GOWRIPRASADTW/array_equals.js Line: 55\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › GOWRIPRASADTW › object_equals › should log false when OBJECT_1=undefined and OBJECT_2={}\n\n    evalmachine.<anonymous>:39\n        if (Object.keys(object1).length !== Object.keys(object2).length) {\n                   ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at objectEqual (evalmachine.<anonymous>:39:16)\n      at evalmachine.<anonymous>:56:20\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › GOWRIPRASADTW › object_equals › should log false when OBJECT_1={} and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:39\n        if (Object.keys(object1).length !== Object.keys(object2).length) {\n                                                   ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at objectEqual (evalmachine.<anonymous>:39:48)\n      at evalmachine.<anonymous>:56:20\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › GOWRIPRASADTW › object_equals › should log true when OBJECT_1=undefined and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:39\n        if (Object.keys(object1).length !== Object.keys(object2).length) {\n                   ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at objectEqual (evalmachine.<anonymous>:39:16)\n      at evalmachine.<anonymous>:56:20\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › GOWRIPRASADTW › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › GOWRIPRASADTW › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › GOWRIPRASADTW › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 29\n\n    - Array []\n    + Array [\n    +   \"Expected a function expression. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 32\",\n    +   \"Function 'objectEqual' has too many lines (24). Maximum allowed is 15. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 32\",\n    +   \"Unexpected space before function parentheses. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 32\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 39\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 40\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 41\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 42\",\n    +   \"'element' is never reassigned. Use 'const' instead. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 42\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 43\",\n    +   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 44\",\n    +   \"Multiple spaces found before '{'. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 44\",\n    +   \"Expected indentation of 8 spaces but found 10. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 45\",\n    +   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 46\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 47\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 47\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 48\",\n    +   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 49\",\n    +   \"Unexpected if as the only statement in an else block. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 49\",\n    +   \"Expected indentation of 8 spaces but found 10. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 50\",\n    +   \"Missing semicolon. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 50\",\n    +   \"Expected indentation of 6 spaces but found 8. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 51\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 52\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 53\",\n    +   \"Expected indentation of 2 spaces but found 6. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 54\",\n    +   \"Expected indentation of 0 spaces but found 7. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 56\",\n    +   \"Newline required at end of file but not found. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 56\",\n    +   \"Missing semicolon. File: js-aofs-GOWRIPRASADTW/object_equals.js Line: 56\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › HemPradeepthummala › tribonacci › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 4\n\n    - Array []\n    + Array [\n    +   \"This line has a length of 101. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/tribonacci.js Line: 27\",\n    +   \"This line has a length of 90. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/tribonacci.js Line: 35\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › HemPradeepthummala › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 6\n\n    - Array []\n    + Array [\n    +   \"Function has a complexity of 27. Maximum allowed is 20. File: js-aofs-HemPradeepthummala/array_equals.js Line: 33\",\n    +   \"This line has a length of 251. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/array_equals.js Line: 34\",\n    +   \"This line has a length of 133. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/array_equals.js Line: 36\",\n    +   \"This line has a length of 176. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/array_equals.js Line: 39\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › HemPradeepthummala › object_equals › should log false when OBJECT_1=undefined and OBJECT_2={}\n\n    evalmachine.<anonymous>:34\n      if ((object1 === null && object2 === null) || (object1 !== null && object2 !== null && Object.keys(object1).length === Object.keys(object2).length)) {\n                                                                                                    ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at compareObjects (evalmachine.<anonymous>:34:97)\n      at evalmachine.<anonymous>:51:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › HemPradeepthummala › object_equals › should log false when OBJECT_1={} and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:34\n      if ((object1 === null && object2 === null) || (object1 !== null && object2 !== null && Object.keys(object1).length === Object.keys(object2).length)) {\n                                                                                                                                    ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at compareObjects (evalmachine.<anonymous>:34:129)\n      at evalmachine.<anonymous>:51:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › HemPradeepthummala › object_equals › should log true when OBJECT_1=undefined and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:34\n      if ((object1 === null && object2 === null) || (object1 !== null && object2 !== null && Object.keys(object1).length === Object.keys(object2).length)) {\n                                                                                                    ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at compareObjects (evalmachine.<anonymous>:34:97)\n      at evalmachine.<anonymous>:51:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › HemPradeepthummala › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › HemPradeepthummala › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › HemPradeepthummala › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 5\n\n    - Array []\n    + Array [\n    +   \"Function has too many lines (18). Maximum allowed is 15. File: js-aofs-HemPradeepthummala/object_equals.js Line: 33\",\n    +   \"This line has a length of 152. Maximum allowed is 80. File: js-aofs-HemPradeepthummala/object_equals.js Line: 34\",\n    +   \"Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-HemPradeepthummala/object_equals.js Line: 52\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › JAGADEESH2004PJ › array_equals › should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   true,\n    +   false,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › JAGADEESH2004PJ › array_equals › should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   true,\n    +   false,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › JAGADEESH2004PJ › array_equals › should log true when given two deep arrays are equal\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   true,\n    +   false,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › JAGADEESH2004PJ › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"This line has a length of 128. Maximum allowed is 80. File: js-aofs-JAGADEESH2004PJ/array_equals.js Line: 33\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › JAGADEESH2004PJ › object_equals › should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   true,\n    +   false,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › JAGADEESH2004PJ › object_equals › should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   true,\n    +   false,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › JAGADEESH2004PJ › object_equals › should log true when OBJECT_1={} and OBJECT_2={}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   true,\n    +   false,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › JAGADEESH2004PJ › object_equals › should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   true,\n    +   false,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › JAGADEESH2004PJ › object_equals › should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   true,\n    +   false,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › JAGADEESH2004PJ › object_equals › should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   true,\n    +   false,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › JAGADEESH2004PJ › object_equals › should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   true,\n    +   false,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › JAGADEESH2004PJ › object_equals › should log true when OBJECT_1=undefined and OBJECT_2=undefined\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   true,\n    +   false,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › JAGADEESH2004PJ › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 5\n\n    - Array []\n    + Array [\n    +   \"Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations. File: js-aofs-JAGADEESH2004PJ/object_equals.js Line: 34\",\n    +   \"Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations. File: js-aofs-JAGADEESH2004PJ/object_equals.js Line: 34\",\n    +   \"There should be no space after this paren. File: js-aofs-JAGADEESH2004PJ/object_equals.js Line: 49\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › KARTHEEK-TAMADA › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 5\n\n    - Array []\n    + Array [\n    +   \"A space is required after '{'. File: js-aofs-KARTHEEK-TAMADA/object_equals.js Line: 4\",\n    +   \"A space is required before '}'. File: js-aofs-KARTHEEK-TAMADA/object_equals.js Line: 4\",\n    +   \"'lengthCheck' was used before it was defined. File: js-aofs-KARTHEEK-TAMADA/object_equals.js Line: 38\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › KalluriBhagyasree › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › KalluriBhagyasree › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › KalluriBhagyasree › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 4\n\n    - Array []\n    + Array [\n    +   \"'result' is never reassigned. Use 'const' instead. File: js-aofs-KalluriBhagyasree/object_equals.js Line: 31\",\n    +   \"This line has a length of 82. Maximum allowed is 80. File: js-aofs-KalluriBhagyasree/object_equals.js Line: 36\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Nithin7411 › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"'deepComparison' was used before it was defined. File: js-aofs-Nithin7411/array_equals.js Line: 43\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Nithin7411 › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Nithin7411 › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Nithin7411 › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 13\n\n    - Array []\n    + Array [\n    +   \"Function has too many lines (17). Maximum allowed is 15. File: js-aofs-Nithin7411/object_equals.js Line: 32\",\n    +   \"Missing space before function parentheses. File: js-aofs-Nithin7411/object_equals.js Line: 32\",\n    +   \"There should be no space after this paren. File: js-aofs-Nithin7411/object_equals.js Line: 32\",\n    +   \"'objectEqual' was used before it was defined. File: js-aofs-Nithin7411/object_equals.js Line: 40\",\n    +   \"Expected space(s) before \\\"else\\\". File: js-aofs-Nithin7411/object_equals.js Line: 43\",\n    +   \"There should be no space after this paren. File: js-aofs-Nithin7411/object_equals.js Line: 50\",\n    +   \"Missing space before opening brace. File: js-aofs-Nithin7411/object_equals.js Line: 50\",\n    +   \"Missing space before opening brace. File: js-aofs-Nithin7411/object_equals.js Line: 54\",\n    +   \"Missing semicolon. File: js-aofs-Nithin7411/object_equals.js Line: 66\",\n    +   \"There should be no space after this paren. File: js-aofs-Nithin7411/object_equals.js Line: 67\",\n    +   \"There should be no space after this paren. File: js-aofs-Nithin7411/object_equals.js Line: 67\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Pardhasaradhi031 › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"'getObjectValuesEqual' was used before it was defined. File: js-aofs-Pardhasaradhi031/object_equals.js Line: 39\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Pujari-Praveen › even_odd › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 21\n\n    - Array []\n    + Array [\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 20\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 21\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 22\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 23\",\n    +   \"Missing semicolon. File: js-aofs-Pujari-Praveen/even_odd.js Line: 23\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 24\",\n    +   \"'index' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/even_odd.js Line: 24\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 25\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/even_odd.js Line: 26\",\n    +   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/even_odd.js Line: 26\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/even_odd.js Line: 27\",\n    +   \"Unexpected use of continue statement. File: js-aofs-Pujari-Praveen/even_odd.js Line: 27\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 28\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/even_odd.js Line: 29\",\n    +   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/even_odd.js Line: 29\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 30\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/even_odd.js Line: 31\",\n    +   \"Missing semicolon. File: js-aofs-Pujari-Praveen/even_odd.js Line: 32\",\n    +   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/even_odd.js Line: 35\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Pujari-Praveen › categorise › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 33\n\n    - Array []\n    + Array [\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 29\",\n    +   \"'index' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/categorise.js Line: 29\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 30\",\n    +   \"Block must not be padded by blank lines. File: js-aofs-Pujari-Praveen/categorise.js Line: 30\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/categorise.js Line: 32\",\n    +   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/categorise.js Line: 33\",\n    +   \"'temp' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/categorise.js Line: 33\",\n    +   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/categorise.js Line: 34\",\n    +   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/categorise.js Line: 35\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/categorise.js Line: 36\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 37\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 38\",\n    +   \"Missing semicolon. File: js-aofs-Pujari-Praveen/categorise.js Line: 39\",\n    +   \"Function has too many lines (16). Maximum allowed is 15. File: js-aofs-Pujari-Praveen/categorise.js Line: 41\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 42\",\n    +   \"'categorisedList' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/categorise.js Line: 42\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 43\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 44\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 45\",\n    +   \"'tempList' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/categorise.js Line: 45\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 46\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/categorise.js Line: 47\",\n    +   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/categorise.js Line: 48\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/categorise.js Line: 49\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 50\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 51\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/categorise.js Line: 52\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 53\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/categorise.js Line: 55\",\n    +   \"Missing semicolon. File: js-aofs-Pujari-Praveen/categorise.js Line: 56\",\n    +   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/categorise.js Line: 60\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Pujari-Praveen › entries › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 17\n\n    - Array []\n    + Array [\n    +   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/entries.js Line: 3\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Pujari-Praveen/entries.js Line: 6\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/entries.js Line: 26\",\n    +   \"'finalList' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/entries.js Line: 26\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/entries.js Line: 27\",\n    +   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/entries.js Line: 27\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/entries.js Line: 28\",\n    +   \"'tempList' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/entries.js Line: 28\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/entries.js Line: 29\",\n    +   \"Missing semicolon. File: js-aofs-Pujari-Praveen/entries.js Line: 29\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/entries.js Line: 30\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/entries.js Line: 31\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/entries.js Line: 32\",\n    +   \"Missing semicolon. File: js-aofs-Pujari-Praveen/entries.js Line: 33\",\n    +   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/entries.js Line: 34\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Pujari-Praveen › remove_adjacent_spaces › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 10\n\n    - Array []\n    + Array [\n    +   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 3\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 7\",\n    +   \"Expected '===' and instead saw '=='. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 33\",\n    +   \"Block must not be padded by blank lines. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 36\",\n    +   \"Expected '!==' and instead saw '!='. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 38\",\n    +   \"Expected '===' and instead saw '=='. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 40\",\n    +   \"Expected '!==' and instead saw '!='. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 40\",\n    +   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/remove_adjacent_spaces.js Line: 46\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Pujari-Praveen › tribonacci › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 7\n\n    - Array []\n    + Array [\n    +   \"Trailing spaces not allowed. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 7\",\n    +   \"'finalOne' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 26\",\n    +   \"Missing semicolon. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 26\",\n    +   \"Missing semicolon. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 38\",\n    +   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/tribonacci.js Line: 40\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Pujari-Praveen › array_equals › should log false when ARRAY_1=undefined and ARRAY_2=null\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Pujari-Praveen › array_equals › should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]\n\n    evalmachine.<anonymous>:32\n        if ((array1 !== null && array2 !== null) && (array1.length !== array2.length)) {\n                                                            ^\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\n      at checkArraysEqualOrNot (evalmachine.<anonymous>:32:57)\n      at evalmachine.<anonymous>:47:22\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Pujari-Praveen › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 21\n\n    - Array []\n    + Array [\n    +   \"This line has a length of 84. Maximum allowed is 80. File: js-aofs-Pujari-Praveen/array_equals.js Line: 32\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 32\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/array_equals.js Line: 33\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 34\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 35\",\n    +   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/array_equals.js Line: 35\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/array_equals.js Line: 36\",\n    +   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/array_equals.js Line: 36\",\n    +   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/array_equals.js Line: 36\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/array_equals.js Line: 37\",\n    +   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/array_equals.js Line: 38\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/array_equals.js Line: 39\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/array_equals.js Line: 40\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/array_equals.js Line: 41\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/array_equals.js Line: 42\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 43\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/array_equals.js Line: 44\",\n    +   \"Missing semicolon. File: js-aofs-Pujari-Praveen/array_equals.js Line: 45\",\n    +   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/array_equals.js Line: 48\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Pujari-Praveen › object_equals › should log false when OBJECT_1=undefined and OBJECT_2={}\n\n    evalmachine.<anonymous>:32\n        if ((obj1 !== null && obj2 !== null) && (Object.keys(obj1).length !== Object.keys(obj2).length)) {\n                                                        ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at checkObjectsEqualOrNot (evalmachine.<anonymous>:32:53)\n      at evalmachine.<anonymous>:47:20\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Pujari-Praveen › object_equals › should log false when OBJECT_1={} and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:32\n        if ((obj1 !== null && obj2 !== null) && (Object.keys(obj1).length !== Object.keys(obj2).length)) {\n                                                                                     ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at checkObjectsEqualOrNot (evalmachine.<anonymous>:32:82)\n      at evalmachine.<anonymous>:47:20\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Pujari-Praveen › object_equals › should log true when OBJECT_1=undefined and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:32\n        if ((obj1 !== null && obj2 !== null) && (Object.keys(obj1).length !== Object.keys(obj2).length)) {\n                                                        ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at checkObjectsEqualOrNot (evalmachine.<anonymous>:32:53)\n      at evalmachine.<anonymous>:47:20\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Pujari-Praveen › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Pujari-Praveen › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Pujari-Praveen › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 21\n\n    - Array []\n    + Array [\n    +   \"This line has a length of 102. Maximum allowed is 80. File: js-aofs-Pujari-Praveen/object_equals.js Line: 32\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 32\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/object_equals.js Line: 33\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 34\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 35\",\n    +   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-Pujari-Praveen/object_equals.js Line: 35\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/object_equals.js Line: 36\",\n    +   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/object_equals.js Line: 36\",\n    +   \"Strings must use singlequote. File: js-aofs-Pujari-Praveen/object_equals.js Line: 36\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/object_equals.js Line: 37\",\n    +   \"Expected indentation of 8 spaces but found 16. File: js-aofs-Pujari-Praveen/object_equals.js Line: 38\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/object_equals.js Line: 39\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/object_equals.js Line: 40\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-Pujari-Praveen/object_equals.js Line: 41\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Pujari-Praveen/object_equals.js Line: 42\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 43\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Pujari-Praveen/object_equals.js Line: 44\",\n    +   \"Missing semicolon. File: js-aofs-Pujari-Praveen/object_equals.js Line: 45\",\n    +   \"Newline required at end of file but not found. File: js-aofs-Pujari-Praveen/object_equals.js Line: 48\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Revanth-backbencher › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Revanth-backbencher › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Rohith-216 › tribonacci › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 12\n\n    - Array []\n    + Array [\n    +   \"Trailing spaces not allowed. File: js-aofs-Rohith-216/tribonacci.js Line: 7\",\n    +   \"Function has too many lines (20). Maximum allowed is 15. File: js-aofs-Rohith-216/tribonacci.js Line: 23\",\n    +   \"This line has a length of 85. Maximum allowed is 80. File: js-aofs-Rohith-216/tribonacci.js Line: 28\",\n    +   \"Assignment to function parameter 'firstNumber'. File: js-aofs-Rohith-216/tribonacci.js Line: 31\",\n    +   \"Assignment to function parameter 'secondNumber'. File: js-aofs-Rohith-216/tribonacci.js Line: 32\",\n    +   \"Assignment to function parameter 'thirdNumber'. File: js-aofs-Rohith-216/tribonacci.js Line: 33\",\n    +   \"Assignment to function parameter 'fourthNumber'. File: js-aofs-Rohith-216/tribonacci.js Line: 34\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Rohith-216/tribonacci.js Line: 36\",\n    +   \"Unnecessary 'else' after 'return'. File: js-aofs-Rohith-216/tribonacci.js Line: 37\",\n    +   \"Missing semicolon. File: js-aofs-Rohith-216/tribonacci.js Line: 40\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Rohith-216 › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Rohith-216 › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › SACHITH31 › remove_adjacent_spaces › should remove extra spaces when TEXT contains only space\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"\",\n    +   \" \",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › SACHITH31 › remove_adjacent_spaces › should remove extra spaces when TEXT has leading spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"Leading spaces!!!\",\n    +   \" Leading spaces!!!\",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › SACHITH31 › remove_adjacent_spaces › should remove extra spaces when TEXT  has leading & trailing spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"Leading spaces!!! & Trailing Spaces!!!\",\n    +   \" Leading spaces!!! & Trailing Spaces!!! \",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › SACHITH31 › remove_adjacent_spaces › should remove extra spaces when TEXT has trailing spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"Trailing Spaces!!!\",\n    +   \"Trailing Spaces!!! \",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › SACHITH31 › remove_adjacent_spaces › should remove extra spaces when TEXT is multi lingual string with spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"こんにちは 世界\",\n    +   \" こんにちは 世界 \",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › SACHITH31 › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 4\n\n    - Array []\n    + Array [\n    +   \"'myArrayFunction' was used before it was defined. File: js-aofs-SACHITH31/array_equals.js Line: 34\",\n    +   \"This line has a length of 132. Maximum allowed is 80. File: js-aofs-SACHITH31/array_equals.js Line: 47\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › SACHITH31 › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 5\n\n    - Array []\n    + Array [\n    +   \"This line has a length of 91. Maximum allowed is 80. File: js-aofs-SACHITH31/object_equals.js Line: 32\",\n    +   \"This line has a length of 91. Maximum allowed is 80. File: js-aofs-SACHITH31/object_equals.js Line: 35\",\n    +   \"'anotherFunction' was used before it was defined. File: js-aofs-SACHITH31/object_equals.js Line: 44\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › SaiLokeshGoud › array_equals › should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › SaiLokeshGoud › array_equals › should log false when ARRAY_1=undefined and ARRAY_2=null\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › SaiLokeshGoud › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 5\n\n    - Array []\n    + Array [\n    +   \"Unnecessary use of boolean literals in conditional expression. File: js-aofs-SaiLokeshGoud/array_equals.js Line: 44\",\n    +   \"Expected '!==' and instead saw '!='. File: js-aofs-SaiLokeshGoud/array_equals.js Line: 45\",\n    +   \"Expected '!==' and instead saw '!='. File: js-aofs-SaiLokeshGoud/array_equals.js Line: 45\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › SaiLokeshGoud › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › SaiLokeshGoud › object_equals › should log true when OBJECT_1=null and OBJECT_2=null\n\n    evalmachine.<anonymous>:47\n      result = OBJECT_1 = null;\n                        ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:21\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › SaiLokeshGoud › object_equals › should log false when OBJECT_1=undefined and OBJECT_2={}\n\n    evalmachine.<anonymous>:49\n    if (OBJECT_1 !== null && OBJECT_2 !== null && OBJECT_1.length === OBJECT_2.length) {\n                                                           ^\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\n      at evalmachine.<anonymous>:49:56\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › SaiLokeshGoud › object_equals › should log false when OBJECT_1={} and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:49\n    if (OBJECT_1 !== null && OBJECT_2 !== null && OBJECT_1.length === OBJECT_2.length) {\n                                                                               ^\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\n      at evalmachine.<anonymous>:49:76\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › SaiLokeshGoud › object_equals › should log true when OBJECT_1=undefined and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:47\n      result = OBJECT_1 = undefined;\n                        ^\n\n    TypeError: Assignment to constant variable.\n\n      at evalmachine.<anonymous>:47:21\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › SaiLokeshGoud › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"This line has a length of 84. Maximum allowed is 80. File: js-aofs-SaiLokeshGoud/object_equals.js Line: 49\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Saicharanteja-844 › object_equals › should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   true,\n    +   false,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Saicharanteja-844 › object_equals › should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   true,\n    +   false,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Shek-Nowshik66 › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Shek-Nowshik66 › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Siddhu83 › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Siddhu83 › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › SkAkramali › object_equals › should log false when OBJECT_1=undefined and OBJECT_2={}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › SkAkramali › object_equals › should log false when OBJECT_1={} and OBJECT_2=undefined\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › SkAkramali › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › SkAkramali › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › SkAkramali › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"This line has a length of 125. Maximum allowed is 80. File: js-aofs-SkAkramali/object_equals.js Line: 35\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Sravani175 › even_odd › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 26\n\n    - Array []\n    + Array [\n    +   \"Expected a function expression. File: js-aofs-Sravani175/even_odd.js Line: 18\",\n    +   \"Missing space before opening brace. File: js-aofs-Sravani175/even_odd.js Line: 18\",\n    +   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sravani175/even_odd.js Line: 19\",\n    +   \"A space is required before '}'. File: js-aofs-Sravani175/even_odd.js Line: 19\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/even_odd.js Line: 20\",\n    +   \"There should be no space after this paren. File: js-aofs-Sravani175/even_odd.js Line: 20\",\n    +   \"'mine' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/even_odd.js Line: 20\",\n    +   \"Missing space before opening brace. File: js-aofs-Sravani175/even_odd.js Line: 20\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sravani175/even_odd.js Line: 21\",\n    +   \"There should be no space before this paren. File: js-aofs-Sravani175/even_odd.js Line: 21\",\n    +   \"Missing space before opening brace. File: js-aofs-Sravani175/even_odd.js Line: 21\",\n    +   \"Expected indentation of 6 spaces but found 4. File: js-aofs-Sravani175/even_odd.js Line: 22\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Sravani175/even_odd.js Line: 23\",\n    +   \"Expected indentation of 4 spaces but found 0. File: js-aofs-Sravani175/even_odd.js Line: 23\",\n    +   \"Expected indentation of 4 spaces but found 5. File: js-aofs-Sravani175/even_odd.js Line: 24\",\n    +   \"Expected indentation of 6 spaces but found 9. File: js-aofs-Sravani175/even_odd.js Line: 25\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sravani175/even_odd.js Line: 26\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/even_odd.js Line: 27\",\n    +   \"Expected indentation of 2 spaces but found 6. File: js-aofs-Sravani175/even_odd.js Line: 28\",\n    +   \"Expected indentation of 0 spaces but found 2. File: js-aofs-Sravani175/even_odd.js Line: 29\",\n    +   \"Expected indentation of 0 spaces but found 4. File: js-aofs-Sravani175/even_odd.js Line: 30\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Sravani175/even_odd.js Line: 31\",\n    +   \"Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-Sravani175/even_odd.js Line: 31\",\n    +   \"Newline required at end of file but not found. File: js-aofs-Sravani175/even_odd.js Line: 31\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Sravani175 › categorise › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 32\n\n    - Array []\n    + Array [\n    +   \"Expected a function expression. File: js-aofs-Sravani175/categorise.js Line: 26\",\n    +   \"Function 'groupNumbers' has too many lines (16). Maximum allowed is 15. File: js-aofs-Sravani175/categorise.js Line: 26\",\n    +   \"Missing space before opening brace. File: js-aofs-Sravani175/categorise.js Line: 26\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/categorise.js Line: 28\",\n    +   \"'num' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/categorise.js Line: 28\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sravani175/categorise.js Line: 29\",\n    +   \"Unexpected whitespace before property num. File: js-aofs-Sravani175/categorise.js Line: 29\",\n    +   \"There should be no space before this paren. File: js-aofs-Sravani175/categorise.js Line: 29\",\n    +   \"Expected indentation of 6 spaces but found 2. File: js-aofs-Sravani175/categorise.js Line: 30\",\n    +   \"Unexpected whitespace before property num. File: js-aofs-Sravani175/categorise.js Line: 30\",\n    +   \"Expected indentation of 4 spaces but found 0. File: js-aofs-Sravani175/categorise.js Line: 31\",\n    +   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Sravani175/categorise.js Line: 32\",\n    +   \"Unexpected whitespace before property num. File: js-aofs-Sravani175/categorise.js Line: 32\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/categorise.js Line: 33\",\n    +   \"Expected indentation of 2 spaces but found 0. File: js-aofs-Sravani175/categorise.js Line: 34\",\n    +   \"'arrays' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/categorise.js Line: 34\",\n    +   \"'keys' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/categorise.js Line: 35\",\n    +   \"Operator '=' must be spaced. File: js-aofs-Sravani175/categorise.js Line: 35\",\n    +   \"A space is required after ','. File: js-aofs-Sravani175/categorise.js Line: 35\",\n    +   \"Missing space before =>. File: js-aofs-Sravani175/categorise.js Line: 35\",\n    +   \"Missing space after =>. File: js-aofs-Sravani175/categorise.js Line: 35\",\n    +   \"Operator '-' must be spaced. File: js-aofs-Sravani175/categorise.js Line: 35\",\n    +   \"Expected indentation of 2 spaces but found 3. File: js-aofs-Sravani175/categorise.js Line: 36\",\n    +   \"Expected space(s) after \\\"for\\\". File: js-aofs-Sravani175/categorise.js Line: 36\",\n    +   \"'k' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/categorise.js Line: 36\",\n    +   \"Opening curly brace does not appear on the same line as controlling statement. File: js-aofs-Sravani175/categorise.js Line: 37\",\n    +   \"Expected indentation of 2 spaces but found 0. File: js-aofs-Sravani175/categorise.js Line: 37\",\n    +   \"Expected indentation of 2 spaces but found 0. File: js-aofs-Sravani175/categorise.js Line: 39\",\n    +   \"Expected indentation of 2 spaces but found 3. File: js-aofs-Sravani175/categorise.js Line: 40\",\n    +   \"Newline required at end of file but not found. File: js-aofs-Sravani175/categorise.js Line: 42\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Sravani175 › entries › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 20\n\n    - Array []\n    + Array [\n    +   \"A space is required after '{'. File: js-aofs-Sravani175/entries.js Line: 3\",\n    +   \"A space is required before '}'. File: js-aofs-Sravani175/entries.js Line: 3\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Sravani175/entries.js Line: 6\",\n    +   \"Expected indentation of 0 spaces but found 1. File: js-aofs-Sravani175/entries.js Line: 22\",\n    +   \"Missing space before function parentheses. File: js-aofs-Sravani175/entries.js Line: 22\",\n    +   \"'OBJECT' is already declared in the upper scope on line 3 column 7. File: js-aofs-Sravani175/entries.js Line: 22\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/entries.js Line: 23\",\n    +   \"There should be no space after this paren. File: js-aofs-Sravani175/entries.js Line: 24\",\n    +   \"'mine' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/entries.js Line: 24\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sravani175/entries.js Line: 25\",\n    +   \"'index' is never reassigned. Use 'const' instead. File: js-aofs-Sravani175/entries.js Line: 25\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-Sravani175/entries.js Line: 26\",\n    +   \"Expected indentation of 4 spaces but found 5. File: js-aofs-Sravani175/entries.js Line: 27\",\n    +   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Sravani175/entries.js Line: 28\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-Sravani175/entries.js Line: 30\",\n    +   \"Missing semicolon. File: js-aofs-Sravani175/entries.js Line: 31\",\n    +   \"Expected indentation of 0 spaces but found 4. File: js-aofs-Sravani175/entries.js Line: 32\",\n    +   \"Expected indentation of 0 spaces but found 2. File: js-aofs-Sravani175/entries.js Line: 33\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT contains only 1 extra space\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"One extra space!!!\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT contains multiple extra spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"Multiple extra spaces!!!\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT contains only space\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT is empty string\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT is a single word\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"SingleWord\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT is a single character\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"a\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT has no spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"ItsALongSentenceWithoutAnySpaces\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT has leading spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"Leading spaces!!!\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT  has leading & trailing spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"Leading spaces!!! & Trailing Spaces!!!\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT has trailing spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"Trailing Spaces!!!\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT has mixed spaces & tabs\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"String \t with \t spaces \t and \t tabs!!!\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT has mixed spaces & newlines\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 7\n    + Received  + 1\n\n    - Array [\n    -   \"String \n    -  with \n    -  spaces \n    -  and \n    -  newlines!!!\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT is numeric string with spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"123 456 789\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT is multi lingual string with spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"こんにちは 世界\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 4\n\n    - Array []\n    + Array [\n    +   \"Strings must use singlequote. File: js-aofs-Sravani175/remove_adjacent_spaces.js Line: 3\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Sravani175/remove_adjacent_spaces.js Line: 7\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=7\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 11\n    + Received  +  1\n\n    - Array [\n    -   Array [\n    -     0,\n    -     0,\n    -     1,\n    -     1,\n    -     2,\n    -     4,\n    -     7,\n    -   ],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=24\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 13\n    + Received  +  1\n\n    - Array [\n    -   Array [\n    -     0,\n    -     0,\n    -     1,\n    -     1,\n    -     2,\n    -     4,\n    -     7,\n    -     13,\n    -     24,\n    -   ],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=100\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 15\n    + Received  +  1\n\n    - Array [\n    -   Array [\n    -     0,\n    -     0,\n    -     1,\n    -     1,\n    -     2,\n    -     4,\n    -     7,\n    -     13,\n    -     24,\n    -     44,\n    -     81,\n    -   ],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=300\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 17\n    + Received  +  1\n\n    - Array [\n    -   Array [\n    -     0,\n    -     0,\n    -     1,\n    -     1,\n    -     2,\n    -     4,\n    -     7,\n    -     13,\n    -     24,\n    -     44,\n    -     81,\n    -     149,\n    -     274,\n    -   ],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=2\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 9\n    + Received  + 1\n\n    - Array [\n    -   Array [\n    -     0,\n    -     0,\n    -     1,\n    -     1,\n    -     2,\n    -   ],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=1\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 8\n    + Received  + 1\n\n    - Array [\n    -   Array [\n    -     0,\n    -     0,\n    -     1,\n    -     1,\n    -   ],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=0\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 6\n    + Received  + 1\n\n    - Array [\n    -   Array [\n    -     0,\n    -     0,\n    -   ],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=-1\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   Array [],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=-2\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   Array [],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=-10\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   Array [],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence when ENDING_RANGE is a larger number\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 22\n    + Received  +  1\n\n    - Array [\n    -   Array [\n    -     0,\n    -     0,\n    -     1,\n    -     1,\n    -     2,\n    -     4,\n    -     7,\n    -     13,\n    -     24,\n    -     44,\n    -     81,\n    -     149,\n    -     274,\n    -     504,\n    -     927,\n    -     1705,\n    -     3136,\n    -     5768,\n    -   ],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 6\n\n    - Array []\n    + Array [\n    +   \"Trailing spaces not allowed. File: js-aofs-Sravani175/tribonacci.js Line: 7\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Sravani175/tribonacci.js Line: 23\",\n    +   \"Too many blank lines at the end of file. Max of 0 allowed. File: js-aofs-Sravani175/tribonacci.js Line: 23\",\n    +   \"Newline required at end of file but not found. File: js-aofs-Sravani175/tribonacci.js Line: 23\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two non-identical arrays with nested arrays ARRAY_1=[1,[3],[2]] and ARRAY_2=[1,[2],[2]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log true when given two very large arrays with same data\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two very large arrays with different data\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log true when given two arrays are null\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log true when given two deep arrays are equal\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when ARRAY_1=undefined and ARRAY_2=null\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when ARRAY_1=[1] and ARRAY_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when ARRAY_1={0:1} and ARRAY_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1={} and OBJECT_2={}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1=null and OBJECT_2=null\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1=undefined and OBJECT_2={}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={} and OBJECT_2=undefined\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1=undefined and OBJECT_2=undefined\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sreenayak › array_equals › should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]\n\n    evalmachine.<anonymous>:32\n         if ( firstarray.length !== secondarray.length ) {\n                         ^\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\n      at arrayequal (evalmachine.<anonymous>:32:22)\n      at evalmachine.<anonymous>:54:14\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Sreenayak › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 57\n\n    - Array []\n    + Array [\n    +   \"Expected space or tab before '*/' in comment. File: js-aofs-Sreenayak/array_equals.js Line: 6\",\n    +   \"Arrow function has too many lines (24). Maximum allowed is 15. File: js-aofs-Sreenayak/array_equals.js Line: 30\",\n    +   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 31\",\n    +   \"Expected indentation of 4 spaces but found 5. File: js-aofs-Sreenayak/array_equals.js Line: 32\",\n    +   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 32\",\n    +   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 32\",\n    +   \"Expected indentation of 6 spaces but found 11. File: js-aofs-Sreenayak/array_equals.js Line: 33\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sreenayak/array_equals.js Line: 34\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-Sreenayak/array_equals.js Line: 35\",\n    +   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 35\",\n    +   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 35\",\n    +   \"Expected indentation of 6 spaces but found 9. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n    +   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n    +   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n    +   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n    +   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n    +   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 36\",\n    +   \"Expected indentation of 8 spaces but found 10. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n    +   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n    +   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n    +   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n    +   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n    +   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n    +   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n    +   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n    +   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 37\",\n    +   \"Expected indentation of 10 spaces but found 11. File: js-aofs-Sreenayak/array_equals.js Line: 38\",\n    +   \"Expected indentation of 8 spaces but found 9. File: js-aofs-Sreenayak/array_equals.js Line: 39\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Sreenayak/array_equals.js Line: 40\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Sreenayak/array_equals.js Line: 40\",\n    +   \"Expected indentation of 6 spaces but found 5. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n    +   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n    +   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n    +   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n    +   \"There should be no space after '['. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n    +   \"There should be no space before ']'. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n    +   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 41\",\n    +   \"Expected indentation of 6 spaces but found 5. File: js-aofs-Sreenayak/array_equals.js Line: 43\",\n    +   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Sreenayak/array_equals.js Line: 44\",\n    +   \"Expected indentation of 4 spaces but found 3. File: js-aofs-Sreenayak/array_equals.js Line: 45\",\n    +   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 46\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Sreenayak/array_equals.js Line: 46\",\n    +   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 47\",\n    +   \"Expected space(s) after \\\"if\\\". File: js-aofs-Sreenayak/array_equals.js Line: 47\",\n    +   \"Expected indentation of 4 spaces but found 2. File: js-aofs-Sreenayak/array_equals.js Line: 48\",\n    +   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 49\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-Sreenayak/array_equals.js Line: 49\",\n    +   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 50\",\n    +   \"Unnecessary 'else' after 'return'. File: js-aofs-Sreenayak/array_equals.js Line: 50\",\n    +   \"Expected indentation of 4 spaces but found 2. File: js-aofs-Sreenayak/array_equals.js Line: 51\",\n    +   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Sreenayak/array_equals.js Line: 52\",\n    +   \"There should be no space after this paren. File: js-aofs-Sreenayak/array_equals.js Line: 54\",\n    +   \"There should be no space before ','. File: js-aofs-Sreenayak/array_equals.js Line: 54\",\n    +   \"There should be no space before this paren. File: js-aofs-Sreenayak/array_equals.js Line: 54\",\n    +   \"Newline required at end of file but not found. File: js-aofs-Sreenayak/array_equals.js Line: 54\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Sreenayak › object_equals › should log false when OBJECT_1=undefined and OBJECT_2={}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sreenayak › object_equals › should log false when OBJECT_1={} and OBJECT_2=undefined\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sreenayak › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sreenayak › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Sreenayak › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"This line has a length of 95. Maximum allowed is 80. File: js-aofs-Sreenayak/object_equals.js Line: 36\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Triveni12062006 › categorise › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Arrow function has too many lines (19). Maximum allowed is 15. File: js-aofs-Triveni12062006/categorise.js Line: 26\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Triveni12062006 › entries › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Trailing spaces not allowed. File: js-aofs-Triveni12062006/entries.js Line: 7\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Triveni12062006 › remove_adjacent_spaces › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 5\n\n    - Array []\n    + Array [\n    +   \"Trailing spaces not allowed. File: js-aofs-Triveni12062006/remove_adjacent_spaces.js Line: 7\",\n    +   \"Arrow function has too many lines (23). Maximum allowed is 15. File: js-aofs-Triveni12062006/remove_adjacent_spaces.js Line: 31\",\n    +   \"Expected indentation of 2 spaces but found 1. File: js-aofs-Triveni12062006/remove_adjacent_spaces.js Line: 52\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Triveni12062006 › tribonacci › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 4\n\n    - Array []\n    + Array [\n    +   \"Trailing spaces not allowed. File: js-aofs-Triveni12062006/tribonacci.js Line: 7\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Triveni12062006/tribonacci.js Line: 29\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Triveni12062006 › array_equals › should log false when ARRAY_1=undefined and ARRAY_2=null\n\n    evalmachine.<anonymous>:35\n      if (a.length !== b.length) {\n            ^\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\n      at arrEqual (evalmachine.<anonymous>:35:9)\n      at evalmachine.<anonymous>:51:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Triveni12062006 › array_equals › should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]\n\n    evalmachine.<anonymous>:35\n      if (a.length !== b.length) {\n            ^\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\n      at arrEqual (evalmachine.<anonymous>:35:9)\n      at evalmachine.<anonymous>:51:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Triveni12062006 › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 8\n\n    - Array []\n    + Array [\n    +   \"Arrow function has too many lines (17). Maximum allowed is 15. File: js-aofs-Triveni12062006/array_equals.js Line: 31\",\n    +   \"Expected indentation of 4 spaces but found 5. File: js-aofs-Triveni12062006/array_equals.js Line: 33\",\n    +   \"Expected indentation of 4 spaces but found 5. File: js-aofs-Triveni12062006/array_equals.js Line: 36\",\n    +   \"'array' was used before it was defined. File: js-aofs-Triveni12062006/array_equals.js Line: 41\",\n    +   \"'array' was used before it was defined. File: js-aofs-Triveni12062006/array_equals.js Line: 41\",\n    +   \"Expected indentation of 2 spaces but found 5. File: js-aofs-Triveni12062006/array_equals.js Line: 46\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › Triveni12062006 › object_equals › should log false when OBJECT_1=undefined and OBJECT_2={}\n\n    evalmachine.<anonymous>:38\n      const key1 = Object.keys(obj1);\n                          ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at objEqual (evalmachine.<anonymous>:38:23)\n      at evalmachine.<anonymous>:53:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Triveni12062006 › object_equals › should log false when OBJECT_1={} and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:39\n      const key2 = Object.keys(obj2);\n                          ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at objEqual (evalmachine.<anonymous>:39:23)\n      at evalmachine.<anonymous>:53:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Triveni12062006 › object_equals › should log true when OBJECT_1=undefined and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:38\n      const key1 = Object.keys(obj1);\n                          ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at objEqual (evalmachine.<anonymous>:38:23)\n      at evalmachine.<anonymous>:53:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › Triveni12062006 › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Triveni12062006 › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › Triveni12062006 › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 5\n\n    - Array []\n    + Array [\n    +   \"Arrow function has too many lines (19). Maximum allowed is 15. File: js-aofs-Triveni12062006/object_equals.js Line: 34\",\n    +   \"Expected indentation of 6 spaces but found 7. File: js-aofs-Triveni12062006/object_equals.js Line: 48\",\n    +   \"Trailing spaces not allowed. File: js-aofs-Triveni12062006/object_equals.js Line: 53\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › VETR1-V1GNESH › remove_adjacent_spaces › should remove extra spaces when TEXT contains only 1 extra space\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"One extra space!!!\",\n    +   \"\",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › VETR1-V1GNESH › remove_adjacent_spaces › should remove extra spaces when TEXT contains multiple extra spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"Multiple extra spaces!!!\",\n    +   \"\",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › VETR1-V1GNESH › remove_adjacent_spaces › should remove extra spaces when TEXT is a single word\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"SingleWord\",\n    +   \"\",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › VETR1-V1GNESH › remove_adjacent_spaces › should remove extra spaces when TEXT is a single character\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"a\",\n    +   \"\",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › VETR1-V1GNESH › remove_adjacent_spaces › should remove extra spaces when TEXT has no spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"ItsALongSentenceWithoutAnySpaces\",\n    +   \"\",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › VETR1-V1GNESH › remove_adjacent_spaces › should remove extra spaces when TEXT has leading spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"Leading spaces!!!\",\n    +   \" Leading spaces!!!\",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › VETR1-V1GNESH › remove_adjacent_spaces › should remove extra spaces when TEXT  has leading & trailing spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"Leading spaces!!! & Trailing Spaces!!!\",\n    +   \" Leading spaces!!! & Trailing Spaces!!!\",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › VETR1-V1GNESH › remove_adjacent_spaces › should remove extra spaces when TEXT has trailing spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"Trailing Spaces!!!\",\n    +   \"\",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › VETR1-V1GNESH › remove_adjacent_spaces › should remove extra spaces when TEXT has mixed spaces & tabs\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"String \t with \t spaces \t and \t tabs!!!\",\n    +   \"\",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › VETR1-V1GNESH › remove_adjacent_spaces › should remove extra spaces when TEXT has mixed spaces & newlines\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 5\n    + Received  + 1\n\n      Array [\n    -   \"String \n    -  with \n    -  spaces \n    -  and \n    -  newlines!!!\",\n    +   \"\",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › VETR1-V1GNESH › remove_adjacent_spaces › should remove extra spaces when TEXT is numeric string with spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"123 456 789\",\n    +   \"\",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › VETR1-V1GNESH › remove_adjacent_spaces › should remove extra spaces when TEXT is multi lingual string with spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"こんにちは 世界\",\n    +   \" こんにちは 世界\",\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › VETR1-V1GNESH › remove_adjacent_spaces › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Expected { after 'for' condition. File: js-aofs-VETR1-V1GNESH/remove_adjacent_spaces.js Line: 35\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › VETR1-V1GNESH › array_equals › should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › VETR1-V1GNESH › array_equals › should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]\n\n    evalmachine.<anonymous>:47\n      } else if (arr1.length !== arr2.length) {\n                      ^\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\n      at findEqual (evalmachine.<anonymous>:47:19)\n      at evalmachine.<anonymous>:54:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › VETR1-V1GNESH › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Multiple spaces found before 'null'. File: js-aofs-VETR1-V1GNESH/array_equals.js Line: 45\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › VETR1-V1GNESH › object_equals › should log false when OBJECT_1=undefined and OBJECT_2={}\n\n    evalmachine.<anonymous>:35\n      } else if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n                        ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at findEqual (evalmachine.<anonymous>:35:21)\n      at evalmachine.<anonymous>:50:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › VETR1-V1GNESH › object_equals › should log false when OBJECT_1={} and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:35\n      } else if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n                                                     ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at findEqual (evalmachine.<anonymous>:35:50)\n      at evalmachine.<anonymous>:50:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › VETR1-V1GNESH › object_equals › should log true when OBJECT_1=undefined and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:35\n      } else if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n                        ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at findEqual (evalmachine.<anonymous>:35:21)\n      at evalmachine.<anonymous>:50:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › VETR1-V1GNESH › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › VETR1-V1GNESH › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › VETR1-V1GNESH › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Function has too many lines (17). Maximum allowed is 15. File: js-aofs-VETR1-V1GNESH/object_equals.js Line: 32\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › balasatish1 › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 9\n\n    - Array []\n    + Array [\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/array_equals.js Line: 44\",\n    +   \"Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/array_equals.js Line: 45\",\n    +   \"Expected indentation of 8 spaces but found 10. File: js-aofs-balasatish1/array_equals.js Line: 46\",\n    +   \"Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/array_equals.js Line: 47\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/array_equals.js Line: 48\",\n    +   \"Expected indentation of 6 spaces but found 10. File: js-aofs-balasatish1/array_equals.js Line: 49\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/array_equals.js Line: 50\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › balasatish1 › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 14\n\n    - Array []\n    + Array [\n    +   \"A space is required after '{'. File: js-aofs-balasatish1/object_equals.js Line: 2\",\n    +   \"A space is required before '}'. File: js-aofs-balasatish1/object_equals.js Line: 2\",\n    +   \"A space is required after '{'. File: js-aofs-balasatish1/object_equals.js Line: 3\",\n    +   \"A space is required before '}'. File: js-aofs-balasatish1/object_equals.js Line: 3\",\n    +   \"This line has a length of 105. Maximum allowed is 80. File: js-aofs-balasatish1/object_equals.js Line: 33\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/object_equals.js Line: 45\",\n    +   \"Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/object_equals.js Line: 46\",\n    +   \"Expected indentation of 8 spaces but found 10. File: js-aofs-balasatish1/object_equals.js Line: 47\",\n    +   \"Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/object_equals.js Line: 48\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/object_equals.js Line: 49\",\n    +   \"Expected indentation of 6 spaces but found 8. File: js-aofs-balasatish1/object_equals.js Line: 50\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-balasatish1/object_equals.js Line: 51\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › kumarnandeesh › array_equals › should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   true,\n    +   false,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › kumarnandeesh › array_equals › should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   true,\n    +   false,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › kumarnandeesh › array_equals › should log true when given two deep arrays are equal\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   true,\n    +   false,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › kumarnandeesh › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 5\n\n    - Array []\n    + Array [\n    +   \"Trailing spaces not allowed. File: js-aofs-kumarnandeesh/array_equals.js Line: 34\",\n    +   \"Trailing spaces not allowed. File: js-aofs-kumarnandeesh/array_equals.js Line: 39\",\n    +   \"Expected indentation of 6 spaces File: js-aofs-kumarnandeesh/array_equals.js Line: 40\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › kumarnandeesh › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › kumarnandeesh › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › kumarnandeesh › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 5\n\n    - Array []\n    + Array [\n    +   \"'functionAreObjectsEqual' was used before it was defined. File: js-aofs-kumarnandeesh/object_equals.js Line: 36\",\n    +   \"Trailing spaces not allowed. File: js-aofs-kumarnandeesh/object_equals.js Line: 49\",\n    +   \"This line has a length of 83. Maximum allowed is 80. File: js-aofs-kumarnandeesh/object_equals.js Line: 50\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › naveen-kumar-vadla › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"This line has a length of 92. Maximum allowed is 80. File: js-aofs-naveen-kumar-vadla/array_equals.js Line: 37\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › naveen-kumar-vadla › object_equals › should log false when OBJECT_1={} and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:39\n      const object2Keys = Object.keys(object2);\n                                 ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at areObjectsEqual (evalmachine.<anonymous>:39:30)\n      at evalmachine.<anonymous>:70:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › naveen-kumar-vadla › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › naveen-kumar-vadla › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › nithindenkada › even_odd › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 13\n\n    - Array []\n    + Array [\n    +   \"'evenOddSeperation' was used before it was defined. File: js-aofs-nithindenkada/even_odd.js Line: 20\",\n    +   \"Expected a function expression. File: js-aofs-nithindenkada/even_odd.js Line: 23\",\n    +   \"'numbers' is already declared in the upper scope on line 19 column 5. File: js-aofs-nithindenkada/even_odd.js Line: 23\",\n    +   \"'even' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/even_odd.js Line: 24\",\n    +   \"'odd' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/even_odd.js Line: 25\",\n    +   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/even_odd.js Line: 28\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/even_odd.js Line: 29\",\n    +   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/even_odd.js Line: 30\",\n    +   \"A space is required after '{'. File: js-aofs-nithindenkada/even_odd.js Line: 35\",\n    +   \"A space is required before '}'. File: js-aofs-nithindenkada/even_odd.js Line: 35\",\n    +   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/even_odd.js Line: 36\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › nithindenkada › categorise › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 44\n\n    - Array []\n    + Array [\n    +   \"'copyOfNumbers' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/categorise.js Line: 27\",\n    +   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/categorise.js Line: 27\",\n    +   \"'sortingGrouping' was used before it was defined. File: js-aofs-nithindenkada/categorise.js Line: 28\",\n    +   \"Expected a function expression. File: js-aofs-nithindenkada/categorise.js Line: 29\",\n    +   \"Function 'sortingGrouping' has too many lines (17). Maximum allowed is 15. File: js-aofs-nithindenkada/categorise.js Line: 29\",\n    +   \"'copyOfNumbers' is already declared in the upper scope on line 27 column 5. File: js-aofs-nithindenkada/categorise.js Line: 29\",\n    +   \"Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 29\",\n    +   \"Expected indentation of 2 spaces but found 0. File: js-aofs-nithindenkada/categorise.js Line: 30\",\n    +   \"'sortList' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/categorise.js Line: 30\",\n    +   \"Expected indentation of 2 spaces but found 0. File: js-aofs-nithindenkada/categorise.js Line: 31\",\n    +   \"'sorting' was used before it was defined. File: js-aofs-nithindenkada/categorise.js Line: 32\",\n    +   \"Expected indentation of 2 spaces but found 0. File: js-aofs-nithindenkada/categorise.js Line: 32\",\n    +   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/categorise.js Line: 33\",\n    +   \"Expected space(s) after \\\"while\\\". File: js-aofs-nithindenkada/categorise.js Line: 34\",\n    +   \"Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 34\",\n    +   \"'category' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/categorise.js Line: 35\",\n    +   \"Expected space(s) after \\\"while\\\". File: js-aofs-nithindenkada/categorise.js Line: 36\",\n    +   \"Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 36\",\n    +   \"Expected indentation of 6 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 38\",\n    +   \"Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 39\",\n    +   \"Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 40\",\n    +   \"Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 41\",\n    +   \"Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/categorise.js Line: 42\",\n    +   \"Expected a function expression. File: js-aofs-nithindenkada/categorise.js Line: 47\",\n    +   \"'copyOfNumbers' is already declared in the upper scope on line 27 column 5. File: js-aofs-nithindenkada/categorise.js Line: 47\",\n    +   \"Missing whitespace after semicolon. File: js-aofs-nithindenkada/categorise.js Line: 48\",\n    +   \"Operator '<' must be spaced. File: js-aofs-nithindenkada/categorise.js Line: 48\",\n    +   \"Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 48\",\n    +   \"This line has a length of 83. Maximum allowed is 80. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n    +   \"Expected indentation of 4 spaces but found 0. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n    +   \"Operator '+' must be spaced. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n    +   \"Missing whitespace after semicolon. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n    +   \"Operator '<' must be spaced. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n    +   \"Missing space before opening brace. File: js-aofs-nithindenkada/categorise.js Line: 49\",\n    +   \"Expected indentation of 6 spaces but found 4. File: js-aofs-nithindenkada/categorise.js Line: 50\",\n    +   \"Expected indentation of 8 spaces but found 6. File: js-aofs-nithindenkada/categorise.js Line: 51\",\n    +   \"'temporary' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/categorise.js Line: 51\",\n    +   \"Expected indentation of 8 spaces but found 6. File: js-aofs-nithindenkada/categorise.js Line: 52\",\n    +   \"Expected indentation of 8 spaces but found 6. File: js-aofs-nithindenkada/categorise.js Line: 53\",\n    +   \"Expected indentation of 6 spaces but found 4. File: js-aofs-nithindenkada/categorise.js Line: 54\",\n    +   \"Expected indentation of 4 spaces but found 2. File: js-aofs-nithindenkada/categorise.js Line: 55\",\n    +   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/categorise.js Line: 57\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › nithindenkada › entries › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 21\n\n    - Array []\n    + Array [\n    +   \"A space is required after '{'. File: js-aofs-nithindenkada/entries.js Line: 3\",\n    +   \"A space is required before '}'. File: js-aofs-nithindenkada/entries.js Line: 3\",\n    +   \"Missing semicolon. File: js-aofs-nithindenkada/entries.js Line: 3\",\n    +   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/entries.js Line: 6\",\n    +   \"More than 1 blank line not allowed. File: js-aofs-nithindenkada/entries.js Line: 23\",\n    +   \"'myEntries' was used before it was defined. File: js-aofs-nithindenkada/entries.js Line: 25\",\n    +   \"Expected a function expression. File: js-aofs-nithindenkada/entries.js Line: 27\",\n    +   \"'objectCopy' is already declared in the upper scope on line 24 column 5. File: js-aofs-nithindenkada/entries.js Line: 27\",\n    +   \"Missing space before opening brace. File: js-aofs-nithindenkada/entries.js Line: 27\",\n    +   \"Expected indentation of 2 spaces but found 0. File: js-aofs-nithindenkada/entries.js Line: 28\",\n    +   \"'output' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/entries.js Line: 28\",\n    +   \"Expected space(s) after \\\"for\\\". File: js-aofs-nithindenkada/entries.js Line: 29\",\n    +   \"'key' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/entries.js Line: 29\",\n    +   \"Missing space before opening brace. File: js-aofs-nithindenkada/entries.js Line: 29\",\n    +   \"Block must not be padded by blank lines. File: js-aofs-nithindenkada/entries.js Line: 30\",\n    +   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/entries.js Line: 31\",\n    +   \"Block must not be padded by blank lines. File: js-aofs-nithindenkada/entries.js Line: 33\",\n    +   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/entries.js Line: 34\",\n    +   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/entries.js Line: 35\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › nithindenkada › remove_adjacent_spaces › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 48\n\n    - Array []\n    + Array [\n    +   \"Strings must use singlequote. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 3\",\n    +   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 5\",\n    +   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 7\",\n    +   \"'finalResult' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 32\",\n    +   \"'removeAdjacentSpaces' was used before it was defined. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 32\",\n    +   \"Expected a function expression. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 35\",\n    +   \"Function 'removeAdjacentSpaces' has too many lines (27). Maximum allowed is 15. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 35\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 36\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 37\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 38\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 39\",\n    +   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 39\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 40\",\n    +   \"There should be no space after this paren. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 40\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 41\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 42\",\n    +   \"Expected indentation of 4 spaces but found 9. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 43\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 43\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 44\",\n    +   \"There should be no space after this paren. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 44\",\n    +   \"Expected '!==' and instead saw '!='. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 44\",\n    +   \"Expected indentation of 6 spaces but found 11. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 45\",\n    +   \"Expected indentation of 6 spaces but found 11. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 46\",\n    +   \"Expected indentation of 4 spaces but found 9. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 47\",\n    +   \"Expected indentation of 2 spaces but found 5. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 48\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 49\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 50\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 51\",\n    +   \"Expected space(s) after \\\"if\\\". File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 51\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 52\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 53\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 54\",\n    +   \"Operator '-' must be spaced. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 54\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 55\",\n    +   \"Operator '-' must be spaced. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 55\",\n    +   \"Expected indentation of 2 spaces but found 5. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 56\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 57\",\n    +   \"There should be no space after this paren. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 57\",\n    +   \"Missing whitespace after semicolon. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 57\",\n    +   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 57\",\n    +   \"Expected indentation of 4 spaces but found 7. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 58\",\n    +   \"Operator '+=' must be spaced. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 58\",\n    +   \"Expected indentation of 2 spaces but found 5. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 59\",\n    +   \"Expected indentation of 2 spaces but found 1. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 60\",\n    +   \"Expected indentation of 0 spaces but found 1. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 61\",\n    +   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/remove_adjacent_spaces.js Line: 61\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › nithindenkada › tribonacci › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 62\n\n    - Array []\n    + Array [\n    +   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/tribonacci.js Line: 7\",\n    +   \"'number' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 23\",\n    +   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 25\",\n    +   \"'number1' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 25\",\n    +   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 26\",\n    +   \"'number2' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 26\",\n    +   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 27\",\n    +   \"'number3' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 27\",\n    +   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 28\",\n    +   \"'number4' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 28\",\n    +   \"Operator '+' must be spaced. File: js-aofs-nithindenkada/tribonacci.js Line: 28\",\n    +   \"Operator '+' must be spaced. File: js-aofs-nithindenkada/tribonacci.js Line: 28\",\n    +   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 29\",\n    +   \"'result' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 29\",\n    +   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/tribonacci.js Line: 30\",\n    +   \"'finalResult' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/tribonacci.js Line: 31\",\n    +   \"'tribonacci' was used before it was defined. File: js-aofs-nithindenkada/tribonacci.js Line: 31\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 31\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 31\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 31\",\n    +   \"Expected exception block, space or tab after '//' in comment. File: js-aofs-nithindenkada/tribonacci.js Line: 33\",\n    +   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/tribonacci.js Line: 34\",\n    +   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n    +   \"Expected a function expression. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n    +   \"Function 'tribonacci' has too many lines (17). Maximum allowed is 15. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n    +   \"'number1' is already declared in the upper scope on line 25 column 7. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n    +   \"'number2' is already declared in the upper scope on line 26 column 7. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n    +   \"'number3' is already declared in the upper scope on line 27 column 7. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n    +   \"'number4' is already declared in the upper scope on line 28 column 7. File: js-aofs-nithindenkada/tribonacci.js Line: 35\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 36\",\n    +   \"Missing space before opening brace. File: js-aofs-nithindenkada/tribonacci.js Line: 36\",\n    +   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/tribonacci.js Line: 39\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 40\",\n    +   \"Missing space before opening brace. File: js-aofs-nithindenkada/tribonacci.js Line: 40\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 41\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 42\",\n    +   \"Assignment to function parameter 'number1'. File: js-aofs-nithindenkada/tribonacci.js Line: 42\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 43\",\n    +   \"Assignment to function parameter 'number2'. File: js-aofs-nithindenkada/tribonacci.js Line: 43\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 44\",\n    +   \"Assignment to function parameter 'number3'. File: js-aofs-nithindenkada/tribonacci.js Line: 44\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 45\",\n    +   \"Assignment to function parameter 'number4'. File: js-aofs-nithindenkada/tribonacci.js Line: 45\",\n    +   \"Operator '+' must be spaced. File: js-aofs-nithindenkada/tribonacci.js Line: 45\",\n    +   \"Operator '+' must be spaced. File: js-aofs-nithindenkada/tribonacci.js Line: 45\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 46\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 46\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 46\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/tribonacci.js Line: 46\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 47\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/tribonacci.js Line: 47\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 48\",\n    +   \"Unnecessary 'else' after 'return'. File: js-aofs-nithindenkada/tribonacci.js Line: 48\",\n    +   \"Expected indentation of 4 spaces but found 6. File: js-aofs-nithindenkada/tribonacci.js Line: 49\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/tribonacci.js Line: 50\",\n    +   \"Expected indentation of 0 spaces but found 2. File: js-aofs-nithindenkada/tribonacci.js Line: 51\",\n    +   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/tribonacci.js Line: 51\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › nithindenkada › array_equals › should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]\n\n    evalmachine.<anonymous>:35\n        if (array1.length != array2.length) {\n                   ^\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\n      at arrayEqualOrNot (evalmachine.<anonymous>:35:16)\n      at evalmachine.<anonymous>:50:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › nithindenkada › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 43\n\n    - Array []\n    + Array [\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 3\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 3\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 4\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 4\",\n    +   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/array_equals.js Line: 11\",\n    +   \"Expected a function expression. File: js-aofs-nithindenkada/array_equals.js Line: 31\",\n    +   \"Function 'arrayEqualOrNot' has too many lines (19). Maximum allowed is 15. File: js-aofs-nithindenkada/array_equals.js Line: 31\",\n    +   \"Unexpected space before function parentheses. File: js-aofs-nithindenkada/array_equals.js Line: 31\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 31\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 32\",\n    +   \"Operator '||' must be spaced. File: js-aofs-nithindenkada/array_equals.js Line: 32\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 33\",\n    +   \"Operator '===' must be spaced. File: js-aofs-nithindenkada/array_equals.js Line: 33\",\n    +   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/array_equals.js Line: 33\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 34\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 35\",\n    +   \"Expected '!==' and instead saw '!='. File: js-aofs-nithindenkada/array_equals.js Line: 35\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 36\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 37\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 38\",\n    +   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/array_equals.js Line: 38\",\n    +   \"There should be no space before this paren. File: js-aofs-nithindenkada/array_equals.js Line: 38\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 39\",\n    +   \"Unary word operator 'typeof' must be followed by whitespace. File: js-aofs-nithindenkada/array_equals.js Line: 39\",\n    +   \"Operator '===' must be spaced. File: js-aofs-nithindenkada/array_equals.js Line: 39\",\n    +   \"Unary word operator 'typeof' must be followed by whitespace. File: js-aofs-nithindenkada/array_equals.js Line: 39\",\n    +   \"Expected indentation of 6 spaces but found 11. File: js-aofs-nithindenkada/array_equals.js Line: 40\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 40\",\n    +   \"Expected '!==' and instead saw '!='. File: js-aofs-nithindenkada/array_equals.js Line: 40\",\n    +   \"Expected indentation of 8 spaces but found 14. File: js-aofs-nithindenkada/array_equals.js Line: 41\",\n    +   \"Expected indentation of 6 spaces but found 12. File: js-aofs-nithindenkada/array_equals.js Line: 42\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 43\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/array_equals.js Line: 43\",\n    +   \"Expected indentation of 4 spaces but found 7. File: js-aofs-nithindenkada/array_equals.js Line: 44\",\n    +   \"Expected indentation of 6 spaces but found 11. File: js-aofs-nithindenkada/array_equals.js Line: 45\",\n    +   \"Expected indentation of 4 spaces but found 8. File: js-aofs-nithindenkada/array_equals.js Line: 46\",\n    +   \"Expected indentation of 2 spaces but found 5. File: js-aofs-nithindenkada/array_equals.js Line: 47\",\n    +   \"Expected indentation of 2 spaces but found 4. File: js-aofs-nithindenkada/array_equals.js Line: 48\",\n    +   \"Expected indentation of 0 spaces but found 1. File: js-aofs-nithindenkada/array_equals.js Line: 49\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/array_equals.js Line: 50\",\n    +   \"Newline required at end of file but not found. File: js-aofs-nithindenkada/array_equals.js Line: 50\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}\n\n    evalmachine.<anonymous>:38\n      let array_1 = Object.keys(obj1);\n                           ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at objectEqual (evalmachine.<anonymous>:38:24)\n      at objectEqual (evalmachine.<anonymous>:51:18)\n      at evalmachine.<anonymous>:34:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log true when OBJECT_1=null and OBJECT_2=null\n\n    evalmachine.<anonymous>:38\n      let array_1 = Object.keys(obj1);\n                           ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at objectEqual (evalmachine.<anonymous>:38:24)\n      at evalmachine.<anonymous>:34:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log false when OBJECT_1=undefined and OBJECT_2={}\n\n    evalmachine.<anonymous>:38\n      let array_1 = Object.keys(obj1);\n                           ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at objectEqual (evalmachine.<anonymous>:38:24)\n      at evalmachine.<anonymous>:34:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log false when OBJECT_1={} and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:39\n      let array_2 = Object.keys(obj2);\n                           ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at objectEqual (evalmachine.<anonymous>:39:24)\n      at evalmachine.<anonymous>:34:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log true when OBJECT_1=undefined and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:38\n      let array_1 = Object.keys(obj1);\n                           ^\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      at objectEqual (evalmachine.<anonymous>:38:24)\n      at evalmachine.<anonymous>:34:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   false,\n    +   true,\n      ]\n\n    \u001b[0m \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 38 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m {timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m})\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 39 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 40 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 41 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 42 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:39:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  -  1\n    + Received  + 59\n\n    - Array []\n    + Array [\n    +   \"There should be no space before ','. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n    +   \"Missing space before value for key 'd'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n    +   \"A space is required after '{'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n    +   \"Missing space before value for key 'b'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n    +   \"Missing space before value for key 'a'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n    +   \"A space is required before '}'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n    +   \"A space is required before '}'. File: js-aofs-nithindenkada/object_equals.js Line: 3\",\n    +   \"Missing space before value for key 'd'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n    +   \"A space is required after '{'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n    +   \"Missing space before value for key 'a'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n    +   \"Missing space before value for key 'b'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n    +   \"A space is required before '}'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n    +   \"A space is required before '}'. File: js-aofs-nithindenkada/object_equals.js Line: 4\",\n    +   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/object_equals.js Line: 5\",\n    +   \"More than 1 blank line not allowed. File: js-aofs-nithindenkada/object_equals.js Line: 32\",\n    +   \"'objectEqual' was used before it was defined. File: js-aofs-nithindenkada/object_equals.js Line: 33\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 33\",\n    +   \"Missing semicolon. File: js-aofs-nithindenkada/object_equals.js Line: 33\",\n    +   \"Expected a function expression. File: js-aofs-nithindenkada/object_equals.js Line: 35\",\n    +   \"Function 'objectEqual' has too many lines (25). Maximum allowed is 15. File: js-aofs-nithindenkada/object_equals.js Line: 35\",\n    +   \"A space is required after ','. File: js-aofs-nithindenkada/object_equals.js Line: 35\",\n    +   \"Block must not be padded by blank lines. File: js-aofs-nithindenkada/object_equals.js Line: 35\",\n    +   \"Trailing spaces not allowed. File: js-aofs-nithindenkada/object_equals.js Line: 36\",\n    +   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 37\",\n    +   \"'array_1' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/object_equals.js Line: 37\",\n    +   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 38\",\n    +   \"'array_2' is never reassigned. Use 'const' instead. File: js-aofs-nithindenkada/object_equals.js Line: 38\",\n    +   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 39\",\n    +   \"Expected '!==' and instead saw '!='. File: js-aofs-nithindenkada/object_equals.js Line: 39\",\n    +   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 39\",\n    +   \"Expected indentation of 4 spaces but found 3. File: js-aofs-nithindenkada/object_equals.js Line: 40\",\n    +   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 42\",\n    +   \"Unexpected whitespace before semicolon. File: js-aofs-nithindenkada/object_equals.js Line: 42\",\n    +   \"Missing space before opening brace. File: js-aofs-nithindenkada/object_equals.js Line: 42\",\n    +   \"Expected indentation of 4 spaces but found 5. File: js-aofs-nithindenkada/object_equals.js Line: 43\",\n    +   \"Operator '<' must be spaced. File: js-aofs-nithindenkada/object_equals.js Line: 44\",\n    +   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 44\",\n    +   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 45\",\n    +   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 45\",\n    +   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 46\",\n    +   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 46\",\n    +   \"Closing curly brace does not appear on the same line as the subsequent block. File: js-aofs-nithindenkada/object_equals.js Line: 48\",\n    +   \"Expected indentation of 8 spaces but found 0. File: js-aofs-nithindenkada/object_equals.js Line: 48\",\n    +   \"Unary word operator 'typeof' must be followed by whitespace. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n    +   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n    +   \"Operator '&&' must be spaced. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n    +   \"Unary word operator 'typeof' must be followed by whitespace. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n    +   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n    +   \"Operator '===' must be spaced. File: js-aofs-nithindenkada/object_equals.js Line: 49\",\n    +   \"Identifier 'array_1' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 50\",\n    +   \"Identifier 'array_2' is not in camel case. File: js-aofs-nithindenkada/object_equals.js Line: 50\",\n    +   \"Missing semicolon. File: js-aofs-nithindenkada/object_equals.js Line: 50\",\n    +   \"Expected space(s) after \\\"if\\\". File: js-aofs-nithindenkada/object_equals.js Line: 54\",\n    +   \"Expected '===' and instead saw '=='. File: js-aofs-nithindenkada/object_equals.js Line: 54\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › omkardalu › categorise › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Assignment to function parameter 'similers'. File: js-aofs-omkardalu/categorise.js Line: 35\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › omkardalu › array_equals › should log true when given two arrays are null\n\n    evalmachine.<anonymous>:32\n      if (firstArray.length !== secondArray.length) {\n                     ^\n\n    TypeError: Cannot read properties of null (reading 'length')\n\n      at check (evalmachine.<anonymous>:32:18)\n      at areTheyEqual (evalmachine.<anonymous>:42:8)\n      at evalmachine.<anonymous>:58:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › array_equals › should log false when ARRAY_1=undefined and ARRAY_2=null\n\n    evalmachine.<anonymous>:32\n      if (firstArray.length !== secondArray.length) {\n                     ^\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\n      at check (evalmachine.<anonymous>:32:18)\n      at areTheyEqual (evalmachine.<anonymous>:42:8)\n      at evalmachine.<anonymous>:58:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › array_equals › should log false when ARRAY_1=undefined and ARRAY_2=[1, 2, 3]\n\n    evalmachine.<anonymous>:32\n      if (firstArray.length !== secondArray.length) {\n                     ^\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\n      at check (evalmachine.<anonymous>:32:18)\n      at areTheyEqual (evalmachine.<anonymous>:42:8)\n      at evalmachine.<anonymous>:58:13\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › array_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"More than 1 blank line not allowed. File: js-aofs-omkardalu/array_equals.js Line: 57\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › omkardalu › object_equals › should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log true when OBJECT_1={} and OBJECT_2={}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log true when OBJECT_1=null and OBJECT_2=null\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log false when OBJECT_1=undefined and OBJECT_2={}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log false when OBJECT_1={} and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log true when OBJECT_1=undefined and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    evalmachine.<anonymous>:57\n    console.log(areTheyEqual(ARRAY_1, ARRAY_2));\n                             ^\n\n    ReferenceError: ARRAY_1 is not defined\n\n      at evalmachine.<anonymous>:57:26\n      at Object.runInContext (test/test.js:38:33)\n\n  ● JS-AOFS › omkardalu › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Function has too many lines (17). Maximum allowed is 15. File: js-aofs-omkardalu/object_equals.js Line: 40\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', age: 20};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', age: 20};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', age: 20};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', age: 20};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', age: 20};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log true when OBJECT_1={} and OBJECT_2={}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', marks:{maths: 100, science: 90}};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', marks:{maths: 100, science: 90}};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', marks: null};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', marks: undefined};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Ram', marks: undefined};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {name: 'Raju', address: {location: 'Hyderabad'}};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log true when OBJECT_1=null and OBJECT_2=null\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = null;\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log false when OBJECT_1=undefined and OBJECT_2={}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log false when OBJECT_1={} and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = undefined;\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log true when OBJECT_1=undefined and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = undefined;\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = {0:1};\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    evalmachine.<anonymous>:46\n    } else if (OBJECT_1 === undefined || OBJECT_2 = [1];\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    SyntaxError: Invalid left-hand side in assignment\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › sampathkumarreddy123 › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"This line has a length of 93. Maximum allowed is 80. File: js-aofs-sampathkumarreddy123/object_equals.js Line: 50\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log true when OBJECT_1={} and OBJECT_2={}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log true when OBJECT_1=null and OBJECT_2=null\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log false when OBJECT_1=undefined and OBJECT_2={}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log false when OBJECT_1={} and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log true when OBJECT_1=undefined and OBJECT_2=undefined\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log false when OBJECT_1=[1] and OBJECT_2={0:1}\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should log false when OBJECT_1={0:1} and OBJECT_2=[1]\n\n    evalmachine.<anonymous>:46\n      return false;\n      ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 32 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 36 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:34:30)\n\n  ● JS-AOFS › suneethalokarapu › object_equals › should follow coding conventions\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 3\n\n    - Array []\n    + Array [\n    +   \"Unnecessary 'else' after 'return'. File: js-aofs-suneethalokarapu/object_equals.js Line: 46\",\n    + ]\n\n    \u001b[0m \u001b[90m 77 |\u001b[39m               )\n     \u001b[90m 78 |\u001b[39m             )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(messages)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 80 |\u001b[39m           })\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m         })\u001b[33m;\u001b[39m\n     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toEqual (test/test.js:79:30)\n","name":"/home/runner/work/test-suite/test-suite/test/test.js","startTime":1724748936681,"status":"failed","summary":""}],"wasInterrupted":false}
