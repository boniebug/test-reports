{"numFailedTestSuites":1,"numFailedTests":95,"numPassedTestSuites":0,"numPassedTests":4444,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":4539,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1724242486632,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Amarendra7062","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Amarendra7062","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Amarendra7062","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Amarendra7062","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Amarendra7062","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Amarendra7062 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":23,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","AshwakKattubadi45","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS AshwakKattubadi45 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Balaraju2007","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Balaraju2007","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Balaraju2007","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Balaraju2007","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Balaraju2007","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Balaraju2007 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Chandiniruttala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Chandiniruttala object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Charantej21","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Charantej21","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Charantej21","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Charantej21","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Charantej21","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Charantej21","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Charantej21","object_equals"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Charantej21 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","array_equals"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Dhanalaxmi-Mendadala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Dhanalaxmi-Mendadala object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","G-Rajini","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","G-Rajini","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","G-Rajini","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","G-Rajini","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","G-Rajini","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","G-Rajini","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","G-Rajini","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS G-Rajini object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","GOWRIPRASADTW","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS GOWRIPRASADTW object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Harshavardhanlav","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Harshavardhanlav object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","HemPradeepthummala","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS HemPradeepthummala object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","JAGADEESH2004PJ","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS JAGADEESH2004PJ object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","even_odd"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","KARTHEEK-TAMADA","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KARTHEEK-TAMADA object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","KalluriBhagyasree","object_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS KalluriBhagyasree object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Krishnakoushik005","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Krishnakoushik005 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Kshivaji333","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Kshivaji333","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Kshivaji333","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Kshivaji333","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Kshivaji333","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Kshivaji333 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Nagalakshmivaranasi","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nagalakshmivaranasi object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Nithin7411","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Nithin7411","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Nithin7411","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Nithin7411","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Nithin7411","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Nithin7411","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Nithin7411","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Nithin7411 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Pardhasaradhi031","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pardhasaradhi031 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Pujari-Praveen","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Pujari-Praveen object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","RAKESHGURUGU","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS RAKESHGURUGU object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Rafiya1207","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Rafiya1207","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Rafiya1207","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Rafiya1207","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Rafiya1207","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rafiya1207 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Revanth-backbencher","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Revanth-backbencher object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Rohith-216","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Rohith-216","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Rohith-216","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Rohith-216","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Rohith-216","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Rohith-216","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Rohith-216","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Rohith-216 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","SACHITH31","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","SACHITH31","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","SACHITH31","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":3,"failureDetails":[{"matcherResult":{"actual":[" "],"expected":[""],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"\",\n+   \" \",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"\",\n+   \" \",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":4,"failureDetails":[{"matcherResult":{"actual":[" Leading spaces!!!"],"expected":["Leading spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Leading spaces!!!\",\n+   \" Leading spaces!!!\",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Leading spaces!!!\",\n+   \" Leading spaces!!!\",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[" Leading spaces!!! & Trailing Spaces!!! "],"expected":["Leading spaces!!! & Trailing Spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Leading spaces!!! & Trailing Spaces!!!\",\n+   \" Leading spaces!!! & Trailing Spaces!!! \",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Leading spaces!!! & Trailing Spaces!!!\",\n+   \" Leading spaces!!! & Trailing Spaces!!! \",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":2,"failureDetails":[{"matcherResult":{"actual":["Trailing Spaces!!! "],"expected":["Trailing Spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Trailing Spaces!!!\",\n+   \"Trailing Spaces!!! \",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"Trailing Spaces!!!\",\n+   \"Trailing Spaces!!! \",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","SACHITH31","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[" こんにちは 世界 "],"expected":["こんにちは 世界"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"こんにちは 世界\",\n+   \" こんにちは 世界 \",\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   \"こんにちは 世界\",\n+   \" こんにちは 世界 \",\n  ]\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS SACHITH31 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","SACHITH31","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","SACHITH31","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","SACHITH31","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SACHITH31 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","SaiLokeshGoud","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SaiLokeshGoud object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","tribonacci"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Saicharanteja-844","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Saicharanteja-844 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Shek-Nowshik66","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Shek-Nowshik66 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Siddhu83","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Siddhu83","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Siddhu83","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Siddhu83","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Siddhu83","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Siddhu83","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Siddhu83","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Siddhu83 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","SkAkramali","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","SkAkramali","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","SkAkramali","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","SkAkramali","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","SkAkramali","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","SkAkramali","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","SkAkramali","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS SkAkramali object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Sravani175","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Sravani175","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Sravani175","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sravani175 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["One extra space!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"One extra space!!!\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"One extra space!!!\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["Multiple extra spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"Multiple extra spaces!!!\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"Multiple extra spaces!!!\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[""],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[""],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["SingleWord"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"SingleWord\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"SingleWord\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["a"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"a\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"a\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["ItsALongSentenceWithoutAnySpaces"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"ItsALongSentenceWithoutAnySpaces\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"ItsALongSentenceWithoutAnySpaces\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["Leading spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"Leading spaces!!!\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"Leading spaces!!!\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["Leading spaces!!! & Trailing Spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"Leading spaces!!! & Trailing Spaces!!!\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"Leading spaces!!! & Trailing Spaces!!!\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[],"expected":["Trailing Spaces!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"Trailing Spaces!!!\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"Trailing Spaces!!!\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["String \t with \t spaces \t and \t tabs!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"String \t with \t spaces \t and \t tabs!!!\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"String \t with \t spaces \t and \t tabs!!!\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["String \n with \n spaces \n and \n newlines!!!"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 7\n+ Received  + 1\n\n- Array [\n-   \"String \n-  with \n-  spaces \n-  and \n-  newlines!!!\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 7\n+ Received  + 1\n\n- Array [\n-   \"String \n-  with \n-  spaces \n-  and \n-  newlines!!!\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["123 456 789"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"123 456 789\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"123 456 789\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Sravani175","remove_adjacent_spaces"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":["こんにちは 世界"],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"こんにちは 世界\",\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   \"こんにちは 世界\",\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[0,0,1,1,2,4,7]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 11\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-   ],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 11\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-   ],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[0,0,1,1,2,4,7,13,24]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 13\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-     13,\n-     24,\n-   ],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 13\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-     13,\n-     24,\n-   ],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[0,0,1,1,2,4,7,13,24,44,81]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 15\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-     13,\n-     24,\n-     44,\n-     81,\n-   ],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 15\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-     13,\n-     24,\n-     44,\n-     81,\n-   ],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[0,0,1,1,2,4,7,13,24,44,81,149,274]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 17\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-     13,\n-     24,\n-     44,\n-     81,\n-     149,\n-     274,\n-   ],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 17\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-     13,\n-     24,\n-     44,\n-     81,\n-     149,\n-     274,\n-   ],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[0,0,1,1,2]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 9\n+ Received  + 1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-   ],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 9\n+ Received  + 1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-   ],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[0,0,1,1]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 8\n+ Received  + 1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-   ],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 8\n+ Received  + 1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-   ],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[0,0]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 6\n+ Received  + 1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-   ],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 6\n+ Received  + 1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-   ],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":0,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   Array [],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   Array [],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   Array [],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   Array [],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   Array [],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   Array [],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Sravani175","tribonacci"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[[0,0,1,1,2,4,7,13,24,44,81,149,274,504,927,1705,3136,5768]],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 22\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-     13,\n-     24,\n-     44,\n-     81,\n-     149,\n-     274,\n-     504,\n-     927,\n-     1705,\n-     3136,\n-     5768,\n-   ],\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 22\n+ Received  +  1\n\n- Array [\n-   Array [\n-     0,\n-     0,\n-     1,\n-     1,\n-     2,\n-     4,\n-     7,\n-     13,\n-     24,\n-     44,\n-     81,\n-     149,\n-     274,\n-     504,\n-     927,\n-     1705,\n-     3136,\n-     5768,\n-   ],\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":28,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":6,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Sravani175","array_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":6,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":2,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":3,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":0,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Sravani175","object_equals"],"duration":0,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS Sravani175 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Sreenayak","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Sreenayak","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Sreenayak","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Sreenayak","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Sreenayak","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Sreenayak","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Sreenayak","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Sreenayak object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Triveni12062006","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Triveni12062006","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Triveni12062006","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Triveni12062006","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Triveni12062006","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Triveni12062006 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","tribonacci"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","VETR1-V1GNESH","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VETR1-V1GNESH object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","VUPPUKULADEEP","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS VUPPUKULADEEP object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","Venkat14424","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","Venkat14424","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","Venkat14424","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","Venkat14424","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","Venkat14424","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","Venkat14424","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","Venkat14424","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS Venkat14424 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","YMOURYA25","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","YMOURYA25","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","YMOURYA25","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","YMOURYA25","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","YMOURYA25","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS YMOURYA25 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","balasatish1","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","balasatish1","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","balasatish1","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","balasatish1","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","balasatish1","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","balasatish1","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","balasatish1","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS balasatish1 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","harshavardhan-macha","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS harshavardhan-macha object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","hemeswar9849","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","hemeswar9849","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","hemeswar9849","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","hemeswar9849","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","hemeswar9849","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS hemeswar9849 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","jayanth-14","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","jayanth-14","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","jayanth-14","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","jayanth-14","remove_adjacent_spaces"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","jayanth-14","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","jayanth-14","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","jayanth-14","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS jayanth-14 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","even_odd"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","kumarnandeesh","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS kumarnandeesh object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","mr-mouli03","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","mr-mouli03","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":33,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","mr-mouli03","tribonacci"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","mr-mouli03","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","mr-mouli03","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS mr-mouli03 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","naveen-kumar-vadla","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS naveen-kumar-vadla object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","nithindenkada","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","nithindenkada","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","nithindenkada","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","nithindenkada","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":3,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:31\n    return result;\n    ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:32:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:31\n    return result;\n    ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:32:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:31\n    return result;\n    ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:32:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:31\n    return result;\n    ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:32:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:31\n    return result;\n    ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:32:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:31\n    return result;\n    ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:32:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:31\n    return result;\n    ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:32:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:31\n    return result;\n    ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:32:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:31\n    return result;\n    ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:32:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":0,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:31\n    return result;\n    ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:32:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","nithindenkada","tribonacci"],"duration":1,"failureDetails":[{}],"failureMessages":["evalmachine.<anonymous>:31\n    return result;\n    ^^^^^^\n\nSyntaxError: Illegal return statement\n    at new Script (node:vm:99:7)\n    at Object.<anonymous> (/home/runner/work/test-suite/test-suite/test/test.js:32:30)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","nithindenkada","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithindenkada array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[false],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   false,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","nithindenkada","object_equals"],"duration":1,"failureDetails":[{"matcherResult":{"actual":[],"expected":[true],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 3\n+ Received  + 1\n\n- Array [\n-   true,\n- ]\n+ Array []\n    at Object.toEqual (/home/runner/work/test-suite/test-suite/test/test.js:37:32)\n    at Promise.then.completed (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/runner/work/test-suite/test-suite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/runner/work/test-suite/test-suite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JS-AOFS nithindenkada object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","nithish-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","nithish-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","nithish-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","nithish-29","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","nithish-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","nithish-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","nithish-29","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS nithish-29 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","omkardalu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","omkardalu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","omkardalu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","omkardalu","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","omkardalu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","omkardalu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","omkardalu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS omkardalu object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","sampathkumarreddy123","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sampathkumarreddy123 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","siriBaratam","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","siriBaratam","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","siriBaratam","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","siriBaratam","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","siriBaratam","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","siriBaratam","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","siriBaratam","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS siriBaratam object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","sohan-29","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","sohan-29","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","sohan-29","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","sohan-29","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","sohan-29","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","sohan-29","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","sohan-29","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS sohan-29 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","categorise"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","entries"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","suneethalokarapu","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS suneethalokarapu object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [0, 1, 2, 3, 4, 5]"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = [-5, -4, -3, -2, -1, 0]"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should print object with even, odd numbers when NUMBERS = []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS = []"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should print object with even, odd numbers when NUMBERS contains only even numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only even numbers"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should print object with even, odd numbers when NUMBERS contains only odd numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains only odd numbers"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should print object with even, odd numbers when NUMBERS contains single even number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single even number"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should print object with even, odd numbers when NUMBERS contains single odd number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains single odd number"},{"ancestorTitles":["JS-AOFS","umarfarook07","even_odd"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 even_odd should print object with even, odd numbers when NUMBERS contains duplicates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print object with even, odd numbers when NUMBERS contains duplicates"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS = [1, 2, 1, 2, 3, 1, 2]"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all unique values [5, 4, 3, 2, 1]"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with all identical values [7, 7, 7, 7]"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an empty array []","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an empty array []"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with mixed positive an negative numbers [1, -1, 2, -2, 1, -1]"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with zeros [0, 1, 0, 2, 0]"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an array with large numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large numbers"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an array with single element [7]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with single element [7]"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with consecutive repetitive number [2, 2, 2, 3, 4, 4, 4]"},{"ancestorTitles":["JS-AOFS","umarfarook07","categorise"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 categorise should group by value NUMBERS is an array with large no.of elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should group by value NUMBERS is an array with large no.of elements"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT={name: 'Raju', occupation: 'Developer'}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT contains numeric keys OBJECT={1: 'a', 2: 'b', 3: 'c'}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has boolean values OBJECT={isActive: true, isVerified: false}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has nested objects OBJECT={user: {name: 'Raju', age: 30}, role: 'Developer'}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has array values OBJECT={topics: ['HTML', 'CSS', 'JavaScript'], title: 'Web Design'}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT is empty OBJECT={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is empty OBJECT={}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has undefined values OBJECT={name: 'Raju', age: undefined}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT has null values OBJECT={name: 'Raju', age: null}"},{"ancestorTitles":["JS-AOFS","umarfarook07","entries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 entries should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide entries for when OBJECT is an object with special characters in keys OBJECT={first-name: 'Raju', 'last name': 'Singh'}"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT contains only 1 extra space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only 1 extra space"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT contains multiple extra spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains multiple extra spaces"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT contains only space","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT contains only space"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT is empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is empty string"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT is a single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single word"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT is a single character","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is a single character"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT has no spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has no spaces"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT has leading spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has leading spaces"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT  has leading & trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT  has leading & trailing spaces"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT has trailing spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has trailing spaces"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & tabs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & tabs"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT has mixed spaces & newlines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT has mixed spaces & newlines"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT is numeric string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is numeric string with spaces"},{"ancestorTitles":["JS-AOFS","umarfarook07","remove_adjacent_spaces"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 remove_adjacent_spaces should remove extra spaces when TEXT is multi lingual string with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove extra spaces when TEXT is multi lingual string with spaces"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=7","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=7"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=24","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=24"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=100"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=300","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=300"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=2"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=1"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=0"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=-1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-1"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=-2","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-2"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence for ENDING_RANGE=-10","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence for ENDING_RANGE=-10"},{"ancestorTitles":["JS-AOFS","umarfarook07","tribonacci"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 tribonacci should print the sequence when ENDING_RANGE is a larger number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should print the sequence when ENDING_RANGE is a larger number"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log true when given two very large arrays with same data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two very large arrays with same data"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log false when given two very large arrays with different data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when given two very large arrays with different data"},{"ancestorTitles":["JS-AOFS","umarfarook07","array_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 array_equals should log true when given two arrays are null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when given two arrays are null"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1={} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}"},{"ancestorTitles":["JS-AOFS","umarfarook07","object_equals"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-AOFS umarfarook07 object_equals should log true when OBJECT_1=null and OBJECT_2=null","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log true when OBJECT_1=null and OBJECT_2=null"}],"endTime":1724242492174,"message":"  ● JS-AOFS › SACHITH31 › remove_adjacent_spaces › should remove extra spaces when TEXT contains only space\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"\",\n    +   \" \",\n      ]\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › SACHITH31 › remove_adjacent_spaces › should remove extra spaces when TEXT has leading spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"Leading spaces!!!\",\n    +   \" Leading spaces!!!\",\n      ]\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › SACHITH31 › remove_adjacent_spaces › should remove extra spaces when TEXT  has leading & trailing spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"Leading spaces!!! & Trailing Spaces!!!\",\n    +   \" Leading spaces!!! & Trailing Spaces!!! \",\n      ]\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › SACHITH31 › remove_adjacent_spaces › should remove extra spaces when TEXT has trailing spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"Trailing Spaces!!!\",\n    +   \"Trailing Spaces!!! \",\n      ]\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › SACHITH31 › remove_adjacent_spaces › should remove extra spaces when TEXT is multi lingual string with spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   \"こんにちは 世界\",\n    +   \" こんにちは 世界 \",\n      ]\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT contains only 1 extra space\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"One extra space!!!\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT contains multiple extra spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"Multiple extra spaces!!!\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT contains only space\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT is empty string\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT is a single word\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"SingleWord\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT is a single character\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"a\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT has no spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"ItsALongSentenceWithoutAnySpaces\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT has leading spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"Leading spaces!!!\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT  has leading & trailing spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"Leading spaces!!! & Trailing Spaces!!!\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT has trailing spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"Trailing Spaces!!!\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT has mixed spaces & tabs\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"String \t with \t spaces \t and \t tabs!!!\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT has mixed spaces & newlines\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 7\n    + Received  + 1\n\n    - Array [\n    -   \"String \n    -  with \n    -  spaces \n    -  and \n    -  newlines!!!\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT is numeric string with spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"123 456 789\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › remove_adjacent_spaces › should remove extra spaces when TEXT is multi lingual string with spaces\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   \"こんにちは 世界\",\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=7\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 11\n    + Received  +  1\n\n    - Array [\n    -   Array [\n    -     0,\n    -     0,\n    -     1,\n    -     1,\n    -     2,\n    -     4,\n    -     7,\n    -   ],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=24\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 13\n    + Received  +  1\n\n    - Array [\n    -   Array [\n    -     0,\n    -     0,\n    -     1,\n    -     1,\n    -     2,\n    -     4,\n    -     7,\n    -     13,\n    -     24,\n    -   ],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=100\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 15\n    + Received  +  1\n\n    - Array [\n    -   Array [\n    -     0,\n    -     0,\n    -     1,\n    -     1,\n    -     2,\n    -     4,\n    -     7,\n    -     13,\n    -     24,\n    -     44,\n    -     81,\n    -   ],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=300\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 17\n    + Received  +  1\n\n    - Array [\n    -   Array [\n    -     0,\n    -     0,\n    -     1,\n    -     1,\n    -     2,\n    -     4,\n    -     7,\n    -     13,\n    -     24,\n    -     44,\n    -     81,\n    -     149,\n    -     274,\n    -   ],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=2\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 9\n    + Received  + 1\n\n    - Array [\n    -   Array [\n    -     0,\n    -     0,\n    -     1,\n    -     1,\n    -     2,\n    -   ],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=1\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 8\n    + Received  + 1\n\n    - Array [\n    -   Array [\n    -     0,\n    -     0,\n    -     1,\n    -     1,\n    -   ],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=0\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 6\n    + Received  + 1\n\n    - Array [\n    -   Array [\n    -     0,\n    -     0,\n    -   ],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=-1\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   Array [],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=-2\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   Array [],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence for ENDING_RANGE=-10\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   Array [],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › tribonacci › should print the sequence when ENDING_RANGE is a larger number\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 22\n    + Received  +  1\n\n    - Array [\n    -   Array [\n    -     0,\n    -     0,\n    -     1,\n    -     1,\n    -     2,\n    -     4,\n    -     7,\n    -     13,\n    -     24,\n    -     44,\n    -     81,\n    -     149,\n    -     274,\n    -     504,\n    -     927,\n    -     1705,\n    -     3136,\n    -     5768,\n    -   ],\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log true when given two arrays are identical ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two arrays with different lengths ARRAY_1=[1, 2, 3] and ARRAY_2=[1, 2, 3, 4]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two arrays with same lengths but different elements ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 4]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two arrays with same lengths same elements in different order ARRAY_1=[1, 2, 3] and ARRAY_2=[2, 3, 1]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log true when given two empty arrays ARRAY_1=[] and ARRAY_2=[]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given one empty array and one non-empty array ARRAY_1=[1, 2, 3] and ARRAY_2=[]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two arrays with different data types ARRAY_1=[1, '2', 3] and ARRAY_2=[1, 2, 3]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log true when given two arrays with mixed data types but identical ARRAY_1=[1, '2', 3] and ARRAY_2=[1, '2', 3]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log true when given two identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two non-identical arrays with nested arrays ARRAY_1=[1, 2, 3, [4, 6]] and ARRAY_2=[1, 2, 3, [4, 5, 6]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log true when given two identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [125]]]]]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two non-identical arrays with deep nested arrays ARRAY_1=[1, 2, 3, [4, 5, 6, [100, 99, 44, [20, 19, 16, [10, 20], ['hello', 'app'], ['hi', [123]]]]]] and ARRAY_2=[1, 2, 3, [4, 5, 6, [100, 99, 44, ['20', 19, '16', [10, '20'], ['hello', 'app'], ['hi', [123]]]]]]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two arrays with null values ARRAY_1=[1, 2, null] and ARRAY_2=[1, 3, null]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two arrays with boolean values ARRAY_1=[1, true, 3] and ARRAY_2=[1, false, 3]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two arrays with undefined values ARRAY_1=[1, undefined, 3] and ARRAY_2=[1, 2, 3]\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log true when given two very large arrays with same data\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log false when given two very large arrays with different data\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › array_equals › should log true when given two arrays are null\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1={} and OBJECT_2={}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › Sravani175 › object_equals › should log true when OBJECT_1=null and OBJECT_2=null\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › tribonacci › should print the sequence for ENDING_RANGE=7\n\n    evalmachine.<anonymous>:31\n        return result;\n        ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 30 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 31 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 34 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:32:30)\n\n  ● JS-AOFS › nithindenkada › tribonacci › should print the sequence for ENDING_RANGE=24\n\n    evalmachine.<anonymous>:31\n        return result;\n        ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 30 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 31 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 34 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:32:30)\n\n  ● JS-AOFS › nithindenkada › tribonacci › should print the sequence for ENDING_RANGE=100\n\n    evalmachine.<anonymous>:31\n        return result;\n        ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 30 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 31 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 34 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:32:30)\n\n  ● JS-AOFS › nithindenkada › tribonacci › should print the sequence for ENDING_RANGE=300\n\n    evalmachine.<anonymous>:31\n        return result;\n        ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 30 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 31 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 34 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:32:30)\n\n  ● JS-AOFS › nithindenkada › tribonacci › should print the sequence for ENDING_RANGE=2\n\n    evalmachine.<anonymous>:31\n        return result;\n        ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 30 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 31 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 34 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:32:30)\n\n  ● JS-AOFS › nithindenkada › tribonacci › should print the sequence for ENDING_RANGE=1\n\n    evalmachine.<anonymous>:31\n        return result;\n        ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 30 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 31 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 34 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:32:30)\n\n  ● JS-AOFS › nithindenkada › tribonacci › should print the sequence for ENDING_RANGE=0\n\n    evalmachine.<anonymous>:31\n        return result;\n        ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 30 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 31 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 34 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:32:30)\n\n  ● JS-AOFS › nithindenkada › tribonacci › should print the sequence for ENDING_RANGE=-1\n\n    evalmachine.<anonymous>:31\n        return result;\n        ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 30 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 31 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 34 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:32:30)\n\n  ● JS-AOFS › nithindenkada › tribonacci › should print the sequence for ENDING_RANGE=-2\n\n    evalmachine.<anonymous>:31\n        return result;\n        ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 30 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 31 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 34 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:32:30)\n\n  ● JS-AOFS › nithindenkada › tribonacci › should print the sequence for ENDING_RANGE=-10\n\n    evalmachine.<anonymous>:31\n        return result;\n        ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 30 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 31 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 34 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:32:30)\n\n  ● JS-AOFS › nithindenkada › tribonacci › should print the sequence when ENDING_RANGE is a larger number\n\n    evalmachine.<anonymous>:31\n        return result;\n        ^^^^^^\n\n    SyntaxError: Illegal return statement\n\n    \u001b[0m \u001b[90m 30 |\u001b[39m             test(description\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 31 |\u001b[39m               \u001b[36mconst\u001b[39m code \u001b[33m=\u001b[39m studentCode(repo\u001b[33m,\u001b[39m spec\u001b[33m,\u001b[39m input\u001b[33m,\u001b[39m handler)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 |\u001b[39m               \u001b[36mconst\u001b[39m script \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m vm\u001b[33m.\u001b[39m\u001b[33mScript\u001b[39m(code)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 33 |\u001b[39m               \u001b[36mconst\u001b[39m context \u001b[33m=\u001b[39m vm\u001b[33m.\u001b[39mcreateContext()\u001b[33m;\u001b[39m\n     \u001b[90m 34 |\u001b[39m               \u001b[36mlet\u001b[39m actual\u001b[33m;\u001b[39m\n     \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (test/test.js:32:30)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log true when OBJECT_1={name: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log false when OBJECT_1={name: 'Ravi', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log false when OBJECT_1={username: 'Ram', age: 20} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log false when OBJECT_1={name: 'Ram', age: 20, location: 'Hyderabad'} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log true when OBJECT_1={age: 20, name: 'Ram'} and OBJECT_2={name: 'Ram', age: 20}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log true when OBJECT_1={} and OBJECT_2={}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log true when OBJECT_1={name: 'Ram', marks:{maths: 100, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log false when OBJECT_1={name: 'Ram', marks:{maths: 90, science: 90}} and OBJECT_2={name: 'Ram', marks:{maths: 100, science: 90}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log true when OBJECT_1={name: 'Ram', marks: null} and OBJECT_2={name: 'Ram', marks: null}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log true when OBJECT_1={name: 'Ram', marks: undefined} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log false when OBJECT_1={name: 'Ram'} and OBJECT_2={name: 'Ram', marks: undefined}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log false when OBJECT_1={name: 'Raju', address: null} and OBJECT_2={name: 'Raju', address: {location: 'Hyderabad'}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log true when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100, key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {random_key: 'random value', key6: 100, key7: 'value7', key9: null, key10: {}}}}}}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log false when OBJECT_1={key1: {key2: {key3: {key4: {key5: {key6: 100}, key11: 'value11'}}}}} and OBJECT_2={key1: {key2: {key3: {key4: {key5: {key6: '100', key7: 'value7', key8: 'value8', key9: null, key10: {}}, key11: 'value11'}, key12: 5}}}}\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   false,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n\n  ● JS-AOFS › nithindenkada › object_equals › should log true when OBJECT_1=null and OBJECT_2=null\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Array [\n    -   true,\n    - ]\n    + Array []\n\n    \u001b[0m \u001b[90m 35 |\u001b[39m               \u001b[36mtry\u001b[39m {\n     \u001b[90m 36 |\u001b[39m                 actual \u001b[33m=\u001b[39m script\u001b[33m.\u001b[39mrunInContext(context\u001b[33m,\u001b[39m { timeout\u001b[33m:\u001b[39m \u001b[35m1500\u001b[39m })\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 |\u001b[39m                 expect(actual)\u001b[33m.\u001b[39mtoEqual(expected)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 38 |\u001b[39m               } \u001b[36mcatch\u001b[39m (err) {\n     \u001b[90m 39 |\u001b[39m                 \u001b[36mif\u001b[39m (err\u001b[33m.\u001b[39mcode \u001b[33m===\u001b[39m \u001b[32m'ERR_SCRIPT_EXECUTION_TIMEOUT'\u001b[39m) {\n     \u001b[90m 40 |\u001b[39m                   \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[0m\n\n      at Object.toEqual (test/test.js:37:32)\n","name":"/home/runner/work/test-suite/test-suite/test/test.js","startTime":1724242486657,"status":"failed","summary":""}],"wasInterrupted":false}
