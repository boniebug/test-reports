var a=A=>{},b=_=>{const B=[..._.children].slice(1);for(const C of B)[...C.classList].includes('hide')?C.classList.remove('hide'):C.classList.add('hide')},c=_a=>{const _b=_a.ancestorTitles,_c=_a.status==='passed',D=[0,25,50],g=document.createElement('div'),h=document.createElement('img');let e=document.querySelector('#results');_b.forEach((_A,_B)=>{let _C=document.querySelector(`#${e.id}-${_A}`);if(!_C){const E=`${D[_B%_b.length]}px`;_C=document.createElement('div');_C.id=`${e.id}-${_A}`;const aA=document.createElement('div'),_D=document.createElement('p');aA.addEventListener('click',()=>b(_C));aA.classList.add(_B%2===0?'title-container-even':'title-container-odd');_B==0&&aA.classList.add('assignment-title');const aB=document.createElement('img');aB.style=`margin-left: ${E};`;let _e=` ${_A}`;_B==1&&(_e+=`<a style="color:#b7b7b7;margin-left: 20px" href='https://github.com/path-tw/js-basics-${_A}'>Access code here</a>`,aB.classList.add('student-result'));_D.innerHTML=_e;_D.classList.add('title');aA.append(aB);aA.append(_D);_C.append(aA);e.append(_C)}const _d=_C.children[0].children[0];_d.src=!_d.src.includes('failed')&&_c?`images/passed.png`:'images/failed.png';_B!==0&&_C.classList.add('hide');e=_C});const f=document.createElement('div');f.className=_c?'test-passed hide':'test-failed hide';h.src=_c?`images/passed.png`:'images/failed.png';const i=document.createElement('p');i.className='test-description';i.innerText=`${_a.title}`;if(!_c){const aC=_a.failureDetails[0].matcherResult;if(aC){const{expected:aD,actual:aE}=aC;i.innerText+=`\n\nExpected:\n${aD.join('\n')} \n\n Received:\n${aE.join('\n')}`}else i.innerText+='\n\n'+_a.failureMessages.map(aF=>aF.split('\n').slice(0,5).join('\n')).join('\n')}f.style=`padding-left: ${D[_b.length-1]+25}px; border-bottom: 1px solid #dad8da;`;g.className='test';g.append(h,i);f.append(g);e.append(f)},d=aG=>{let aH=document.querySelector('.assignment-title');aH.innerHTML+=`<span style="color:#b7b7b7;margin-left: 20px">Last updated: ${aG}</span>`;const aI=document.querySelectorAll('.student-result');let aJ=[...aI].reduce((aK,aL)=>{let aM='Pending';aL.src.includes('passed')&&(aM='Finished');aK[aM]=aK[aM]||0;aK[aM]++;return aK},{Finished:0,Pending:0});aH.innerHTML+=`<span style="color:rgba(0, 128, 0, 0.5);margin-left: 20px;">Finished: ${aJ.Finished}</span>`;aH.innerHTML+=`<span style="color:rgba(255, 0, 0, 0.5);margin-left: 20px;">Pending: ${aJ.Pending}</span>`};window.onload=async ()=>{var aN=await fetch('results.json').then(res=>res.json());for(const aO of aN.testResults[0].assertionResults)c(aO);d(new Date(aN.startTime).toLocaleString())};
